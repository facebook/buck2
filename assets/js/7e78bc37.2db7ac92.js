"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[37877],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},61164:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/bxl/AnalysisResult","title":"AnalysisResult","description":"The result of running an analysis in bxl.","source":"@site/../docs/api/bxl/AnalysisResult.md","sourceDirName":"api/bxl","slug":"/api/bxl/AnalysisResult","permalink":"/docs/api/bxl/AnalysisResult","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"Actions","permalink":"/docs/api/bxl/Actions"},"next":{"title":"AqueryContext","permalink":"/docs/api/bxl/AqueryContext"}}');var i=s(74848),r=s(28453),l=s(56289);const a={},o="AnalysisResult",d={},c=[{value:"AnalysisResult.as_dependency",id:"analysisresultas_dependency",level:2},{value:"AnalysisResult.providers",id:"analysisresultproviders",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"analysisresult",children:"AnalysisResult"})}),"\n",(0,i.jsx)(n.p,{children:"The result of running an analysis in bxl."}),"\n",(0,i.jsx)(n.h2,{id:"analysisresultas_dependency",children:"AnalysisResult.as_dependency"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["def AnalysisResult.as_dependency(\n) -> ",(0,i.jsx)(l.default,{to:"/docs/api/build/Dependency",children:"Dependency"})]})}),"\n",(0,i.jsxs)(n.p,{children:["Converts the analysis result into a ",(0,i.jsx)(n.code,{children:"Dependency"}),". Currently, you can only get a ",(0,i.jsx)(n.code,{children:"Dependency"})," without any transitions. This means that you cannot create an exec dep or toolchain from an analysis result."]}),"\n",(0,i.jsx)(n.p,{children:"We may support other dependency transition types in the future."}),"\n",(0,i.jsxs)(n.p,{children:["This is useful for passing in the results of ",(0,i.jsx)(n.code,{children:"ctx.analysis()"})," into anon targets."]}),"\n",(0,i.jsx)(n.p,{children:"Sample usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def _impl_dependency(ctx):\n    node = ctx.configured_targets("root//bin:the_binary")\n    dependency = ctx.analysis(node).as_dependency()\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"analysisresultproviders",children:"AnalysisResult.providers"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["def AnalysisResult.providers(\n) -> ",(0,i.jsx)(l.default,{to:"/docs/api/build/ProviderCollection",children:"ProviderCollection"})]})}),"\n",(0,i.jsxs)(n.p,{children:["Access the providers of the rule. Returns a ",(0,i.jsx)(n.code,{children:"ProviderCollection"})," the same as accessing providers of dependencies within a rule implementation."]}),"\n",(0,i.jsx)(n.p,{children:"Sample usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def _impl_providers(ctx):\n    node = ctx.configured_targets("root//bin:the_binary")\n    providers = ctx.analysis(node).providers()\n    ctx.output.print(providers[FooInfo])\n    providers = ctx.analysis("//:bin").providers()\n    ctx.output.print(providers[FooInfo])\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);