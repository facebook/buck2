# Copyright 2004-present Facebook. All Rights Reserved.
load("@fbcode//buck2:buck_rust_binary.bzl", "buck_rust_binary")
load("@fbcode_macros//build_defs:custom_rule.bzl", "custom_rule")
load("@fbcode_macros//build_defs:export_files.bzl", "export_file")
load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")

buck_rust_binary(
    name = "build",
    srcs = ["build.rs"],
    crate_root = "build.rs",
    deps = [
        "fbsource//third-party/rust:tonic-build",
    ],
)

custom_rule(
    name = "rust_proto",
    srcs = [
        "daemon.proto",
    ],
    build_script_dep = ":build",
    env = {
        "BUCK_HACK_PROTOC_INCLUDE": "$(location //buck2/buck2_data:data.proto)",
        "OUT_DIR": "$OUT",
        "PROTOC": "$(exe fbsource//third-party/protobuf:protoc)",
        "PROTOC_INCLUDE": "$(location fbsource//third-party/protobuf:google.protobuf)",
    },
    output_gen_files = ["."],
)

rust_library(
    name = "cli_proto",
    srcs = ["src/lib.rs"],
    env = {
        # This is where tonic looks for generated .rs files
        "OUT_DIR": "$(location :rust_proto)",
    },
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:prost",
        "fbsource//third-party/rust:prost-types",
        "fbsource//third-party/rust:serde",
        "fbsource//third-party/rust:thiserror",
        "fbsource//third-party/rust:tonic",
        "//buck2/buck2_data:buck2_data",
    ],
)

# For python tests only
export_file(
    name = "daemon.proto",
)
