"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[67377],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var i=n(96540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}},35154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"prelude/rules/android/android_platform","title":"android_platform","description":"Function Signature","source":"@site/../docs/prelude/rules/android/android_platform.md","sourceDirName":"prelude/rules/android","slug":"/prelude/rules/android/android_platform","permalink":"/docs/prelude/rules/android/android_platform","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_manifest","permalink":"/docs/prelude/rules/android/android_manifest"},"next":{"title":"android_prebuilt_aar","permalink":"/docs/prelude/rules/android/android_prebuilt_aar"}}');var r=n(74848),s=n(28453);n(56289);const a={},d="android_platform",l={},o=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3}];function c(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"android_platform",children:"android_platform"})}),"\n",(0,r.jsx)(t.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'def android_platform(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    base_platform: str,\n    native_platforms: dict[str, str] = {},\n) -> None\n'})}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(t.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(t.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);