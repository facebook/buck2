"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31990],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(96540);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}},91854:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"users/how_tos/compilation_database","title":"Compilation databases","description":"You can generate compilation databases for consumption by tools such as clangd","source":"@site/../docs/users/how_tos/compilation_database.md","sourceDirName":"users/how_tos","slug":"/users/how_tos/compilation_database","permalink":"/docs/users/how_tos/compilation_database","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"compilation_database","title":"Compilation databases"},"sidebar":"main","previous":{"title":"?modifier CLI Syntax","permalink":"/docs/users/how_tos/question_mark_modifier"},"next":{"title":"Overview","permalink":"/docs/users/languages/go/overview"}}');var s=n(74848),o=n(28453);const i={id:"compilation_database",title:"Compilation databases"},r="Generating compilation databases",l={},c=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"generating-compilation-databases",children:"Generating compilation databases"})}),"\n",(0,s.jsx)(t.p,{children:"You can generate compilation databases for consumption by tools such as clangd\nand clang-tidy by running the following BXL script:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"buck2 bxl prelude//cxx/tools/compilation_database.bxl:generate -- --targets ...\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The script will generate a compilation database for all source and header inputs\nto the targets listed on the command line. The path to the database is printed\nto ",(0,s.jsx)(t.code,{children:"stdout"}),". Note that files that are referenced by multiple targets will have\nmultiple associated entries in the database, which may not be desirable in all\ncircumstances. For example, clang-tidy runs analysis for each entry sequentially\nwhen the file being linted has several entries."]}),"\n",(0,s.jsx)(t.p,{children:"It is common to symlink the resulting data at the root of the repository:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"ln -sf $(buck2 bxl prelude//cxx/tools/compilation_database.bxl:generate -- --targets ...) $(git rev-parse --show-toplevel)\n"})}),"\n",(0,s.jsx)(t.p,{children:"Since the path to the script is rather long, consider setting up an alias in\nyour repository:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'# `comp_db.bxl`\n\nload("@prelude//cxx/tools/compilation_database.bxl:generate", "generate")\n\ngen = generate\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"ln -sf $(buck2 bxl comp_db.bxl:gen -- --targets ...) $(git rev-parse --show-toplevel)\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Providing better ergonomics for BXL scripts (such as enabling something like\n",(0,s.jsx)(t.code,{children:"buck2 comp_db"}),") is being discussed\n",(0,s.jsx)(t.a,{href:"https://github.com/facebook/buck2/issues/86",children:"here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);