"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[46387],{28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>d});var t=n(96540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}},56367:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"prelude/rules/rust/rust_library","title":"rust_library","description":"A rust\\\\_library() rule builds a native library from the supplied set of Rust source files and dependencies.","source":"@site/../docs/prelude/rules/rust/rust_library.md","sourceDirName":"prelude/rules/rust","slug":"/prelude/rules/rust/rust_library","permalink":"/docs/prelude/rules/rust/rust_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"rust_binary","permalink":"/docs/prelude/rules/rust/rust_binary"},"next":{"title":"rust_test","permalink":"/docs/prelude/rules/rust/rust_test"}}');var r=n(74848),i=n(28453);n(56289);const l={},d="rust_library",o={},c=[{value:"Details",id:"details",level:3},{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function a(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"rust_library",children:"rust_library"})}),"\n",(0,r.jsx)(s.p,{children:"A rust_library() rule builds a native library from the supplied set of Rust source files and dependencies."}),"\n",(0,r.jsx)(s.h3,{id:"details",children:"Details"}),"\n",(0,r.jsxs)(s.p,{children:["If you invoke a build with the ",(0,r.jsx)(s.code,{children:"check"})," flavor, then Buck will invoke rustc\nto check the code (typecheck, produce warnings, etc), but won't generate an executable code.\nWhen applied to binaries it produces no output; for libraries it produces metadata for\nconsumers of the library."]}),"\n",(0,r.jsx)(s.p,{children:"Note: Buck is currently tested with (and therefore supports) version 1.32.0 of Rust."}),"\n",(0,r.jsx)(s.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'def rust_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _create_third_party_build_root: str = "prelude//third-party/tools:create_build",\n    _cxx_toolchain: str = "gh_facebook_buck2_shims_meta//:cxx",\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _rust_internal_tools_toolchain: str = "prelude//rust/tools:internal_tools_toolchain",\n    _rust_toolchain: str = "gh_facebook_buck2_shims_meta//:rust",\n    _target_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _workspaces: list[str] = [],\n    clippy_configuration: None | str = None,\n    contacts: list[str] = [],\n    coverage: bool = False,\n    crate: None | str = None,\n    crate_dynamic: None | str = None,\n    crate_root: None | str = None,\n    default_host_platform: None | str = None,\n    default_platform: None | str = None,\n    deps: list[str] = [],\n    doc_deps: list[str] = [],\n    doc_env: dict[str, str] = {},\n    doc_link_style: None | str = None,\n    doc_linker_flags: list[str] = [],\n    doc_named_deps: list[(str, str)] | dict[str, str] = {},\n    doctests: None | bool = None,\n    edition: None | str = None,\n    env: dict[str, str] = {},\n    exported_linker_flags: list[str] = [],\n    exported_post_linker_flags: list[str] = [],\n    features: list[str] = [],\n    flagged_deps: list[(str, list[str])] = [],\n    incremental_enabled: bool = False,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    link_style: None | str = None,\n    link_whole: None | bool = None,\n    linker_flags: list[str] = [],\n    mapped_srcs: dict[str, str] = {},\n    named_deps: list[(str, str)] | dict[str, str] = {},\n    preferred_linkage: str = "any",\n    proc_macro: bool = False,\n    resources: list[str] | dict[str, str] = [],\n    rustc_flags: list[str] = [],\n    rustdoc_flags: list[str] = [],\n    separate_debug_info: bool = False,\n    soname: None | str = None,\n    srcs: list[str] = [],\n    supports_python_dlopen: None | bool = None,\n) -> None\n'})}),"\n",(0,r.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(s.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(s.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"_workspaces"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Internal implementation detail of Rust workspaces. This should not be set manually and will be replaced in favor of metadata in a future version of buck2."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"contacts"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"crate_root"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set the name of the top-level source file for the crate, which can be used to override the default (see ",(0,r.jsx)(s.code,{children:"srcs"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"deps"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of dependencies of this rule. Currently, this supports rust_library and prebuilt_rust_library rules."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"doc_deps"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of dependencies of this rule. Currently, this supports rust_library and prebuilt_rust_library rules."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"doc_env"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Set environment variables for this rule's invocations of rustc. The environment variable values may include macros which are expanded."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"doc_link_style"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Determines whether to build and link this rule's dependencies statically or dynamically. Can be either ",(0,r.jsx)(s.code,{children:"static"}),", ",(0,r.jsx)(s.code,{children:"static_pic"})," or ",(0,r.jsx)(s.code,{children:"shared"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"doc_linker_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of additional flags to pass to the linker."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"doc_named_deps"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Add crate dependencies and define a local name by which to use that dependency by. This allows a crate to have multiple dependencies with the same crate name. For example: ",(0,r.jsx)(s.code,{children:'named_deps = {"local_name", ":some_rust_crate" }'}),". The dependencies may also be non-Rust, but the alias is ignored. It has no effect on the symbols provided by a C/C++ library."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"edition"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set the language edition to be used for this rule. Can be set to any edition the compiler supports (",(0,r.jsx)(s.code,{children:"2018"})," right now). If unset it uses the compiler's default (",(0,r.jsx)(s.code,{children:"2015"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"env"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Set environment variables for this rule's invocations of rustc. The environment variable values may include macros which are expanded."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exported_linker_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"A set of additional flag to pass before this item on the link line, even if this items is compiled to a DSO."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exported_post_linker_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"A set of additional flag to pass after this item on the link line, even if this items is compiled to a DSO."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"features"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of features to be enabled for this rule."}),"\n",(0,r.jsxs)(s.p,{children:["These are passed to ",(0,r.jsx)(s.code,{children:"rustc"})," with ",(0,r.jsx)(s.code,{children:'--cfg feature="{feature}"'}),", and can be used in the code with ",(0,r.jsx)(s.code,{children:'#[cfg(feature = "{feature}")]'}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"labels"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,r.jsx)(s.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,r.jsx)(s.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"licenses"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,r.jsx)(s.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"link_style"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Determines whether to build and link this rule's dependencies statically or dynamically. Can be either ",(0,r.jsx)(s.code,{children:"static"}),", ",(0,r.jsx)(s.code,{children:"static_pic"})," or ",(0,r.jsx)(s.code,{children:"shared"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"linker_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of additional flags to pass to the linker."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"mapped_srcs"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Add source files along with a local path mapping. Rust is sensitive to the layout of source files, as the directory structure follows the module structure. However this is awkward if the source file is, for example, generated by another rule. In this case, you can set up a mapping from the actual source path to something that makes sense locally. For example ",(0,r.jsx)(s.code,{children:'mapped_srcs = {":generate-module", "src/generated.rs" }'}),". These are added to the regular ",(0,r.jsx)(s.code,{children:"srcs"}),", so a file should not be listed in both."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"named_deps"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Add crate dependencies and define a local name by which to use that dependency by. This allows a crate to have multiple dependencies with the same crate name. For example: ",(0,r.jsx)(s.code,{children:'named_deps = {"local_name", ":some_rust_crate" }'}),". The dependencies may also be non-Rust, but the alias is ignored. It has no effect on the symbols provided by a C/C++ library."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"rustc_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["The set of additional compiler flags to pass to ",(0,r.jsx)(s.code,{children:"rustc"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"soname"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:['Sets the soname ("shared object name") of any shared library produced from this rule. The default value is based on the full rule name. The macro ',(0,r.jsx)(s.code,{children:"$(ext)"})," will be replaced with a platform-appropriate extension. An argument can be provided, which is a library version. For example ",(0,r.jsx)(s.code,{children:"soname = 'libfoo.$(ext 2.3)'"})," will be ",(0,r.jsx)(s.code,{children:"libfoo.2.3.dylib"})," on Mac and ",(0,r.jsx)(s.code,{children:"libfoo.so.2.3"})," on Linux."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"srcs"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of Rust source files to be compiled by this rule."}),"\n",(0,r.jsxs)(s.p,{children:["One of the source files is the root module of the crate. By default this is ",(0,r.jsx)(s.code,{children:"lib.rs"})," for libraries, ",(0,r.jsx)(s.code,{children:"main.rs"})," for executables, or\nthe crate's name with ",(0,r.jsx)(s.code,{children:".rs"})," appended. This can be overridden with the ",(0,r.jsx)(s.code,{children:"crate_root"})," rule parameter."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(s.p,{children:["For more examples, check out our ",(0,r.jsx)(s.a,{href:"https://github.com/facebook/buck/tree/dev/test/com/facebook/buck/rust/testdata/",children:"integration tests"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"\nrust_library(\n  name='greeting',\n  srcs=[\n    'greeting.rs',\n  ],\n  deps=[\n    ':join',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);