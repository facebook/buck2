Those are fixtures used for CLI tests. The idea is to not regenerate them very
often, we should only need to do this when our daemon / cli protocol changes.

Those fixtures are event logs, so they should be possible to re-generate by
just re-running the corresponding build.

Regenerate `my_genrule0` using, from the `buck2` path:

```
rm "$(hg root)/fbcode/buck2/tests/core/console/fixtures/my_genrule0.proto" && \
./buck2.py build fbcode//buck2/tests/targets/rules/genrule:my_genrule0 --prefer-remote && \
./buck2.py kill && \
./buck2.py build fbcode//buck2/tests/targets/rules/genrule:my_genrule0 --prefer-remote --event-log "$(hg root)/fbcode/buck2/tests/core/console/fixtures/my_genrule0.proto"
```

(this runs Buck twice to ensure we get a cache hit)

You also need to update the action digests in `test_whatran` and `test_whatran_no_repo` in test_console.py.
To find the new digest, run:

```
./buck2.py log whatran "$(hg root)/fbcode/buck2/tests/core/console/fixtures/my_genrule0.proto"
```

and you will see a line like:

```
build   fbcode//buck2/tests/targets/rules/genrule:my_genrule0 (ovr_config//platform/linux:x86_64-fbcode-platform010-clang#da4de3c780a17bfa) (genrule)   cache   87eeee88c133dfa39711399a81f500147275cfeeb1f06b6b4805f2c0588615d1:145
```

The last part after "cache" is the action digest.
