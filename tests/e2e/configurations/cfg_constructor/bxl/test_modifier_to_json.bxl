# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# This source code is licensed under both the MIT license found in the
# LICENSE-MIT file in the root directory of this source tree and the Apache
# License, Version 2.0 found in the LICENSE-APACHE file in the root directory
# of this source tree.

load("@fbcode//buck2/cfg/experimental:modifiers.bzl", "modifiers")
load("@prelude//:asserts.bzl", "asserts")
load("@prelude//cfg/modifier:common.bzl", "json_to_tagged_modifiers", "tagged_modifiers_to_json")
load("@prelude//cfg/modifier:types.bzl", "ModifierPackageLocation", "ModifierTargetLocation", "TaggedModifiers")

def _impl(_ctx: bxl.Context):
    for location in (
        ModifierPackageLocation(package_path = "fbcode//buck2/PACKAGE"),
        ModifierTargetLocation(),
    ):
        tagged_modifiers = TaggedModifiers(
            modifiers = [modifiers.match({
                "ovr_config//os/constraints:linux": modifiers.match({
                    "DEFAULT": "ovr_config//build_mode/constraints:no-san",
                    "ovr_config//cpu/constraints:x86_64": "ovr_config//build_mode/constraints:asan",
                }),
                "ovr_config//os/constraints:windows": modifiers.match({
                    "DEFAULT": modifiers.match({
                        "ovr_config//cpu/constraints:x86_64": "ovr_config//build_mode/constraints:tsan",
                    }),
                }),
            })],
            location = location,
            rule_name = None,
        )
        asserts.equals(tagged_modifiers, json_to_tagged_modifiers(tagged_modifiers_to_json(tagged_modifiers)))

test = bxl_main(
    cli_args = {},
    impl = _impl,
)
