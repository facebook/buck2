native.java_library(
    name = "normal_dep",
    srcs = ["Simple.java"],
)

native.prebuilt_jar(
    name = "exported_dep",
    binary_jar = "tiny.jar",
)


native.java_library(
    name = "provided_dep",
    srcs = ["Simple.java"],
)

native.java_library(
    name = "exported_provided_dep",
    srcs = ["Simple.java"],
)

native.java_library(
    name = "runtime_dep",
    srcs = ["Simple.java"],
)

native.java_library(
    name = "library_with_deps",
    deps = [":normal_dep"],
    exported_deps = [":exported_dep"],
    provided_deps = [":provided_dep"],
    exported_provided_deps = [":exported_provided_dep"],
    runtime_deps = [":runtime_dep"],
)

native.java_library(
    name = "library_depends_on_library_with_deps",
    deps = [":library_with_deps"],
    srcs = ["Simple.java"],
)

native.genrule(
    name = "check_first_order_classpath_of_library_with_deps",
    out = "out.txt",
    cmd = "echo \"$(query_targets 'classpath(:library_with_deps, 1)')\" | grep ':normal_dep' | grep ':exported_dep' | grep ':runtime_dep' | grep -v ':provided_dep' | grep -v ':exported_provided_dep' && touch $OUT",
)

native.genrule(
    name = "check_first_order_classpath_includes_does_not_include_exported_deps_of_deps",
    out = "out.txt",
    cmd = "echo \"$(query_targets 'classpath(:library_depends_on_library_with_deps, 1)')\" | grep 'library_with_deps' | grep -v ':exported_dep' && touch $OUT",
)

native.genrule(
    name = "check_full_classpath_of_library_which_depends_on_library_with_all_types_of_dep",
    out = "out.txt",
    cmd = "echo \"$(query_targets 'classpath(:library_depends_on_library_with_deps)')\" | grep library_depends_on_library_with_deps | grep ':normal_dep' | grep ':exported_dep' | grep ':runtime_dep' | grep -v ':provided_dep' | grep -v ':exported_provided_dep' && touch $OUT",
)
