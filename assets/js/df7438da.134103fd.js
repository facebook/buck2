"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29288],{28453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>a});var t=n(96540);const s={},i=t.createContext(s);function r(e){const o=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:o},e.children)}},91119:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"users/languages/go/overview","title":"Overview","description":"This is an overview of using Buck2 to build Go projects. It assumes you have a","source":"@site/../docs/users/languages/go/overview.md","sourceDirName":"users/languages/go","slug":"/users/languages/go/overview","permalink":"/docs/users/languages/go/overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"overview","title":"Overview"},"sidebar":"main","previous":{"title":"Compilation databases","permalink":"/docs/users/how_tos/compilation_database"},"next":{"title":"Toolchains","permalink":"/docs/users/languages/go/toolchains"}}');var s=n(74848),i=n(28453);const r={id:"overview",title:"Overview"},a="Overview",c={},l=[{value:"Just need an example?",id:"just-need-an-example",level:2},{value:"The UX differences between Buck2 and <code>go build</code>",id:"the-ux-differences-between-buck2-and-go-build",level:2},{value:"The types of targets",id:"the-types-of-targets",level:2},{value:"How to write Go targets",id:"how-to-write-go-targets",level:2},{value:"How to pass options to <code>buck2</code> commands",id:"how-to-pass-options-to-buck2-commands",level:2},{value:"Envs GOOS and GOARCH",id:"envs-goos-and-goarch",level:3},{value:"Test options like <code>-test.bench</code>",id:"test-options-like--testbench",level:3}];function d(e){const o={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{FbInternalOnly:n,OssOnly:t}=o;return n||u("FbInternalOnly",!0),t||u("OssOnly",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"overview",children:"Overview"})}),"\n",(0,s.jsxs)(o.p,{children:["This is an overview of using Buck2 to build Go projects. It assumes you have a\nbasic understanding of Buck2 and Go. If you are completely new to Buck2, see the\n",(0,s.jsx)(o.a,{href:"/docs/getting_started/",children:"Buck2 Getting Started"})," to learn the basic\nconcepts."]}),"\n",(0,s.jsx)(o.h2,{id:"just-need-an-example",children:"Just need an example?"}),"\n",(0,s.jsxs)(o.p,{children:["Check out the\n",(0,s.jsx)(o.strong,{children:(0,s.jsx)(o.a,{href:"https://github.com/facebook/buck2/tree/main/examples/toolchains/go_toolchain",children:"examples/toolchains/go_toolchain"})}),"\nproject for an example of a Go project using Buck2. This example supports\nhermetic toolchains, third-party dependency management, cross-compilation, and\nmultiple execution platforms."]}),"\n",(0,s.jsxs)(o.h2,{id:"the-ux-differences-between-buck2-and-go-build",children:["The UX differences between Buck2 and ",(0,s.jsx)(o.code,{children:"go build"})]}),"\n",(0,s.jsx)(o.p,{children:"Buck2 is a general-purpose build system, so you need to provide more information\nabout your project:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["You need to tell Buck2 that specific code is Go code. This is done by\ndeclaring targets like ",(0,s.jsx)(o.code,{children:"go_binary"})," in ",(0,s.jsx)(o.code,{children:"BUCK"})," files."]}),"\n",(0,s.jsxs)(o.li,{children:["You need to tell Buck2 where dependencies of a particular target are. This is\ndone by adding ",(0,s.jsx)(o.code,{children:"deps"})," to the target definition."]}),"\n",(0,s.jsxs)(o.li,{children:["You need to configure Buck2 where to find the Go compiler and other tools by\nadding ",(0,s.jsx)(o.code,{children:"go_toolchain"})," to the ",(0,s.jsx)(o.code,{children:"toolchains"})," cell. You also need to map some\nBuck2 configuration options to Go options like GOOS/GOARCH."]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"the-types-of-targets",children:"The types of targets"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"go_binary"})," - a binary target (",(0,s.jsx)(o.code,{children:'package "main"'}),")"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"go_library"})," - a library target (other packages)"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"go_test"})," - a test target (tests for any packages)"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"go_exported_library"})," - a target that exports a C-compatible interface for Go\ncode (a special case of ",(0,s.jsx)(o.code,{children:'package "main"'}),")"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"how-to-write-go-targets",children:"How to write Go targets"}),"\n",(0,s.jsx)(o.p,{children:"Buck2 offers lots of flexibility in how you can write your targets, but it makes\nsense to stick to the following conventions for better compatibility with the\nrest of the Go ecosystem:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Keep a single Go package per directory. For example, for a Go library, all\nnon-test ",(0,s.jsx)(o.code,{children:".go"})," files should belong to a single ",(0,s.jsx)(o.code,{children:"go_library"})," and all\n",(0,s.jsx)(o.code,{children:"*_test.go"})," files to a single ",(0,s.jsx)(o.code,{children:"go_test"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:["Put a ",(0,s.jsx)(o.code,{children:"BUCK"})," file in the same directory as the Go package, unless you have a\nreason not to."]}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:'# File: foo/BUCK\n\ngo_library(\n    name = "foo",\n    srcs = glob(["*.go"], exclude = ["*_test.go"]),\n    deps = [\n        "//path/to/other:lib",\n    ],\n)\n\ngo_test(\n    name = "foo_test",\n    srcs = glob(["*_test.go"]),\n    target_under_test = ":foo",\n    deps = [\n        "//path-to-third-party/vendor/go/github.com/stretchr/testify:assert",\n    ],\n)\n'})}),"\n",(0,s.jsxs)(o.h2,{id:"how-to-pass-options-to-buck2-commands",children:["How to pass options to ",(0,s.jsx)(o.code,{children:"buck2"})," commands"]}),"\n",(0,s.jsx)(o.h3,{id:"envs-goos-and-goarch",children:"Envs GOOS and GOARCH"}),"\n",(0,s.jsxs)(o.p,{children:["Compilation for different platforms is done by passing ",(0,s.jsx)(o.code,{children:"--target-platforms"})," or\n",(0,s.jsx)(o.code,{children:"-m"})," (",(0,s.jsx)(o.code,{children:"--modifier"}),") flags to ",(0,s.jsx)(o.code,{children:"buck2"})," commands."]}),"\n",(0,s.jsxs)(o.p,{children:["You need to specify what target platforms you support by declaring them with the\n",(0,s.jsx)(o.code,{children:"platform()"})," rule, or you can avoid pre-declaring them by using configuration\nmodifiers."]}),"\n",(0,s.jsxs)(o.p,{children:["For example, to build for linux/amd64, the following commands are equivalent\n(assuming your project confugured similary to\n",(0,s.jsx)(o.a,{href:"https://github.com/facebook/buck2/tree/main/examples/toolchains/go_toolchain",children:"this example"}),"):"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-sh",children:"$ GOOS=linux GOARCH=amd64 go build example.com/foo/bar\n$ buck2 build --target-platforms root//platforms:linux_x86_64 root//foo/bar:bar\n$ buck2 build -m config//os:linux -m config//arch:x86_64 root//foo/bar:bar\n"})}),"\n",(0,s.jsxs)(o.h3,{id:"test-options-like--testbench",children:["Test options like ",(0,s.jsx)(o.code,{children:"-test.bench"})]}),"\n",(0,s.jsxs)(o.p,{children:["To pass test options, use ",(0,s.jsx)(o.code,{children:"--"})," to separate buck2 options from test options:"]}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-sh",children:"$ buck2 test root//foo/bar:bar -- -test.bench=.\n"})})}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.strong,{children:"Note:"})," You need to use ",(0,s.jsx)(o.code,{children:"run"})," instead of ",(0,s.jsx)(o.code,{children:"test"})," otherwise you'll be passing options to TPX"]}),"\n"]}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-sh",children:"$ buck2 run root//foo/bar:bar -- -test.bench=.\n"})})]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function u(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);