aliases:
  - &is_main_branch
      equal: [ main, << pipeline.git.branch >> ]

commands:
  print_versions:
    description: Version Info
    steps:
      - run:
          name: Version Info
          command: |
            rustup show
            rustc --version
            cargo --version
            rustup --version

  setup_linux_env:
    description: Setup env for Linux
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install libssl-dev cmake protobuf-compiler clang opam
      - run:
          name: Init opam
          command: |
            opam init --disable-sandboxing -y
            opam install menhir -y
      - print_versions

  setup_macos_env:
    description: Setup env for macOS
    steps:
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run: brew install cmake protobuf coreutils opam
      - run:
          name: Init opam
          command: |
            opam init --disable-sandboxing -y
            opam install menhir -y
      - print_versions

  setup_windows_env:
    description: Setup env for Windows
    steps:
      - run:
          name: Install Rust
          command: |
            choco install rustup.install
            write-output "[net]`ngit-fetch-with-cli = true" | out-file -append -encoding utf8 $Env:USERPROFILE/.cargo/config
            type $Env:USERPROFILE/.cargo/config
      - run: choco install protoc
      - print_versions

version: 2.1
orbs:
  rust: circleci/rust@1.6.0
  win: circleci/windows@2.2.0
jobs:
  linux-test-and-upload:
    description: |
      Run tests and upload buck2 binary for Linux
    docker:
      - image: cimg/rust:1.65.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_linux_env
      - rust/clippy:
          with_cache: false
      - rust/build:
          with_cache: false
      - rust/test:
          with_cache: false
      - run:
          name: Build buck2 binary
          command: |
            mkdir /tmp/artifacts
            cargo build --bin=buck2 --release -Z unstable-options --out-dir=/tmp/artifacts
      - run:
          name: Setup and build example/prelude directory
          command: |
            cd examples/prelude
            ln -s $(realpath ../../prelude) prelude
            eval $(opam env --switch=default)
            /tmp/artifacts/buck2 build //...
      - when:
          condition:
            *is_main_branch
          steps:
            - store_artifacts:
                path: /tmp/artifacts/buck2
                destination: buck2-linux

  macos-test:
    description: |
      Run tests for macOS
    macos:
      xcode: 13.4.1
    resource_class: large
    steps:
      - checkout
      - setup_macos_env
      - rust/clippy:
          with_cache: false
      - rust/test:
          with_cache: false

  macos-build-and-upload:
    description: |
      Build all and upload buck2 binary for MacOS
    macos:
      xcode: 13.4.1
    resource_class: large
    steps:
      - checkout
      - setup_macos_env
      - rust/build:
          with_cache: false
      - run:
          name: Build buck2 binary
          command: |
            mkdir /tmp/artifacts
            cargo build --bin=buck2 --release -Z unstable-options --out-dir=/tmp/artifacts
      - run:
          name: Setup and build example/prelude directory
          command: |
            cd examples/prelude
            ln -s $(realpath ../../prelude) prelude
            eval $(opam env --switch=default)
            /tmp/artifacts/buck2 build //...
      - when:
          condition:
            *is_main_branch
          steps:
            - store_artifacts:
                path: /tmp/artifacts/buck2
                destination: buck2-macos

  windows-build-and-upload:
    description: |
      Build all and upload buck2 binary for Windows
    executor:
      name: win/default
      size: "xlarge"
      shell: powershell.exe
    steps:
      - checkout
      - setup_windows_env
      - rust/clippy:
          with_cache: false
      - rust/test:
          with_cache: false
      - rust/build:
          with_cache: false
      - run:
          name: Build buck2 binary
          command: |
            mkdir C:/tmp/artifacts
            cargo build --bin=buck2 --release -Z unstable-options --out-dir=C:/tmp/artifacts
      - run:
          name: Setup and build example/prelude directory
          command: |
            cd examples/prelude
            cmd.exe /c mklink /D prelude C:\Users\circleci\project\prelude
            C:/tmp/artifacts/buck2.exe build //...
      - when:
          condition:
            *is_main_branch
          steps:
          - store_artifacts:
              path: C:/tmp/artifacts/buck2.exe
              destination: buck2-windows.exe

workflows:
  test-and-upload:
    jobs:
      - linux-test-and-upload
      - macos-test
      - macos-build-and-upload
      - windows-build-and-upload
