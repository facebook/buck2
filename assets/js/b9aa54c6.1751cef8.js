"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[99870],{8064:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"prelude/rules/android/android_instrumentation_test","title":"android_instrumentation_test","description":"An androidinstrumentationtest() rule is used to define apks that should be used to run Android instrumentation tests.","source":"@site/../docs/prelude/rules/android/android_instrumentation_test.md","sourceDirName":"prelude/rules/android","slug":"/prelude/rules/android/android_instrumentation_test","permalink":"/docs/prelude/rules/android/android_instrumentation_test","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_instrumentation_apk","permalink":"/docs/prelude/rules/android/android_instrumentation_apk"},"next":{"title":"android_library","permalink":"/docs/prelude/rules/android/android_library"}}');var i=t(74848),r=t(28453);t(56289);const o={},d="android_instrumentation_test",a={},l=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"android_instrumentation_test",children:"android_instrumentation_test"})}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.code,{children:"android_instrumentation_test()"})," rule is used to define apks that should be used to run Android instrumentation tests."]}),"\n",(0,i.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def android_instrumentation_test(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _android_emulators: None | str | (str, str) = None,\n    _android_toolchain: str = "gh_facebook_buck2_shims_meta//:android",\n    _apple_platforms: dict[str, str] = {},\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _inject_test_env: str = "prelude//test/tools:inject_test_env",\n    _java_test_toolchain: str = "gh_facebook_buck2_shims_meta//:java_for_host_test",\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java_for_android",\n    _test_toolchain: str = "gh_facebook_buck2_shims_meta//:test",\n    apk: str,\n    clear_package_data: bool = False,\n    collect_tombstones: bool = False,\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    disable_animations: bool = False,\n    env: dict[str, str] = {},\n    extra_instrumentation_args: None | dict[str, str] = None,\n    instrumentation_test_listener: None | str = None,\n    instrumentation_test_listener_class: None | str = None,\n    is_self_instrumenting: bool = False,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    log_extractors: dict[str, str] = {},\n    meta_internal_extra_params: None | dict[str, typing.Any] = None,\n    re_caps: None | dict[str, dict[str, str]] = None,\n    re_use_case: None | dict[str, str] = None,\n    record_video: bool = False,\n    test_rule_timeout_ms: None | int = None,\n) -> None\n'})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,i.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,i.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"_android_emulators"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,i.jsx)(n.p,{children:'If provided, local resource of "android_emulators" type will be required to run this test locally and this target will be used to manage it. If omitted, local resource of "android_emulators" type will be ignored even if requested by the test runner.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"apk"}),": (required)"]}),"\n",(0,i.jsxs)(n.p,{children:["The APK containing the tests. Can be an ",(0,i.jsx)(n.code,{children:"android_binary()"}),", an ",(0,i.jsx)(n.code,{children:"apk_genrule()"})," or an ",(0,i.jsx)(n.code,{children:"android_instrumentation_apk()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"clear_package_data"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Runs ",(0,i.jsx)(n.code,{children:"pm clear"})," on the app and test packages before the test run if set to True."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"collect_tombstones"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"Checks whether the test generated any tombstones, and downloads them from the emulator if true."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"contacts"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"disable_animations"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"Disables animations on the emulator if set to True."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"labels"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["A list of labels to be applied to these tests. These labels are arbitrary text strings and have no meaning within buck itself. They can, however, have meaning for you as a test author (e.g., ",(0,i.jsx)(n.code,{children:"smoke"})," or ",(0,i.jsx)(n.code,{children:"fast"}),"). A label can be used to filter or include a specific test rule when executing ",(0,i.jsx)(n.code,{children:"buck test"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"licenses"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,i.jsx)(n.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"record_video"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"Record video of test run and collect it as TRA"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"test_rule_timeout_ms"}),": (defaults to: ",(0,i.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["If set specifies the maximum amount of time (in milliseconds) in which all of the tests in this rule should complete. This overrides the default ",(0,i.jsx)(n.code,{children:"rule_timeout"})," if any has been specified in ",(0,i.jsx)(n.code,{children:".buckconfig"})," ."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of an ",(0,i.jsx)(n.code,{children:"android_instrumentation_test()"}),"\nrule that tests an ",(0,i.jsx)(n.code,{children:"android_binary()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"\nandroid_binary(\n  name = 'messenger',\n  manifest = 'AndroidManifest.xml',\n  keystore = '//keystores:prod',\n  package_type = 'release',\n  proguard_config = 'proguard.cfg',\n  deps = [\n    ...\n  ],\n)\n\nandroid_instrumentation_apk(\n  name = 'messenger_test',\n  manifest = 'AndroidInstrumentationManifest.xml',\n  apk = ':messenger',\n  deps = [\n    ...\n  ],\n)\n\nandroid_instrumentation_test(\n  name = 'messenger_instrumentation_test',\n  apk = ':messenger_test',\n)\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);