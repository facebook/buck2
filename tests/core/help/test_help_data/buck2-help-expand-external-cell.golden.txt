# This file is @generated, regenerate by re-running test with `-- --env BUCK2_UPDATE_GOLDEN=1` appended to the test command

Expand the contents of an external cell into the repo.

The contents are placed at the path you specified for this cell in your buckconfig.

If you additionally remove the entry from the `external_cells` section of your buckconfig, you can
edit the files directly in the repo and see those edits reflected in your build.

Note that this creates a point-in-time snapshot. The files in the repo will not be updated if you eg
change the git commit of the cell in the future.

Usage: buck2 expand-external-cell [OPTIONS] [CELLS]...

Arguments:
  [CELLS]...


Options:
      --all-cells
          Expand all cells that Buck2 knows about

  -h, --help
          Print help (see a summary with '-h')

Universal Options:
  -v, --verbose <VERBOSITY>
          How verbose buck should be while logging.

          Values: 0 = Quiet, errors only; 1 = Show status. Default; 2 = more info about errors; 3 =
          more info about everything; 4 = more info about everything + stderr;

          It can be combined with specific log items (stderr, full_failed_command, commands,
          actions, status, stats, success) to fine-tune the verbosity of the log. Example usage
          "-v=1,stderr"

          [default: 1]

      --oncall <ONCALL>
          The oncall executing this command

      --client-metadata <CLIENT_METADATA>
          Metadata key-value pairs to inject into Buck2's logging. Client metadata must be of the
          form `key=value`, where `key` is a snake_case identifier, and will be sent to backend
          datasets
