"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[63447],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(96540);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}},73400:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>_,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"prelude/rules/android/android_bundle","title":"android_bundle","description":"Function Signature","source":"@site/../docs/prelude/rules/android/android_bundle.md","sourceDirName":"prelude/rules/android","slug":"/prelude/rules/android/android_bundle","permalink":"/docs/prelude/rules/android/android_bundle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_build_config","permalink":"/docs/prelude/rules/android/android_build_config"},"next":{"title":"android_instrumentation_apk","permalink":"/docs/prelude/rules/android/android_instrumentation_apk"}}');var r=n(74848),i=n(28453);n(56289);const o={},l="android_bundle",a={},d=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"android_bundle",children:"android_bundle"})}),"\n",(0,r.jsx)(s.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'def android_bundle(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _android_toolchain: str = "gh_facebook_buck2_shims_meta//:android",\n    _apple_platforms: dict[str, str] = {},\n    _cxx_toolchain: str = gh_facebook_buck2_shims_meta//:android-hack,\n    _dex_toolchain: str = "gh_facebook_buck2_shims_meta//:dex",\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _is_building_android_binary: bool = True,\n    _is_force_single_cpu: bool = False,\n    _is_force_single_default_cpu: bool = False,\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java_for_android",\n    aapt2_keep_raw_values: bool = False,\n    aapt2_locale_filtering: bool = False,\n    aapt2_preferred_density: None | str = None,\n    additional_aapt_params: list[str] = [],\n    allow_r_dot_java_in_secondary_dex: bool = False,\n    allowed_duplicate_resource_types: list[str] = [],\n    android_sdk_proguard_config: None | str = None,\n    application_module_blocklist: None | list[str | (str, str)] = None,\n    application_module_configs: dict[str, list[str | (str, str)]] = {},\n    application_module_dependencies: None | dict[str, list[str]] = None,\n    asset_compression_algorithm: None | str = None,\n    banned_duplicate_resource_types: list[str] = [],\n    build_config_values: list[str] = [],\n    build_config_values_file: None | str | (str, str) = None,\n    build_string_source_map: bool = False,\n    bundle_config_file: None | str = None,\n    compiled_resource_apks: list[str] = [],\n    compress_asset_libraries: bool = False,\n    contacts: list[str] = [],\n    cpu_filters: list[str] = [],\n    default_host_platform: None | str = None,\n    default_module_manifest_skeleton: None | str | (str, str) = None,\n    deps: list[str] = [],\n    dex_compression: None | str = None,\n    dex_group_lib_limit: int = 0,\n    disable_pre_dex: bool = False,\n    duplicate_class_checker_enabled: bool = False,\n    duplicate_resource_behavior: str = "allow_by_default",\n    duplicate_resource_whitelist: None | str = None,\n    enable_bootstrap_dexes: bool = False,\n    enable_relinker: bool = False,\n    exclude_duplicate_targets_do_not_use: list[str] = [],\n    exopackage_modes: list[str] = [],\n    extra_filtered_resources: list[str] = [],\n    extra_no_compress_asset_extensions: list[str] = [],\n    extra_no_compress_asset_regex: None | str = None,\n    field_ref_count_buffer_space: int = 0,\n    ignore_aapt_proguard_config: bool = False,\n    includes_vector_drawables: bool = False,\n    is_cacheable: bool = False,\n    is_voltron_language_pack_enabled: bool = False,\n    keystore: str,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    locales: list[str] = [],\n    manifest: None | str | (str, str) = None,\n    manifest_entries: dict[str, typing.Any] = {},\n    manifest_skeleton: None | str | (str, str) = None,\n    method_ref_count_buffer_space: int = 0,\n    min_sdk_version: None | int = None,\n    minimize_primary_dex_size: bool = False,\n    module_manifest_skeleton: dict[str, str | (str, str)] = {},\n    module_manifests: None | str | (str, str) = None,\n    native_library_bolt_args: None | dict[str, list[str]] = None,\n    native_library_merge_code_generator: None | str = None,\n    native_library_merge_glue: None | str = None,\n    native_library_merge_linker_args: None | dict[str, list[str]] = None,\n    native_library_merge_linker_args_all: list[str] = [],\n    native_library_merge_map: None | dict[str, list[str]] = None,\n    native_library_merge_non_asset_libs: bool = False,\n    native_library_merge_sequence: None | list = None,\n    native_library_merge_sequence_blocklist: None | list[str] = None,\n    native_library_pick_first: list[str] = [],\n    no_auto_add_overlay_resources: bool = False,\n    no_auto_version_resources: bool = False,\n    no_dx: list[str] = [],\n    no_version_transitions_resources: bool = False,\n    optimization_passes: int = 1,\n    package_asset_libraries: bool = False,\n    package_type: str = "debug",\n    package_voltron_asset_libraries: bool = False,\n    packaged_locales: list[str] = [],\n    packaging_options: dict[str, list[str]] = {},\n    post_filter_resources_cmd: None | str = None,\n    preprocess_java_classes_bash: None | str = None,\n    preprocess_java_classes_cmd: None | str = None,\n    preprocess_java_classes_deps: list[str] = [],\n    primary_dex_patterns: list[str] = [],\n    proguard_config: None | str = None,\n    proguard_jvm_args: list[str] = [],\n    relinker_extra_args: list[str] = [],\n    relinker_extra_deps: list[str] = [],\n    relinker_whitelist: list[str] = [],\n    resource_compression: str = "disabled",\n    resource_filter: list[str] = [],\n    resource_stable_ids: None | str = None,\n    resource_union_package: None | str = None,\n    secondary_dex_weight_limit: None | int = None,\n    shared_libraries_to_exclude: list[str] = [],\n    skip_crunch_pngs: None | bool = None,\n    skip_proguard: bool = False,\n    trim_resource_ids: bool = False,\n    use_derived_apk: bool = False,\n    use_split_dex: bool = False,\n    validation_deps: list[str | (str, str)] = [],\n    xz_compression_level: int = 4,\n) -> None\n'})}),"\n",(0,r.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(s.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(s.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"contacts"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"labels"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,r.jsx)(s.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,r.jsx)(s.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"licenses"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,r.jsx)(s.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"native_library_merge_linker_args_all"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Extra linker arguments passed to all merged libraries."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"package_voltron_asset_libraries"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"False"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Similar global flag as package_asset_libraries to control voltron module libs specifically."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"relinker_extra_args"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Extra arguments passed when relinking all libraries."}),"\n"]}),"\n"]})]})}function _(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);