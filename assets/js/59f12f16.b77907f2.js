"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44951],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}},93814:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"prelude/rules/ocaml/prebuilt_ocaml_library","title":"prebuilt_ocaml_library","description":"Function Signature","source":"@site/../docs/prelude/rules/ocaml/prebuilt_ocaml_library.md","sourceDirName":"prelude/rules/ocaml","slug":"/prelude/rules/ocaml/prebuilt_ocaml_library","permalink":"/docs/prelude/rules/ocaml/prebuilt_ocaml_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"ocaml_shared","permalink":"/docs/prelude/rules/ocaml/ocaml_shared"},"next":{"title":"python","permalink":"/docs/prelude/rules/python/"}}');var i=n(74848),r=n(28453);n(56289);const l={},c="prebuilt_ocaml_library",a={},o=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"prebuilt_ocaml_library",children:"prebuilt_ocaml_library"})}),"\n",(0,i.jsx)(t.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'def prebuilt_ocaml_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    bytecode_c_libs: list[str] = [],\n    bytecode_lib: None | str = None,\n    bytecode_only: bool = False,\n    c_libs: list[str] = [],\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    include_dir: None | str = None,\n    labels: list[str] = [],\n    lib_dir: str = "",\n    lib_name: str = "",\n    licenses: list[str] = [],\n    native_c_libs: list[str] = [],\n    native_lib: None | str = None,\n    platform_deps: list[(str, list[str])] = [],\n) -> None\n'})}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"name"}),": (required)"]}),"\n",(0,i.jsx)(t.p,{children:"name of the target"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"default_target_platform"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"None"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"target_compatible_with"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"compatible_with"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"visibility"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"within_view"}),": (defaults to: ",(0,i.jsx)(t.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"metadata"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"{}"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"tests"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"modifiers"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"contacts"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(t.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"labels"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsxs)(t.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,i.jsx)(t.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,i.jsx)(t.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"licenses"}),": (defaults to: ",(0,i.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,i.jsxs)(t.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,i.jsx)(t.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);