"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87420],{28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var t=n(96540);const i={},r=t.createContext(i);function l(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:s},e.children)}},68568:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"prelude/rules/shell/sh_binary","title":"sh_binary","description":"An sh_binary() is used to execute a shell script.","source":"@site/../docs/prelude/rules/shell/sh_binary.md","sourceDirName":"prelude/rules/shell","slug":"/prelude/rules/shell/sh_binary","permalink":"/docs/prelude/rules/shell/sh_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"shell","permalink":"/docs/prelude/rules/shell/"},"next":{"title":"sh_test","permalink":"/docs/prelude/rules/shell/sh_test"}}');var i=n(74848),r=n(28453);n(56289);const l={},a="sh_binary",c={},d=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"sh_binary",children:"sh_binary"})}),"\n",(0,i.jsxs)(s.p,{children:["An ",(0,i.jsx)(s.code,{children:"sh_binary()"})," is used to execute a shell script."]}),"\n",(0,i.jsx)(s.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'def sh_binary(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _target_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    append_script_extension: bool = True,\n    contacts: list[str] = [],\n    copy_resources: bool = False,\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    main: str,\n    resources: list[str] = [],\n) -> None\n'})}),"\n",(0,i.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"name"}),": (required)"]}),"\n",(0,i.jsx)(s.p,{children:"name of the target"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"default_target_platform"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"target_compatible_with"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"compatible_with"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"visibility"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"within_view"}),": (defaults to: ",(0,i.jsx)(s.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"metadata"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"tests"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"modifiers"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"append_script_extension"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"True"}),")"]}),"\n",(0,i.jsxs)(s.p,{children:["By default, sh_binary ensures that the script has an appropriate extension (e.g. ",(0,i.jsx)(s.code,{children:".sh"})," or ",(0,i.jsx)(s.code,{children:".bat"}),"), appending one itself if necessary. Setting this to False prevents that behavior and makes the caller responsible for ensuring an existing appropriate extension."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"contacts"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"copy_resources"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"False"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"By default, sh_binary attempts to use symbolic links for the resources. This can be changed so, that copies are made instead."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"labels"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsxs)(s.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,i.jsx)(s.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,i.jsx)(s.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"licenses"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsxs)(s.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,i.jsx)(s.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"main"}),": (required)"]}),"\n",(0,i.jsxs)(s.p,{children:["Either the path to the script (relative to the build file), or a ",(0,i.jsx)(s.code,{children:"build target"}),". This file must be executable in order to be run."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"resources"}),": (defaults to: ",(0,i.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,i.jsx)(s.p,{children:"A list of files or build rules that this rule requires in order to run. These could be things such as random data files."}),"\n",(0,i.jsxs)(s.p,{children:["When the script runs, the ",(0,i.jsx)(s.code,{children:"$BUCK_DEFAULT_RUNTIME_RESOURCES"}),"\nenvironment variable specifies the directory that contains these resources.\nThis directory's location is determined entirely by Buck; the script should\nnot assume the directory's location."]}),"\n",(0,i.jsxs)(s.p,{children:["The resources are also made available in a tree structure that mirrors\ntheir locations in the source and ",(0,i.jsx)(s.code,{children:"buck-out"})," trees. The\nenvironment variable ",(0,i.jsx)(s.code,{children:"$BUCK_PROJECT_ROOT"})," specifies a directory\nthat contains all the resources, laid out in their locations relative to\nthe original buck project root."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.p,{children:"This sh_binary() just cats a sample data file back at the user."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'\n# $REPO/BUCK\nsh_binary(\n    name = "script",\n    main = "script.sh",\n    resources = [\n        "data.dat",\n    ],\n)\n\n'})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"\n# Sample data file with data we need at runtime\n$ echo \"I'm a datafile\" > data.dat\n\n# Create a simple script that prints out the resource\n$ cat > script.sh\n#!/bin/sh\ncat $BUCK_DEFAULT_RUNTIME_RESOURCES/data.dat\n\n# Make sure the script is executable\n$ chmod u+x script.sh\n\n# Run the script, and see that it prints out the resource we provided\n$ buck run //:script\nJobs completed: 4. Time elapsed: 0.2s.\nBUILD SUCCEEDED\nI'm a datafile\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);