"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[15854],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(96540);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}},28706:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"prelude/rules/apple/apple_bundle","title":"apple_bundle","description":"An apple_bundle() rule takes an Apple binary and all of the resources and asset catalogs in the rule\'s transitive dependencies and generates a bundle containing all of those files. Optionally the generated bundle can also be signed using specified provisioning profiles.","source":"@site/../docs/prelude/rules/apple/apple_bundle.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/apple_bundle","permalink":"/docs/prelude/rules/apple/apple_bundle","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apple_binary","permalink":"/docs/prelude/rules/apple/apple_binary"},"next":{"title":"apple_info_plist","permalink":"/docs/prelude/rules/apple/apple_info_plist"}}');var t=s(74848),l=s(28453);s(56289);const o={},r="apple_bundle",a={},d=[{value:"Details",id:"details",level:3},{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"apple_bundle",children:"apple_bundle"})}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.code,{children:"apple_bundle()"})," rule takes an Apple binary and all of the resources and asset catalogs in the rule's transitive dependencies and generates a bundle containing all of those files. Optionally the generated bundle can also be signed using specified provisioning profiles."]}),"\n",(0,t.jsx)(n.h3,{id:"details",children:"Details"}),"\n",(0,t.jsxs)(n.p,{children:["Code signing will embed entitlements pointed to by the ",(0,t.jsx)(n.code,{children:"entitlements_file"})," arg in\nthe bundle's ",(0,t.jsx)(n.code,{children:"apple_binary"}),". This is the preferred way to specify entitlements\nwhen building with Buck."]}),"\n",(0,t.jsxs)(n.p,{children:["If the entitlements file is not present, it falls back to the ",(0,t.jsx)(n.code,{children:"CODE_SIGN_ENTITLEMENTS"})," entry in\n",(0,t.jsx)(n.code,{children:"info_plist_substitutions"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If after these checks, an entitlements file is still not specified, it will be derived based\non the entitlements of the selected provisioning profile. Provisioning profiles will be selected\nfrom profiles pointed to by ",(0,t.jsx)(n.code,{children:"apple.provisioning_profile_search_path"}),", based on a\nnon-expired profile that matches the bundle id and entitlements."]}),"\n",(0,t.jsxs)(n.p,{children:["Code signing will embed entitlements pointed to by the ",(0,t.jsx)(n.code,{children:"CODE_SIGN_ENTITLEMENTS"})," entry in\n",(0,t.jsx)(n.code,{children:"info_plist_substitutions"}),". If an entitlements file is omitted, it will be derived based\non the entitlements of the selected provisioning profile. Provisioning profiles will be selected\nfrom profiles pointed to by ",(0,t.jsx)(n.code,{children:"apple.provisioning_profile_search_path"}),", based on a\nnon-expired profile that matches the bundle id and entitlements."]}),"\n",(0,t.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def apple_bundle(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _apple_toolchain: str = "gh_facebook_buck2_shims_meta//:apple-bundle",\n    _apple_tools: str = "prelude//apple/tools:apple-tools",\n    _apple_xctoolchain: str = "gh_facebook_buck2_shims_meta//:apple-xctoolchain",\n    _apple_xctoolchain_bundle_id: str = "gh_facebook_buck2_shims_meta//:apple-xctoolchain-bundle-id",\n    _bundling_cache_buster: None | str = None,\n    _bundling_log_file_enabled: bool = False,\n    _bundling_log_file_level: None | str = None,\n    _code_signing_configuration: None | str = None,\n    _codesign_command_override: None | str = None,\n    _codesign_entitlements: None | str = None,\n    _codesign_identities_command_override: None | str = None,\n    _codesign_type: None | str = None,\n    _compile_resources_locally_override: None | bool = None,\n    _dsymutil_extra_flags: list[str],\n    _dsymutil_verify_dwarf: str,\n    _embed_provisioning_profile_when_adhoc_code_signing: None | bool = None,\n    _fast_adhoc_signing_enabled_default: bool = select({"prelude//features/apple:fast_adhoc_signing_disabled": False, "prelude//features/apple:fast_adhoc_signing_enabled": True, "DEFAULT": True}),\n    _fast_provisioning_profile_parsing_enabled: bool = False,\n    _incremental_bundling_enabled: bool = False,\n    _info_plist_identify_build_system_default: bool = False,\n    _profile_bundling_enabled: bool = False,\n    _provisioning_profiles: str = "gh_facebook_buck2_shims_meta//xplat/buck2/platform/apple:provisioning_profiles",\n    _resource_bundle: None | str = None,\n    _skip_adhoc_resigning_scrubbed_frameworks_default: bool = select({"prelude//features/apple/constraints:skip_adhoc_resigning_scrubbed_frameworks_disabled": False, "prelude//features/apple/constraints:skip_adhoc_resigning_scrubbed_frameworks_enabled": True, "DEFAULT": False}),\n    _skip_adhoc_resigning_scrubbed_frameworks_override: None | bool = None,\n    _strict_provisioning_profile_search_default: bool = select({"prelude//features/apple:strict_provisioning_profile_search_enabled": True, "DEFAULT": True}),\n    _use_entitlements_when_adhoc_code_signing: None | bool = None,\n    asset_catalogs_compilation_options: dict[str, typing.Any] = {},\n    binary: None | str = None,\n    bundle_type: None | str = None,\n    code_signing_configuration: None | str = None,\n    codesign_flags: list[str] = [],\n    codesign_identity: None | str = None,\n    codesign_type: None | str = None,\n    contacts: list[str] = [],\n    copy_public_framework_headers: None | bool = None,\n    debug_artifacts_validators: dict[str, (str, str)] = {},\n    default_host_platform: None | str = None,\n    default_platform: None | str = None,\n    deps: list[str] = [],\n    dsym_uses_parallel_linker: bool = select({"prelude//features/apple:dsym_uses_parallel_linker_enabled": True, "DEFAULT": False}),\n    embed_provisioning_profile_when_adhoc_code_signing: bool = False,\n    embed_xctest_frameworks: bool = select({"prelude//marker/apple/constraints:embed_xctest_frameworks_enabled": True, "DEFAULT": False}),\n    enforce_minimum_os_plist_key: bool = False,\n    extension: str,\n    fast_adhoc_signing_enabled: None | bool = None,\n    ibtool_flags: None | list[str] = None,\n    incremental_bundling_enabled: None | bool = None,\n    info_plist: str,\n    info_plist_identify_build_system: None | bool = None,\n    info_plist_substitutions: dict[str, str] = {},\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    module_map: None | str = None,\n    platform_binary: None | list[(str, str)] = None,\n    privacy_manifest: None | str = None,\n    product_name: None | str = None,\n    product_name_from_module_name: bool = False,\n    propagated_target_sdk_version: None | str = None,\n    provisioning_profile_filter: None | str = None,\n    resource_group: None | str = None,\n    resource_group_map: None | str = None,\n    selective_debugging: None | str = None,\n    skip_adhoc_resigning_scrubbed_frameworks: None | bool = None,\n    skip_copying_swift_stdlib: None | bool = None,\n    split_arch_dsym: bool = False,\n    strict_provisioning_profile_search: None | bool = None,\n    try_skip_code_signing: None | bool = None,\n    universal: None | bool = None,\n    use_entitlements_when_adhoc_code_signing: bool = False,\n    validation_deps: list[str] = [],\n    versioned_macos_bundle: bool = select({"prelude//features/apple/constraints:versioned_macos_bundle_false": False, "prelude//features/apple/constraints:versioned_macos_bundle_true": True, "DEFAULT": False}),\n    xcode_product_type: None | str = None,\n    xcode_scheme_settings: None | str = None,\n) -> None\n'})}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,t.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,t.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"asset_catalogs_compilation_options"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A dict holding parameters for asset catalogs compiler (actool). Its options include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"notices"})," (defaults to ",(0,t.jsx)(n.code,{children:"True"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"warnings"})," (defaults to ",(0,t.jsx)(n.code,{children:"True"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"errors"})," (defaults to ",(0,t.jsx)(n.code,{children:"True"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"compress_pngs"})," (defaults to ",(0,t.jsx)(n.code,{children:"True"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"optimization"})," (defaults to ",(0,t.jsx)(n.code,{children:"'space'"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"output_format"})," (defaults to ",(0,t.jsx)(n.code,{children:"'human-readable-text'"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"extra_flags"})," (defaults to ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"deps"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["A list of dependencies of this bundle as build targets. You can embed application extensions by specifying the extension's bundle target. To include a WatchKit app, append the flavor ",(0,t.jsx)(n.code,{children:"#watch"})," to the target specification. Buck will automatically substitute the appropriate platform flavor (either ",(0,t.jsx)(n.code,{children:"watchsimulator"})," or ",(0,t.jsx)(n.code,{children:"watchos"}),") based on the parent."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"extension"}),": (required)"]}),"\n",(0,t.jsxs)(n.p,{children:["The extension of the generated bundle. For example ",(0,t.jsx)(n.code,{children:"'app'"})," for an application bundle or ",(0,t.jsx)(n.code,{children:"'appex'"})," for an application extension bundle."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ibtool_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"List of flags to be passed to ibtool during interface builder file compilation."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"info_plist"}),": (required)"]}),"\n",(0,t.jsxs)(n.p,{children:["A path to an ",(0,t.jsx)(n.code,{children:"Info.plist"})," file that will be placed in the bundle. The specified file will be processed by substituting variable names with their values (see ",(0,t.jsx)(n.code,{children:"info_plist_substitutions"})," for more information)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"info_plist_substitutions"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["A dictionary that assigns variable names to their values. It is used for variable substitution when processing the file specified in ",(0,t.jsx)(n.code,{children:"info_plist"}),". For example if this argument is set to ",(0,t.jsx)(n.code,{children:"{'VAR': 'MyValue'}"}),", then each occurrence of ",(0,t.jsx)(n.code,{children:"$(VAR)"})," or ",(0,t.jsx)(n.code,{children:"${VAR}"})," in the file will be replaced by ",(0,t.jsx)(n.code,{children:"MyValue"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"privacy_manifest"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["A path to an ",(0,t.jsx)(n.code,{children:".xcprivacy"})," file that will be placed in the bundle."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"product_name"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:'The name of the resulting bundle and binary. The setting behaves like PRODUCT_NAME Xcode build setting. For example, if your rule is named "MyApp" and extension is "app", by default buck will generate MyApp.app bundle. But if you will set product name to "SuperApp", bundle will get "SuperApp.app" name.'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"xcode_scheme_settings"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Optional settings to set on schemes when this target is represented in Xcode."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\n\napple_bundle(\n  name = 'AppBundle',\n  binary = ':MyBinary',\n  extension = 'app',\n  info_plist = 'Info.plist',\n)\n\n\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\n\n# iOS app with embedded WatchOS 2.0 app/extension\napple_bundle(\n  name = 'DemoWatchAppExtension',\n  binary = ':DemoWatchAppExtensionBinary',\n  extension = 'appex',\n  info_plist = 'WatchExtension/Resources/Info.plist',\n)\n\napple_bundle(\n  name = 'DemoWatchApp',\n  binary = ':DemoWatchAppBinary',\n  deps = [':DemoWatchAppResources', ':DemoWatchAppExtension'],\n  extension = 'app',\n  info_plist = 'WatchApplication/Info.plist',\n)\n\napple_bundle(\n  name = 'DemoApp',\n  binary = ':DemoAppBinary',\n  deps = [':DemoWatchApp#watch'],\n  extension = 'app',\n  info_plist = 'Info.plist',\n)\n\n\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\n\n# iOS app using safeAreaInsets delivering to iOS 9.x\napple_bundle(\n  name = 'DemoIBApp',\n  binary = ':DemoIBAppBinary',\n  deps = [':DemoIBAppResources'],\n  extension = 'app',\n  ibtool_flags = [\"--minimum-deployment-target\", \"9.0\"],\n  info_plist = 'Info.plist',\n)\n\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);