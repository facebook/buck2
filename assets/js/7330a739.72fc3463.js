"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57328],{7768:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"prelude/rules/cxx/cxx_binary","title":"cxx_binary","description":"A cxx\\\\binary() rule builds a native executable from the supplied set of C/C++ source files and dependencies. If C/C++ library dependencies are listed, the generated native executable will request and link against their static archives (which are \\\\*not\\\\* built using PIC).","source":"@site/../docs/prelude/rules/cxx/cxx_binary.md","sourceDirName":"prelude/rules/cxx","slug":"/prelude/rules/cxx/cxx_binary","permalink":"/docs/prelude/rules/cxx/cxx_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"cxx","permalink":"/docs/prelude/rules/cxx/"},"next":{"title":"cxx_genrule","permalink":"/docs/prelude/rules/cxx/cxx_genrule"}}');var t=s(74848),r=s(28453);s(56289);const l={},o="cxx_binary",a={},c=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cxx_binary",children:"cxx_binary"})}),"\n",(0,t.jsxs)(n.p,{children:["A cxx_binary() rule builds a native executable from the supplied set of C/C++ source files and dependencies. If C/C++ library dependencies are listed, the generated native executable will request and link against their static archives (which are *not* built using ",(0,t.jsx)(n.a,{href:"http://en.wikipedia.org/wiki/Position-independent_code",children:"PIC"}),")."]}),"\n",(0,t.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def cxx_binary(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _build_info: dict[str, typing.Any] = {},\n    _cxx_hacks: str = "prelude//cxx/tools:cxx_hacks",\n    _cxx_toolchain: str = "gh_facebook_buck2_shims_meta//:cxx",\n    allow_cache_upload: None | bool = None,\n    anonymous_link_groups: bool = False,\n    auto_link_groups: bool = False,\n    binary_linker_flags: list[str] = [],\n    bolt_flags: list[str] = [],\n    bolt_profile: None | str = None,\n    compiler_flags: list[str] = [],\n    constraint_overrides: list[None | str] = [],\n    contacts: list[str] = [],\n    coverage_instrumentation_compiler_flags: list[str] = [],\n    cuda_compile_style: str = "mono",\n    cxx_runtime_type: None | str = None,\n    default_host_platform: None | str = None,\n    default_platform: None | str = None,\n    defaults: dict[str, str] = {},\n    deps: list[str] = [],\n    deps_query: None | str = None,\n    devirt_enabled: bool = False,\n    distributed_thinlto_partial_split_dwarf: bool = False,\n    enable_distributed_thinlto: bool = False,\n    executable_name: None | str = None,\n    exported_needs_coverage_instrumentation: bool = False,\n    extra_dwp_flags: list[str] = [],\n    fat_lto: bool = False,\n    focused_list_target: None | str = None,\n    frameworks: list[str] = [],\n    header_namespace: None | str = None,\n    headers: list[str] | dict[str, str] = [],\n    headers_as_raw_headers_mode: None | str = None,\n    include_directories: list[str] = [],\n    labels: list[str] = [],\n    lang_compiler_flags: dict[str, list[str]] = {},\n    lang_platform_compiler_flags: dict[str, list[(str, list[str])]] = {},\n    lang_platform_preprocessor_flags: dict[str, list[(str, list[str])]] = {},\n    lang_preprocessor_flags: dict[str, list[str]] = {},\n    libraries: list[str] = [],\n    licenses: list[str] = [],\n    link_deps_query_whole: bool = False,\n    link_execution_preference: None | str = None,\n    link_group: None | str = None,\n    link_group_deps: list[str] = [],\n    link_group_map: None | str | list[(str, list[(None | str | list[None | str], str, None | str | list[str], None | str)], None | dict[str, typing.Any])] = None,\n    link_group_min_binary_node_count: None | int = None,\n    link_group_public_deps_label: None | str = None,\n    link_ordering: None | str = None,\n    link_style: None | str = None,\n    link_whole: bool = False,\n    linker_extra_outputs: list[str] = [],\n    linker_flags: list[str] = [],\n    platform_compiler_flags: list[(str, list[str])] = [],\n    platform_deps: list[(str, list[str])] = [],\n    platform_headers: list[(str, list[str] | dict[str, str])] = [],\n    platform_linker_flags: list[(str, list[str])] = [],\n    platform_override: None | str = None,\n    platform_preprocessor_flags: list[(str, list[str])] = [],\n    platform_srcs: list[(str, list[str | (str, list[str])])] = [],\n    post_linker_flags: list[str] = [],\n    post_platform_linker_flags: list[(str, list[str])] = [],\n    precompiled_header: None | str = None,\n    prefer_stripped_objects: bool = False,\n    prefix_header: None | str = None,\n    preprocessor_flags: list[str] = [],\n    raw_headers: list[str] = [],\n    raw_headers_as_headers_mode: None | str = None,\n    resources: list[str] | dict[str, str] = [],\n    runtime_dependency_handling: None | str = None,\n    separate_debug_info: bool = False,\n    srcs: list[str | (str, list[str])] = [],\n    thin_lto: bool = False,\n    transformation_spec: None | str = None,\n    use_content_based_paths: bool = True,\n    use_fbcc_rust_wrapper: bool = False,\n    use_header_units: bool = False,\n    version_universe: None | str = None,\n    weak_framework_names: list[str] = [],\n) -> None\n'})}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,t.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,t.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"_build_info"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Build info that is passed along here will be late-stamped into a fb_build_info section on the output binary"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"allow_cache_upload"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Whether to allow uploading the output of this rule to be uploaded to cache when the action is executed locally if the configuration allows (i.e. there is a cache configured and the client has permission to write to it)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"compiler_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Flags to use when compiling any of the above sources (which require compilation)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"contacts"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"deps_query"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Status: ",(0,t.jsx)(n.strong,{children:"experimental/unstable"}),". The deps query takes a query string that accepts the following query functions, and appends the output of the query to the declared deps:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"attrfilter"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"deps"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"except"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"intersect"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"filter"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"kind"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"set"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"union"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Some example queries:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  \"filter({name_regex}, deps('//foo:foo'))\".format(name_regex='//.*')\n  \"attrfilter(annotation_processors, com.foo.Processor, deps('//foo:foo'))\"\n  \"deps('//foo:foo', 1)\"\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"header_namespace"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["A path prefix when including headers of this target. Defaults to the path from the root of the repository to the directory where this target is defined. Can contain forward slashes (",(0,t.jsx)(n.code,{children:"/"}),"), but cannot start with one. See ",(0,t.jsx)(n.code,{children:"headers"})," for more information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"headers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["The set of header files that are made available for inclusion to the source files in this target. These should be specified as either a list of header files or a dictionary of header names to header files. The header name can contain forward slashes (",(0,t.jsx)(n.code,{children:"/"}),"). The headers can be included with ",(0,t.jsx)(n.code,{children:'#include "$HEADER_NAMESPACE/$HEADER_NAME"'})," or ",(0,t.jsx)(n.code,{children:"#include <$HEADER_NAMESPACE/$HEADER_NAME>"})," , where ",(0,t.jsx)(n.code,{children:"$HEADER_NAMESPACE"})," is the value of the target's ",(0,t.jsx)(n.code,{children:"header_namespace"}),"  attribute, and ",(0,t.jsx)(n.code,{children:"$HEADER_NAME"})," is the header name if specified, and the filename of the header file otherwise. See ",(0,t.jsx)(n.code,{children:"header_namespace"})," for more information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"include_directories"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["A list of include directories (with ",(0,t.jsx)(n.code,{children:"raw_headers"}),") to be added to the compile command for compiling this target (via ",(0,t.jsx)(n.code,{children:"-I"}),"). An include directory is relative to the current package."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"labels"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,t.jsx)(n.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,t.jsx)(n.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"licenses"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,t.jsx)(n.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"link_execution_preference"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The execution preference for linking. Options are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"any : No preference is set, and the link action will be performed based on buck2's executor configuration."}),"\n",(0,t.jsx)(n.li,{children:"full_hybrid : The link action will execute both locally and remotely, regardless of buck2's executor configuration (if\nthe executor is capable of hybrid execution). The use_limited_hybrid setting of the hybrid executor is ignored."}),"\n",(0,t.jsx)(n.li,{children:"local : The link action will execute locally if compatible on current host platform."}),"\n",(0,t.jsx)(n.li,{children:"local_only : The link action will execute locally, and error if the current platform is not compatible."}),"\n",(0,t.jsx)(n.li,{children:"remote : The link action will execute remotely if a compatible remote platform exists, otherwise locally."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The default is None, expressing that no preference has been set on the target itself."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"link_group_deps"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Additional targets to traverse when building link groups, but which should not be direct dependencies of the main executable."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"link_group_public_deps_label"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:'Surface nodes with this label as "public" nodes in the main executable when linking with with link groups.'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"link_style"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Determines whether to build and link this rule's dependencies statically or dynamically. Can be either ",(0,t.jsx)(n.code,{children:"static"}),", ",(0,t.jsx)(n.code,{children:"static_pic"})," or ",(0,t.jsx)(n.code,{children:"shared"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"linker_extra_outputs"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Declares extra outputs that the linker emits. These identifiers can be used in ",(0,t.jsx)(n.code,{children:"$(output ...)"})," macros in ",(0,t.jsx)(n.code,{children:"linker_flags"})," to interpolate the output path into the linker command line. Useful for custom linkers that emit extra output files."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"linker_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Flags to add to the linker command line whenever the output from this rule is used in a link operation, such as linked into an executable or a shared library."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"platform_compiler_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Platform specific compiler flags. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of flags to use when compiling the target's sources. See ",(0,t.jsx)(n.code,{children:"compiler_flags"})," for more information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"platform_headers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Platform specific header files. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is either a list of header files or a dictionary of header names to header files that will be made available for inclusion to the source files in the target if the platform matches the regex. See ",(0,t.jsx)(n.code,{children:"headers"})," for more information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"platform_linker_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Platform-specific linker flags. This argument is specified as a list of pairs where the first element in each pair is an un-anchored regex against which the platform name is matched. The regex should use ",(0,t.jsx)(n.code,{children:"java.util.regex.Pattern"})," syntax. The second element in each pair is a list of linker flags. If the regex matches the platform, these flags are added to the linker command line when the output from this rule is used in a link operation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"platform_preprocessor_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Platform specific preprocessor flags. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of flags to use when preprocessing the target's sources. See ",(0,t.jsx)(n.code,{children:"preprocessor_flags"})," for more information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"platform_srcs"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Platform specific source files. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is either a list of source files or a list of tuples of source files and a list of compilation flags to be preprocessed, compiled and assembled if the platform matches the regex. See ",(0,t.jsx)(n.code,{children:"srcs"})," for more information."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"preprocessor_flags"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Flags to use when preprocessing any of the above sources (which require preprocessing)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"raw_headers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["The set of header files that can be used for inclusion to the source files in the target and all targets that transitively depend on it. Buck doesn't add raw headers to the search path of a compiler/preprocessor automatically. ",(0,t.jsx)(n.code,{children:"include_directories"})," and ",(0,t.jsx)(n.code,{children:"public_include_directories"})," are the recommended way to add raw headers to the search path (they will be added via ",(0,t.jsx)(n.code,{children:"-I"}),"). ",(0,t.jsx)(n.code,{children:"compiler_flags"}),", ",(0,t.jsx)(n.code,{children:"preprocessor_flags"})," and ",(0,t.jsx)(n.code,{children:"exported_preprocessor_flags"})," can also be used to add such raw headers to the search path if inclusion via ",(0,t.jsx)(n.code,{children:"-isystem"})," or ",(0,t.jsx)(n.code,{children:"-iquote"})," is needed. ",(0,t.jsx)(n.code,{children:"raw_headers"})," cannot be used together with ",(0,t.jsx)(n.code,{children:"headers"})," or ",(0,t.jsx)(n.code,{children:"exported_headers"})," in the same target."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"raw_headers_as_headers_mode"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Controls whether raw_headers and *include_directories attributes should be automatically converted to headers and symlink trees and/or header maps via headers. Only has an effect if the cxx_toolchain has explicitly opted into supporting this behavior via a non-default value, even if the value is disabled."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"runtime_dependency_handling"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["When this is set to ",(0,t.jsx)(n.code,{children:"symlink"}),", shared library dependencies are included in a symlink tree alongside the resulting executable, even if the link style is not shared. Can be ",(0,t.jsx)(n.code,{children:"none"})," or ",(0,t.jsx)(n.code,{children:"symlink"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"srcs"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["The set of C, C++, Objective-C, Objective-C++, or assembly source files to be preprocessed, compiled, and assembled by this rule. We determine which stages to run on each input source based on its file extension. See the ",(0,t.jsx)(n.a,{href:"https://gcc.gnu.org/onlinedocs/gcc/Overall-Options.html",children:"GCC documentation"})," for more detail on how file extensions are interpreted. Each element can be either a string specifying a source file (e.g. ",(0,t.jsx)(n.code,{children:"''"}),") or a tuple of a string specifying a source file and a list of compilation flags (e.g. ",(0,t.jsx)(n.code,{children:"('', ['-Wall', '-Werror'])"})," ). In the latter case the specified flags will be used in addition to the rule's other flags when preprocessing and compiling that file (if applicable)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"transformation_spec"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Dependency to a transformation spec that will selectively change parts of dependency graph"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"use_fbcc_rust_wrapper"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Opt-in for the rust version of the fbcode C++ Compiler wrapper (replacing the existing fbcc.py)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\n# A rule that builds a C/C++ native executable from a single .cpp file\n# its corresponding header, and a C/C++ library dependency.\ncxx_binary(\n  name = 'echo',\n  srcs = [\n    'echo.cpp',\n  ],\n  headers = [\n    'echo.h',\n  ],\n  deps = [\n    ':util',\n  ],\n)\n\ncxx_library(\n  name = 'util',\n  srcs = [\n    'util.cpp',\n  ],\n  headers = [\n    'util.h',\n  ],\n)\n\n# To build without stripping:\nbuck build :echo\n\n# To build with stripping debug symbols only:\nbuck build :echo#strip-debug\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);