apple_tools(
    name = "apple-tools",
    assemble_bundle = "prelude//apple/tools/bundling:assemble_bundle",
    # @oss-disable: adhoc_codesign_tool = "prelude//apple/tools/meta_only/codesign_rust:adhoc-signer", 
    adhoc_codesign_tool = None # @oss-enable
    split_arch_combine_dsym_bundles_tool = ":split_arch_combine_dsym_bundles_tool",
    dry_codesign_tool = ":dry_codesign_tool",
    info_plist_processor = "prelude//apple/tools/info_plist_processor:tool",
    ipa_package_maker = ":ipa_package_maker",
    make_modulemap = ":make_modulemap",
    make_vfsoverlay = ":make_vfsoverlay",
    selective_debugging_scrubber = "prelude//apple/tools/selective_debugging:tool",
    swift_objc_header_postprocess = ":swift_objc_header_postprocess",
    visibility = ["PUBLIC"],
)

python_binary(
    name = "dry_codesign_tool",
    main = "dry_codesign_tool.py",
    visibility = ["PUBLIC"],
)

python_binary(
    name = "ipa_package_maker",
    main = "ipa_package_maker.py",
    visibility = ["PUBLIC"],
    deps = [
        "prelude//apple/tools/re_compatibility_utils:re_compatibility_utils",
    ],
)

python_bootstrap_binary(
    name = "make_modulemap",
    main = "make_modulemap.py",
    visibility = ["PUBLIC"],
)

python_bootstrap_binary(
    name = "make_swift_comp_db",
    main = "make_swift_comp_db.py",
    visibility = ["PUBLIC"],
)

python_bootstrap_binary(
    name = "make_vfsoverlay",
    main = "make_vfsoverlay.py",
    visibility = ["PUBLIC"],
)

python_library(
    name = "plistlib_utils",
    srcs = ["plistlib_utils.py"],
    visibility = ["PUBLIC"],
)

python_binary(
    name = "split_arch_combine_dsym_bundles_tool",
    main = "split_arch_combine_dsym_bundles_tool.py",
    visibility = ["PUBLIC"],
)

command_alias(
    name = "swift_exec",
    exe = ":swift_exec.sh",
    visibility = ["PUBLIC"],
)

export_file(
    name = "swift_exec.sh",
    src = "swift_exec.sh",
)

python_bootstrap_binary(
    name = "swift_objc_header_postprocess",
    main = "swift_objc_header_postprocess.py",
    visibility = ["PUBLIC"],
)
