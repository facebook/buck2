"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17453],{28453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>t});var o=n(96540);const r={},s=o.createContext(r);function d(e){const i=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(s.Provider,{value:i},e.children)}},69476:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"users/how_tos/question_mark_modifier","title":"?modifier CLI Syntax","description":"The ?modifier syntax is an alternative method of specifying CLI level","source":"@site/../docs/users/how_tos/question_mark_modifier.md","sourceDirName":"users/how_tos","slug":"/users/how_tos/question_mark_modifier","permalink":"/docs/users/how_tos/question_mark_modifier","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"question_mark_modifier","title":"?modifier CLI Syntax"},"sidebar":"main","previous":{"title":"Specify configuration modifiers from the CLI","permalink":"/docs/users/how_tos/modifiers_cli"},"next":{"title":"Compilation databases","permalink":"/docs/users/how_tos/compilation_database"}}');var r=n(74848),s=n(28453);const d={id:"question_mark_modifier",title:"?modifier CLI Syntax"},t=void 0,a={},l=[{value:"Use in <code>--target-universe</code> flag",id:"use-in---target-universe-flag",level:3},{value:"Incompatible with <code>--modifier</code> flag",id:"incompatible-with---modifier-flag",level:3},{value:"Commands that support <code>?modifier</code> syntax",id:"commands-that-support-modifier-syntax",level:3},{value:"Interaction with flags in <code>build</code> command",id:"interaction-with-flags-in-build-command",level:3},{value:"<code>?modifier</code> syntax in <code>--show-output</code> flag",id:"modifier-syntax-in---show-output-flag",level:4},{value:"<code>?modifier</code> syntax in <code>--build-report</code> flag",id:"modifier-syntax-in---build-report-flag",level:4}];function c(e){const i={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax is an alternative method of specifying CLI level\nmodifiers, which allows users to specify modifiers for a target pattern by\nappending a ",(0,r.jsx)(i.code,{children:"?"})," to the pattern followed by the modifiers delimited by ",(0,r.jsx)(i.code,{children:"+"}),"."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"buck2 build repo//foo:bar?debug+linux\n"})}),"\n",(0,r.jsxs)(i.p,{children:["Since the ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax associates modifiers to target patterns rather than\nthe command, it allows us to potentially condense multiple command invocations."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# Using --modifier flags\nbuck2 build --modifier debug repo//foo:bar\nbuck2 build --modifier debug --modifier linux repo//foo:bar\n\n# Using ?modifier syntax\nbuck2 build repo//foo:bar?debug repo//foo:bar?debug+linux\n"})}),"\n",(0,r.jsxs)(i.h3,{id:"use-in---target-universe-flag",children:["Use in ",(0,r.jsx)(i.code,{children:"--target-universe"})," flag"]}),"\n",(0,r.jsxs)(i.p,{children:["For command invocations that specify the ",(0,r.jsx)(i.code,{children:"--target-universe"})," flag, the\n",(0,r.jsx)(i.code,{children:"?modifier"})," syntax must be used as the argument of the ",(0,r.jsx)(i.code,{children:"--target-universe"})," flag."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# Use of `?modifier` syntax in `--target-universe` flag\nbuck2 build repo//foo:bar --target-universe repo//foo:baz?debug\n"})}),"\n",(0,r.jsxs)(i.p,{children:["Using the ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax outside of the ",(0,r.jsx)(i.code,{children:"--target-universe"})," flag when it is\nspecified will throw an error."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# Command that would fail and throw an error\nbuck2 build repo//foo:bar?debug --target-universe repo//foo:baz\n"})}),"\n",(0,r.jsxs)(i.h3,{id:"incompatible-with---modifier-flag",children:["Incompatible with ",(0,r.jsx)(i.code,{children:"--modifier"})," flag"]}),"\n",(0,r.jsxs)(i.p,{children:["If the ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax is used in a command invocation, the ",(0,r.jsx)(i.code,{children:"--modifier"})," flag\ncannot be used."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# Commands that would fail and throw an error\nbuck2 build --modifier debug repo//foo:bar?linux\nbuck2 build --modifier debug repo//foo:bar --target-universe repo//foo:baz?linux\n"})}),"\n",(0,r.jsxs)(i.h3,{id:"commands-that-support-modifier-syntax",children:["Commands that support ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax"]}),"\n",(0,r.jsxs)(i.p,{children:["Currently, the following commands support the ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"build"})}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"cquery"})," (only in ",(0,r.jsx)(i.code,{children:"--target-universe"})," flag)"]}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"ctargets"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"run"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"install"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"audit providers"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"audit subtargets"})}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"interaction-with-flags-in-build-command",children:["Interaction with flags in ",(0,r.jsx)(i.code,{children:"build"})," command"]}),"\n",(0,r.jsxs)(i.p,{children:["To make it easier to see what output comes from which configuration when using\nthe ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax. The ",(0,r.jsx)(i.code,{children:"?modifier"})," syntax is also displayed in select flags\nin the ",(0,r.jsx)(i.code,{children:"build"})," command."]}),"\n",(0,r.jsxs)(i.h4,{id:"modifier-syntax-in---show-output-flag",children:[(0,r.jsx)(i.code,{children:"?modifier"})," syntax in ",(0,r.jsx)(i.code,{children:"--show-output"})," flag"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# CLI input\nbuck2 build --show-output repo//foo:bar?debug repo//foo:bar?linux\n\n# Example output\nrepo//foo:bar?debug buck-out/v2/gen/...\nrepo//foo:bar?linux buck-out/v2/gen/...\n"})}),"\n",(0,r.jsxs)(i.h4,{id:"modifier-syntax-in---build-report-flag",children:[(0,r.jsx)(i.code,{children:"?modifier"})," syntax in ",(0,r.jsx)(i.code,{children:"--build-report"})," flag"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# CLI input\nbuck2 build repo//foo:bar?debug repo//foo:bar?linux --build-report repo/build_report.json\n"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",children:'// Build report output in repo/build_report.json with ommited fields\n{\n   "results": {\n       "repo//foo:bar?debug":  {\n           "success": "SUCCESS",\n           ...\n       },\n       "repo//foo:bar?linux":  {\n           "success": "SUCCESS",\n           ...\n       },\n   }\n}\n\n'})})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);