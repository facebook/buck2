"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28512],{11450:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"users/query/uquery","title":"Uquery Environment","description":"Functions","source":"@site/../docs/users/query/uquery.generated.md","sourceDirName":"users/query","slug":"/users/query/uquery","permalink":"/docs/users/query/uquery","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"uquery","title":"Uquery Environment","toc_max_heading_level":4},"sidebar":"main","previous":{"title":"Cquery Environment","permalink":"/docs/users/query/cquery"},"next":{"title":"Deferred Materialization","permalink":"/docs/users/advanced/deferred_materialization"}}');var i=n(74848),t=n(28453),l=n(29030),a=n(78191);const d={id:"uquery",title:"Uquery Environment",toc_max_heading_level:4},c="Uquery Environment",h={},o=[{value:"Functions",id:"functions",level:2},{value:"allbuildfiles(universe: <em>target expression</em>)",id:"allbuildfiles",level:4},{value:"allpaths(from: <em>target expression</em>, to: <em>target expression</em>, captured_expr: ?<em>query expression</em>)",id:"allpaths",level:4},{value:"attrfilter(attr: <em>string</em>, value: <em>string</em>, targets: <em>target expression</em>)",id:"attrfilter",level:4},{value:"attrregexfilter(attr: <em>string</em>, value: <em>string</em>, targets: <em>target expression</em>)",id:"attrregexfilter",level:4},{value:"buildfile(targets: <em>target expression</em>)",id:"buildfile",level:4},{value:"configuration_deps()",id:"configuration_deps",level:4},{value:"deps(targets: <em>target expression</em>, depth: ?<em>integer</em>, captured_expr: ?<em>query expression</em>)",id:"deps",level:4},{value:"except(left: <em>any value</em>, right: <em>any value</em>)",id:"except",level:4},{value:"exec_deps()",id:"exec_deps",level:4},{value:"filter(regex: <em>string</em>, set: <em>target or file expression</em>)",id:"filter",level:4},{value:"first_order_deps()",id:"first_order_deps",level:4},{value:"inputs(targets: <em>target expression</em>)",id:"inputs",level:4},{value:"intersect(left: <em>any value</em>, right: <em>any value</em>)",id:"intersect",level:4},{value:"kind(regex: <em>string</em>, targets: <em>target expression</em>)",id:"kind",level:4},{value:"labels(attr: <em>string</em>, targets: <em>target expression</em>)",id:"labels",level:4},{value:"nattrfilter(attr: <em>string</em>, value: <em>string</em>, targets: <em>target expression</em>)",id:"nattrfilter",level:4},{value:"owner(files: <em>file expression</em>)",id:"owner",level:4},{value:"rbuildfiles(universe: <em>file expression</em>, argset: <em>file expression</em>)",id:"rbuildfiles",level:4},{value:"rdeps(universe: <em>target expression</em>, targets: <em>target expression</em>, depth: ?<em>integer</em>, captured_expr: ?<em>query expression</em>)",id:"rdeps",level:4},{value:"somepath(from: <em>target expression</em>, to: <em>target expression</em>, captured_expr: ?<em>query expression</em>)",id:"somepath",level:4},{value:"target_deps()",id:"target_deps",level:4},{value:"targets_in_buildfile(files: <em>file expression</em>)",id:"targets_in_buildfile",level:4},{value:"testsof(targets: <em>target expression</em>)",id:"testsof",level:4},{value:"toolchain_deps()",id:"toolchain_deps",level:4},{value:"union(left: <em>any value</em>, right: <em>any value</em>)",id:"union",level:4},{value:"Value Types",id:"value-types",level:2}];function u(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"uquery-environment",children:"Uquery Environment"})}),"\n",(0,i.jsx)(r.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#allbuildfiles",children:"allbuildfiles"}),": Target build file with transitive imports."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#allpaths",children:"allpaths"}),": All dependency paths."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#attrfilter",children:"attrfilter"}),": Rule attribute filtering."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#attrregexfilter",children:"attrregexfilter"}),": Rule attribute filtering with regex."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#buildfile",children:"buildfile"}),": Target build file."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#configuration_deps",children:"configuration_deps"}),": A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#deps",children:"deps"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#except",children:"except"}),": Computes the arguments that are in argument A but not in argument B."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#exec_deps",children:"exec_deps"}),": A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#filter",children:"filter"}),": Filter targets or files by regex."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#first_order_deps",children:"first_order_deps"}),": A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#inputs",children:"inputs"}),": Non-transitive inputs."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#intersect",children:"intersect"}),": Computes the set intersection over the given arguments."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#kind",children:"kind"}),": Filter targets by rule type."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#labels",children:"labels"}),": Not implemented."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#nattrfilter",children:"nattrfilter"}),": Negative rule attribute filtering, opposite of ",(0,i.jsx)(r.a,{href:"#attrfilter",children:(0,i.jsx)(r.code,{children:"attrfilter"})}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#owner",children:"owner"}),": Targets owning the given file."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#rbuildfiles",children:"rbuildfiles"}),": Build file reverse dependencies."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#rdeps",children:"rdeps"}),": Find the reverse dependencies of the targets in the given target universe."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#somepath",children:"somepath"}),": Shortest dependency path between two sets of targets."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#target_deps",children:"target_deps"}),": A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#targets_in_buildfile",children:"targets_in_buildfile"}),": Targets in build file."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#testsof",children:"testsof"}),": Tests of specified targets."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#toolchain_deps",children:"toolchain_deps"}),": A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#union",children:"union"}),": Computes the set union over the given arguments."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"allbuildfiles",children:["allbuildfiles(universe: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Target build file with transitive imports."}),"\n",(0,i.jsxs)(r.p,{children:["For each target in the provided ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),",\nreturns the build file where the target is defined,\nalong with all transitive imports of that file."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery 'allbuildfiles(//foo:bar)'\n\nfoo/BUCK\nfoo/defs_dependent_on_utils.bzl\nbaz/utils.bzl\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"allpaths",children:["allpaths(from: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", to: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", captured_expr: ?",(0,i.jsx)(r.a,{href:"#query-expression",children:(0,i.jsx)(r.em,{children:"query expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"All dependency paths."}),"\n",(0,i.jsxs)(r.p,{children:["Generates a graph of paths between the ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expressions"})})," ",(0,i.jsx)(r.em,{children:"from"})," and ",(0,i.jsx)(r.em,{children:"to"}),", based on the dependencies between nodes."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery \"allpaths('//foo:bar', '//foo/bar/lib:baz')\"\n"})}),"\n",(0,i.jsxs)(r.p,{children:["returns the dependency graph rooted at the target node ",(0,i.jsx)(r.code,{children:"//foo:bar"}),", including all target nodes that transitively depend on ",(0,i.jsx)(r.code,{children:"//foo/bar/lib:baz"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Arguments ",(0,i.jsx)(r.em,{children:"from"})," and ",(0,i.jsx)(r.em,{children:"to"})," can themselves be expressions, for example:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery \"allpaths(kind(java_library, '//...'), '//foo:bar')\"\n"})}),"\n",(0,i.jsxs)(r.p,{children:["shows all the paths between any target with rule type ",(0,i.jsx)(r.code,{children:"java_library"})," in the repository and the target ",(0,i.jsx)(r.code,{children:"//foo:bar"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["We recommend using it with the ",(0,i.jsx)(r.code,{children:"--output-format=dot"})," parameter to generate a ",(0,i.jsx)(r.a,{href:"https://graphviz.org/",children:"Graphviz"})," ",(0,i.jsx)(r.a,{href:"https://graphviz.org/doc/info/lang.html",children:"DOT"})," file that can then be rendered as an image."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "allpaths(//buck2:buck2, //buck2/app/buck2_validation:buck2_validation)" --output-format=dot > result.dot\n$ dot -Tpng result.dot -o image.png\n'})}),"\n",(0,i.jsx)(r.p,{children:"produces the following image:"}),"\n",(0,i.jsx)("img",{src:(0,l.default)("/img/allpaths_example.png"),class:"query-example-image"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"attrfilter",children:["attrfilter(attr: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", value: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Rule attribute filtering."}),"\n",(0,i.jsxs)(r.p,{children:["Evaluates the given ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})})," and filters the resulting build targets to those where the specified attribute contains the specified value.\nIn this context, the term attribute refers to an argument in a build rule, such as name, headers, srcs, or deps."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["If the attribute is a single value, say ",(0,i.jsx)(r.code,{children:"name"}),", it is compared to the specified value, and the target is returned if they match."]}),"\n",(0,i.jsx)(r.li,{children:"If the attribute is a list, the target is returned if that list contains the specified value."}),"\n",(0,i.jsx)(r.li,{children:"If the attribute is a dictionary, the target is returned if the value exists in either the keys or the values of the dictionary."}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery \"attrfilter(deps, '//buck2/app/buck2_validation:buck2_validation', '//...')\"\n\n//buck2/app/buck2:buck2-bin\n//buck2/app/buck2_server:buck2_server\n//buck2/app/buck2_server:buck2_server-unittest\n"})}),"\n",(0,i.jsxs)(r.p,{children:["returns targets that contain ",(0,i.jsx)(r.code,{children:"//buck2/app/buck2_validation:buck2_validation"})," target in their ",(0,i.jsx)(r.code,{children:"deps"})," attribute."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"attrregexfilter",children:["attrregexfilter(attr: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", value: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Rule attribute filtering with regex."}),"\n",(0,i.jsxs)(r.p,{children:["Similar to the ",(0,i.jsx)(r.a,{href:"#attrfilter",children:(0,i.jsx)(r.code,{children:"attrfilter"})})," function except that it takes a regular expression as the second argument."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery \"attrregexfilter(deps, '.+validation$', '//...')\"\n\n//buck2/app/buck2:buck2-bin\n//buck2/app/buck2_server:buck2_server\n//buck2/app/buck2_server:buck2_server-unittest\n"})}),"\n",(0,i.jsxs)(r.p,{children:["returns targets whose ",(0,i.jsx)(r.code,{children:"deps"})," attribute contains at least one target suffixed with 'validation'."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"buildfile",children:["buildfile(targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Target build file."}),"\n",(0,i.jsxs)(r.p,{children:["For each target in the provided ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", returns the build file where the target is defined."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery 'buildfile(//buck2:buck2)'\n\nbuck2/BUCK\n"})}),"\n",(0,i.jsx)(r.p,{children:"In order to find the build file associated with a source file, combine the owner operator with buildfile.\nExamples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "buildfile(//buck2/app/buck2_action_impl_tests:buck2_action_impl_tests)"\n'})}),"\n",(0,i.jsx)(r.p,{children:"and"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "buildfile(owner(app/buck2_action_impl_tests/src/context.rs))"\n'})}),"\n",(0,i.jsxs)(r.p,{children:["both return ",(0,i.jsx)(r.code,{children:"buck2/app/buck2_action_impl_tests/TARGETS"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h4,{id:"configuration_deps",children:"configuration_deps()"}),"\n",(0,i.jsxs)(r.p,{children:["A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsx)(r.p,{children:"Returns the output of deps function for configuration dependencies (that appear as conditions in selects)."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 cquery \"deps('//foo:bar', 1, configuration_deps())\""})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"deps",children:["deps(targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", depth: ?",(0,i.jsx)(r.a,{href:"#integer",children:(0,i.jsx)(r.em,{children:"integer"})}),", captured_expr: ?",(0,i.jsx)(r.a,{href:"#query-expression",children:(0,i.jsx)(r.em,{children:"query expression"})}),")"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"except",children:["except(left: ",(0,i.jsx)(r.a,{href:"#any-value",children:(0,i.jsx)(r.em,{children:"any value"})}),", right: ",(0,i.jsx)(r.a,{href:"#any-value",children:(0,i.jsx)(r.em,{children:"any value"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Computes the arguments that are in argument A but not in argument B."}),"\n",(0,i.jsxs)(r.p,{children:["Can be used with the ",(0,i.jsx)(r.code,{children:"-"})," symbol. This operator is NOT commutative."]}),"\n",(0,i.jsx)(r.p,{children:"The parser treats this operator as left-associative and of equal precedence, so we recommend\nthat you use parentheses if you need to ensure a specific order of evaluation. A parenthesized expression\nresolves to the value of the expression it encloses."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 aquery \"deps('//foo:bar') except deps('//baz:lib')\""})," is the same as\n",(0,i.jsx)(r.code,{children:"buck2 aquery \"deps('//foo:bar') - deps('//baz:lib')\""}),"\nBoth return the targets that ",(0,i.jsx)(r.code,{children:"//foo:bar"})," depends on and that ",(0,i.jsx)(r.code,{children:"//baz:lib"})," does NOT depend on."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h4,{id:"exec_deps",children:"exec_deps()"}),"\n",(0,i.jsxs)(r.p,{children:["A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsx)(r.p,{children:"Returns the output of deps function for execution dependencies (build time dependencies), ex. compiler used as a part of the build."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 cquery \"deps('//foo:bar', 1, exec_deps())\""})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"filter",children:["filter(regex: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", set: ",(0,i.jsx)(r.a,{href:"#target-or-file-expression",children:(0,i.jsx)(r.em,{children:"target or file expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Filter targets or files by regex."}),"\n",(0,i.jsxs)(r.p,{children:["Use regex partial match to filter either a ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})})," or ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})}),"."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Targets are matched against their fully-qualified name, such as ",(0,i.jsx)(r.code,{children:"cell//foo/bar:baz"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Files are matched against a repo path, such as ",(0,i.jsx)(r.code,{children:"cell//foo/bar/baz.py"}),"."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "filter(validation$, //buck2/app/...)"\n\n//buck2/app/buck2_validation:buck2_validation\n'})}),"\n",(0,i.jsxs)(r.p,{children:["returns all targets within ",(0,i.jsx)(r.code,{children:"//buck2/app"})," that have a label with a ",(0,i.jsx)(r.code,{children:"validation"})," suffix."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h4,{id:"first_order_deps",children:"first_order_deps()"}),"\n",(0,i.jsxs)(r.p,{children:["A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsxs)(r.p,{children:["Returns the output of deps function for the immediate dependencies of the given targets. Output is equivalent to ",(0,i.jsx)(r.code,{children:"deps(<targets>, 1)"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 cquery \"deps('//foo:bar', 1, first_order_deps())\""})," is equivalent to ",(0,i.jsx)(r.code,{children:"buck2 cquery \"deps('//foo:bar', 1)\""})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"inputs",children:["inputs(targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Non-transitive inputs."}),"\n",(0,i.jsxs)(r.p,{children:["For each target in the provided ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),",\nreturns the files which are an immediate input to the rule function and thus are needed to go through analysis phase (i.e. produce providers)."]}),"\n",(0,i.jsxs)(r.p,{children:["You could consider the ",(0,i.jsx)(r.code,{children:"inputs()"})," and ",(0,i.jsx)(r.code,{children:"owner()"})," functions to be inverses of each other."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "inputs(//buck2/dice/...)"\n'})}),"\n",(0,i.jsxs)(r.p,{children:["returns the direct inputs for the ",(0,i.jsx)(r.code,{children:"//buck2/dice/..."})," targets."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"intersect",children:["intersect(left: ",(0,i.jsx)(r.a,{href:"#any-value",children:(0,i.jsx)(r.em,{children:"any value"})}),", right: ",(0,i.jsx)(r.a,{href:"#any-value",children:(0,i.jsx)(r.em,{children:"any value"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Computes the set intersection over the given arguments."}),"\n",(0,i.jsxs)(r.p,{children:["Can be used with the ",(0,i.jsx)(r.code,{children:"^"})," symbol. This operator is commutative."]}),"\n",(0,i.jsx)(r.p,{children:"The parser treats this operator as left-associative and of equal precedence, so we recommend\nthat you use parentheses if you need to ensure a specific order of evaluation. A parenthesized expression\nresolves to the value of the expression it encloses."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 aquery \"deps('//foo:bar') intersect deps('//baz:lib')\""})," is the same as\n",(0,i.jsx)(r.code,{children:"buck2 aquery \"deps('//foo:bar') ^ deps('//baz:lib')\""}),"\nBoth return the targets that appear in the transitive closure of ",(0,i.jsx)(r.code,{children:"//foo:bar"})," and ",(0,i.jsx)(r.code,{children:"//baz:lib"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"kind",children:["kind(regex: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Filter targets by rule type."}),"\n",(0,i.jsxs)(r.p,{children:["Returns a subset of ",(0,i.jsx)(r.code,{children:"targets"})," where the rule type matches the specified ",(0,i.jsx)(r.code,{children:"regex"}),". The specified pattern can be a regular expression."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 query \"kind('java.*', deps('//foo:bar'))\"\n"})}),"\n",(0,i.jsxs)(r.p,{children:["This command returns targets matching rule type ",(0,i.jsx)(r.code,{children:"java.*"})," (e.g., ",(0,i.jsx)(r.code,{children:"java_library"}),", ",(0,i.jsx)(r.code,{children:"java_binary"}),") in the transitive dependencies of ",(0,i.jsx)(r.code,{children:"//foo:bar"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"labels",children:["labels(attr: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Not implemented."}),"\n",(0,i.jsx)(r.p,{children:"This function won't be implemented in the future, because buck2 query core does not support returning both files and targets from a single function."}),"\n",(0,i.jsx)(r.p,{children:"In buck1 it returns targets and files referenced by the given attribute in the given targets."}),"\n",(0,i.jsx)(a.FbInternalOnly,{children:(0,i.jsxs)(r.p,{children:["For more context see discussion in"," ",(0,i.jsx)(r.a,{href:"https://internalfb.com/T126638795",children:"T126638795"}),"."]})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"nattrfilter",children:["nattrfilter(attr: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", value: ",(0,i.jsx)(r.a,{href:"#string",children:(0,i.jsx)(r.em,{children:"string"})}),", targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsxs)(r.p,{children:["Negative rule attribute filtering, opposite of ",(0,i.jsx)(r.a,{href:"#attrfilter",children:(0,i.jsx)(r.code,{children:"attrfilter"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Evaluates the given ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})})," and filters the resulting build targets to those where the specified attribute doesn't contain the specified value.\nIn this context, the term attribute refers to an argument in a build rule, such as name, headers, srcs, or deps."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["If the attribute is a single value, say ",(0,i.jsx)(r.code,{children:"name"}),", it is compared to the specified value, and the target is returned if they don't match."]}),"\n",(0,i.jsx)(r.li,{children:"If the attribute is a list, the target is returned if that list doesn't contain the specified value."}),"\n",(0,i.jsx)(r.li,{children:"If the attribute is a dictionary, the target is returned if the value doesn't exist in both the keys and the values of the dictionary."}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery \"nattrfilter(deps, '//foo:bar', '//...')\"\n"})}),"\n",(0,i.jsxs)(r.p,{children:["returns targets that don't contain ",(0,i.jsx)(r.code,{children:"//foo:bar"})," target in their ",(0,i.jsx)(r.code,{children:"deps"})," attribute."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"owner",children:["owner(files: ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Targets owning the given file."}),"\n",(0,i.jsx)(r.p,{children:"Returns all targets that have a specified file as an input."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"owner()"})," and ",(0,i.jsx)(r.code,{children:"inputs()"})," functions are inverses of each other."]}),"\n",(0,i.jsx)(r.p,{children:"If the specified file has multiple owning targets, a set of targets is returned. If no owner exists, an empty set is returned."}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery \"owner('app/buck2/src/lib.rs')\"\n\n//buck2/app/buck2:buck2-unittest\n//buck2/app/buck2:buck2\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"rbuildfiles",children:["rbuildfiles(universe: ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})}),", argset: ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Build file reverse dependencies."}),"\n",(0,i.jsxs)(r.p,{children:["Returns all build files in the provided ",(0,i.jsx)(r.code,{children:"universe"})," that have a transitive dependency on any of the specified build files."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "rbuildfiles(//buck2/BUCK, //buck2/defs.bzl)"\n\nbuck2/defs.bzl\nbuck2/BUCK\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"rdeps",children:["rdeps(universe: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", depth: ?",(0,i.jsx)(r.a,{href:"#integer",children:(0,i.jsx)(r.em,{children:"integer"})}),", captured_expr: ?",(0,i.jsx)(r.a,{href:"#query-expression",children:(0,i.jsx)(r.em,{children:"query expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Find the reverse dependencies of the targets in the given target universe."}),"\n",(0,i.jsxs)(r.p,{children:["The first parameter ",(0,i.jsx)(r.code,{children:"universe"})," defines where to look for reverse dependencies.\nThe second parameter ",(0,i.jsx)(r.code,{children:"targets"})," is a specific target or target pattern. It specifies the targets to find reverse dependencies for.\nThe third argument ",(0,i.jsx)(r.code,{children:"depth"})," is an optional integer literal specifying an upper bound on the depth of the search. A value of one (1) specifies that buck query should return only direct dependencies. If the depth parameter is omitted, the search is unbounded.\nThe fourth argument ",(0,i.jsx)(r.code,{children:"captured_expr"})," is an optional expression that can be used to filter the results."]}),"\n",(0,i.jsxs)(r.p,{children:["The returned values include the nodes from the ",(0,i.jsx)(r.code,{children:"targets"})," argument itself."]}),"\n",(0,i.jsx)(r.p,{children:"For example following uquery:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "rdeps(//buck2/..., //buck2/dice/dice:dice, 1)"\n'})}),"\n",(0,i.jsxs)(r.p,{children:["returns all targets under ",(0,i.jsx)(r.code,{children:"//buck2/..."})," that depend on ",(0,i.jsx)(r.code,{children:"//buck2/dice/dice:dice"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"somepath",children:["somepath(from: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", to: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),", captured_expr: ?",(0,i.jsx)(r.a,{href:"#query-expression",children:(0,i.jsx)(r.em,{children:"query expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Shortest dependency path between two sets of targets."}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The first parameter ",(0,i.jsx)(r.code,{children:"from"})," represents the upstream targets (e.g., final binary)."]}),"\n",(0,i.jsxs)(r.li,{children:["The second parameter ",(0,i.jsx)(r.code,{children:"to"})," represents the downstream targets (e.g., a library)."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Results are returned in order from top to bottom (upstream to downstream)."}),"\n",(0,i.jsx)(r.p,{children:"If multiple paths exist, the returned path is unspecified. If no path exists, an empty set is returned."}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery 'somepath(//buck2:buck2, //buck2/app/buck2_node:buck2_node)'\n\n//buck2:buck2\n//buck2/app/buck2:buck2-bin\n//buck2/app/buck2_analysis:buck2_analysis\n//buck2/app/buck2_node:buck2_node\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h4,{id:"target_deps",children:"target_deps()"}),"\n",(0,i.jsxs)(r.p,{children:["A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsx)(r.p,{children:"Returns the target dependencies of each dependency of the given targets, excluding any configuration, toolchain and execution dependencies (build time dependencies)\nlike compiler used as a part of the build."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 cquery \"deps('//foo:bar', 1, target_deps())\""})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"targets_in_buildfile",children:["targets_in_buildfile(files: ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Targets in build file."}),"\n",(0,i.jsxs)(r.p,{children:["For each file in the provided ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})}),", returns a list of all targets defined there."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"targets_in_buildfile()"})," and ",(0,i.jsx)(r.code,{children:"buildfile()"})," functions are inverses of each other."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:"$ buck2 uquery 'targets_in_buildfile(buildfile(//buck2:buck2))'\n\n//buck2:buck2\n//buck2:buck2_bundle\n//buck2:symlinked_buck2_and_tpx\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"testsof",children:["testsof(targets: ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Tests of specified targets."}),"\n",(0,i.jsxs)(r.p,{children:["Returns the test targets associated with the targets from the given ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expressions"})}),"."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "testsof(set(//buck2/dice/dice:dice //buck2/app/buck2:buck2))"\n\n//buck2/dice/dice:dice-unittest\n//buck2/app/buck2:buck2-unittest\n'})}),"\n",(0,i.jsxs)(r.p,{children:["returns the tests associated with both ",(0,i.jsx)(r.code,{children:"//buck2/dice/dice:dice"})," and ",(0,i.jsx)(r.code,{children:"//buck2/app/buck2:buck2"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["To obtain all the tests associated with the target and its dependencies,\nyou can combine the ",(0,i.jsx)(r.code,{children:"testsof()"})," function with the ",(0,i.jsx)(r.a,{href:"#deps",children:(0,i.jsx)(r.code,{children:"deps()"})})," function."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-text",children:'$ buck2 uquery "testsof(deps(//buck2/app/buck2:buck2))"\n'})}),"\n",(0,i.jsxs)(r.p,{children:["first finds the transitive closure of ",(0,i.jsx)(r.code,{children:"//buck2/app/buck2:buck2"}),",\nand then lists all the tests associated with the targets in this transitive closure."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h4,{id:"toolchain_deps",children:"toolchain_deps()"}),"\n",(0,i.jsxs)(r.p,{children:["A filter function that can be used in the query expression of ",(0,i.jsx)(r.code,{children:"deps"})," query function."]}),"\n",(0,i.jsx)(r.p,{children:"Returns the output of deps function for toolchain dependencies."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 cquery \"deps('//foo:bar', 1, toolchain_deps())\""})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.h4,{id:"union",children:["union(left: ",(0,i.jsx)(r.a,{href:"#any-value",children:(0,i.jsx)(r.em,{children:"any value"})}),", right: ",(0,i.jsx)(r.a,{href:"#any-value",children:(0,i.jsx)(r.em,{children:"any value"})}),")"]}),"\n",(0,i.jsx)(r.p,{children:"Computes the set union over the given arguments."}),"\n",(0,i.jsxs)(r.p,{children:["Can be used with the ",(0,i.jsx)(r.code,{children:"+"})," symbol. This operator is commutative."]}),"\n",(0,i.jsx)(r.p,{children:"The parser treats all this operator as left-associative and of equal precedence, so we recommend\nthat you use parentheses if you need to ensure a specific order of evaluation. A parenthesized expression\nresolves to the value of the expression it encloses."}),"\n",(0,i.jsxs)(r.p,{children:["Example:\n",(0,i.jsx)(r.code,{children:"buck2 aquery \"deps('//foo:bar') union deps('//baz:lib')\""})," is the same as\n",(0,i.jsx)(r.code,{children:"buck2 aquery \"deps('//foo:bar') + deps('//baz:lib')\""}),"\nBoth return the aggregation of the targets that ",(0,i.jsx)(r.code,{children:"//foo:bar"})," and ",(0,i.jsx)(r.code,{children:"//baz:lib"})," depend on."]}),"\n",(0,i.jsx)(r.h2,{id:"value-types",children:"Value Types"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"string"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"string"}),": for example, ",(0,i.jsx)(r.code,{children:"non_quoted_string"})," or ",(0,i.jsx)(r.code,{children:'"quoted string"'})]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"integer"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"integer"}),": must be positive and fit in ",(0,i.jsx)(r.code,{children:"u32"})]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"target expression"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"target-expression"}),": either a literal or the return value of a function"]}),"\n",(0,i.jsxs)(r.p,{children:["This could be a literal build target (",(0,i.jsx)(r.code,{children:'"cell//some:target"'}),") or a pattern (",(0,i.jsx)(r.code,{children:'"cell//package:"'})," or ",(0,i.jsx)(r.code,{children:'"cell//recursive/..."'}),") or the result of another function that returns a target expression. For queries in CLI commands (like ",(0,i.jsx)(r.code,{children:"buck2 query"}),"), literals can be relative to the current working dir (like ",(0,i.jsx)(r.code,{children:"some:target"})," or ",(0,i.jsx)(r.code,{children:"..."}),")."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"file expression"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"file-expression"}),": either a literal or the return value of a function"]}),"\n",(0,i.jsxs)(r.p,{children:["This could be a file literal like ",(0,i.jsx)(r.code,{children:"path/to/a.file"})," or the return value of a function that returns files (for example, the ",(0,i.jsx)(r.code,{children:"buildfile()"})," function)."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"target or file expression"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"target-or-file-expression"}),": either a ",(0,i.jsx)(r.a,{href:"#file-expression",children:(0,i.jsx)(r.em,{children:"file expression"})})," or ",(0,i.jsx)(r.a,{href:"#target-expression",children:(0,i.jsx)(r.em,{children:"target expression"})})]}),"\n",(0,i.jsxs)(r.p,{children:["This could be a literal like ",(0,i.jsx)(r.code,{children:"path/to/a.file"})," or ",(0,i.jsx)(r.code,{children:'"cell//some:target"'}),", or the return value of a function that returns files or targets."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"query expression"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"query-expression"}),": a valid query expression, evaluated in a function-specific context"]}),"\n",(0,i.jsxs)(r.p,{children:["This is used for functions that capture an expression and evaluate it in another context. For example, the ",(0,i.jsx)(r.code,{children:"deps()"})," function can accept an expression that it uses to find the children of a node to customize the deps traversal."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"any value"}),(0,i.jsx)("a",{class:"anchorWithStickyNavbar",name:"any-value"}),": any query value"]}),"\n"]}),"\n"]})]})}function x(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var s=n(96540);const i={},t=s.createContext(i);function l(e){const r=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);