// // (c) Meta Platforms, Inc. and affiliates. Confidential and proprietary.
//
package com.facebook.kotlin.compilerplugins.kosabi.stubsgen.util

import com.facebook.kotlin.compilerplugins.kosabi.common.FullTypeQualifier

// @generated by parsing types contained in kotlin/libraries/stdlib,
// https://github.com/JetBrains/kotlin/tree/master/libraries/stdlib

class KTStdlibTypes private constructor(){
  companion object {
    val KTStdLib_EnumEntries: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "enums",
                "EnumEntries",
            ))
    val KTStdLib_EnumEntriesList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "enums",
                "EnumEntriesList",
            ))
    val KTStdLib_Iterable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "Iterable",
            ))
    val KTStdLib_MutableIterable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableIterable",
            ))
    val KTStdLib_Collection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "Collection",
            ))
    val KTStdLib_MutableCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableCollection",
            ))
    val KTStdLib_List: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "List",
            ))
    val KTStdLib_MutableList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableList",
            ))
    val KTStdLib_Set: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "Set",
            ))
    val KTStdLib_MutableSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableSet",
            ))
    val KTStdLib_Map: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "Map",
            ))
    val KTStdLib_MutableMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableMap",
            ))
    val KTStdLib_PlatformThreadLocalRandom: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "jdk8",
                "PlatformThreadLocalRandom",
            ))
    val KTStdLib_PathWalkOption: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "PathWalkOption",
            ))
    val KTStdLib_ExperimentalPathApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "ExperimentalPathApi",
            ))
    val KTStdLib_OnErrorResult: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "OnErrorResult",
            ))
    val KTStdLib_CopyActionResult: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "CopyActionResult",
            ))
    val KTStdLib_FileVisitorBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "FileVisitorBuilder",
            ))
    val KTStdLib_FileVisitorBuilderImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "FileVisitorBuilderImpl",
            ))
    val KTStdLib_FileVisitorImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "FileVisitorImpl",
            ))
    val KTStdLib_CopyActionContext: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "CopyActionContext",
            ))
    val KTStdLib_PathRelativizer: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "PathRelativizer",
            ))
    val KTStdLib_DefaultCopyActionContext: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "DefaultCopyActionContext",
            ))
    val KTStdLib_ExceptionsCollector: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "ExceptionsCollector",
            ))
    val KTStdLib_IllegalFileNameException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "IllegalFileNameException",
            ))
    val KTStdLib_PathTreeWalk: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "PathTreeWalk",
            ))
    val KTStdLib_PathNode: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "PathNode",
            ))
    val KTStdLib_LinkFollowing: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "LinkFollowing",
            ))
    val KTStdLib_DirectoryEntriesReader: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "path",
                "DirectoryEntriesReader",
            ))
    val KTStdLib_UByteArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UByteArray",
            ))
    val KTStdLib_ULongRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ULongRange",
            ))
    val KTStdLib_ULongProgression: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ULongProgression",
            ))
    val KTStdLib_ULongProgressionIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ULongProgressionIterator",
            ))
    val KTStdLib_UInt: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UInt",
            ))
    val KTStdLib_UIntRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "UIntRange",
            ))
    val KTStdLib_UIntProgression: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "UIntProgression",
            ))
    val KTStdLib_UIntProgressionIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "UIntProgressionIterator",
            ))
    val KTStdLib_ExperimentalUnsignedTypes: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ExperimentalUnsignedTypes",
            ))
    val KTStdLib_UByte: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UByte",
            ))
    val KTStdLib_UShort: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UShort",
            ))
    val KTStdLib_ULongArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ULongArray",
            ))
    val KTStdLib_ULong: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ULong",
            ))
    val KTStdLib_UIntArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UIntArray",
            ))
    val KTStdLib_UShortArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UShortArray",
            ))
    val KTStdLib_Ctor: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Ctor",
            ))
    val KTStdLib_JsArrayView: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "JsArrayView",
            ))
    val KTStdLib_JsSetView: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "JsSetView",
            ))
    val KTStdLib_JsMapView: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "JsMapView",
            ))
    val KTStdLib_JsObject: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsObject",
            ))
    val KTStdLib_DefaultConstructorMarker: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "DefaultConstructorMarker",
            ))
    val KTStdLib_JsIntrinsic: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsIntrinsic",
            ))
    val KTStdLib_Metadata: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Metadata",
            ))
    val KTStdLib_FunctionAdapter: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "FunctionAdapter",
            ))
    val KTStdLib_IrLinkageError: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "IrLinkageError",
            ))
    val KTStdLib_DoNotIntrinsify: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "DoNotIntrinsify",
            ))
    val KTStdLib_JsFun: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsFun",
            ))
    val KTStdLib_JsGenerator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsGenerator",
            ))
    val KTStdLib_JsImplicitExport: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsImplicitExport",
            ))
    val KTStdLib_ArrayBuffer: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "ArrayBuffer",
            ))
    val KTStdLib_Float64Array: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Float64Array",
            ))
    val KTStdLib_Float32Array: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Float32Array",
            ))
    val KTStdLib_Int32Array: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Int32Array",
            ))
    val KTStdLib_String: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "String",
            ))
    val KTStdLib_Enum: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Enum",
            ))
    val KTStdLib_Throwable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Throwable",
            ))
    val KTStdLib_ByteArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ByteArray",
            ))
    val KTStdLib_CharArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "CharArray",
            ))
    val KTStdLib_ShortArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ShortArray",
            ))
    val KTStdLib_IntArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "IntArray",
            ))
    val KTStdLib_LongArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "LongArray",
            ))
    val KTStdLib_FloatArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "FloatArray",
            ))
    val KTStdLib_DoubleArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "DoubleArray",
            ))
    val KTStdLib_BooleanArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "BooleanArray",
            ))
    val KTStdLib_Boolean: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Boolean",
            ))
    val KTStdLib_Byte: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Byte",
            ))
    val KTStdLib_Short: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Short",
            ))
    val KTStdLib_Int: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Int",
            ))
    val KTStdLib_Long: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Long",
            ))
    val KTStdLib_Float: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Float",
            ))
    val KTStdLib_Double: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Double",
            ))
    val KTStdLib_Char: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Char",
            ))
    val KTStdLib_Letter: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Letter",
            ))
    val KTStdLib_Digit: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Digit",
            ))
    val KTStdLib_OtherLowercase: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "OtherLowercase",
            ))
    val KTStdLib_Category: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Category",
            ))
    val KTStdLib_Console: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Console",
            ))
    val KTStdLib_Volatile: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "Volatile",
            ))
    val KTStdLib_Synchronized: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "Synchronized",
            ))
    val KTStdLib_Error: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Error",
            ))
    val KTStdLib_Exception: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Exception",
            ))
    val KTStdLib_RuntimeException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "RuntimeException",
            ))
    val KTStdLib_IllegalArgumentException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "IllegalArgumentException",
            ))
    val KTStdLib_IllegalStateException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "IllegalStateException",
            ))
    val KTStdLib_IndexOutOfBoundsException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "IndexOutOfBoundsException",
            ))
    val KTStdLib_ConcurrentModificationException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ConcurrentModificationException",
            ))
    val KTStdLib_UnsupportedOperationException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UnsupportedOperationException",
            ))
    val KTStdLib_NumberFormatException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "NumberFormatException",
            ))
    val KTStdLib_NullPointerException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "NullPointerException",
            ))
    val KTStdLib_ClassCastException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ClassCastException",
            ))
    val KTStdLib_AssertionError: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "AssertionError",
            ))
    val KTStdLib_NoSuchElementException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "NoSuchElementException",
            ))
    val KTStdLib_ArithmeticException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ArithmeticException",
            ))
    val KTStdLib_NoWhenBranchMatchedException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "NoWhenBranchMatchedException",
            ))
    val KTStdLib_UninitializedPropertyAccessException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UninitializedPropertyAccessException",
            ))
    val KTStdLib_JsPolyfill: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsPolyfill",
            ))
    val KTStdLib_RegExp: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "RegExp",
            ))
    val KTStdLib_RegExpMatch: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "RegExpMatch",
            ))
    val KTStdLib_JsMath: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsMath",
            ))
    val KTStdLib_ExceptionTraceBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ExceptionTraceBuilder",
            ))
    val KTStdLib_Date: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Date",
            ))
    val KTStdLib_Json: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Json",
            ))
    val KTStdLib_KType: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KType",
            ))
    val KTStdLib_KFunction: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KFunction",
            ))
    val KTStdLib_ExperimentalAssociatedObjects: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "ExperimentalAssociatedObjects",
            ))
    val KTStdLib_AssociatedObjectKey: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "AssociatedObjectKey",
            ))
    val KTStdLib_KProperty: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KProperty",
            ))
    val KTStdLib_KMutableProperty: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KMutableProperty",
            ))
    val KTStdLib_KProperty0: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KProperty0",
            ))
    val KTStdLib_KMutableProperty0: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KMutableProperty0",
            ))
    val KTStdLib_KProperty1: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KProperty1",
            ))
    val KTStdLib_KMutableProperty1: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KMutableProperty1",
            ))
    val KTStdLib_KProperty2: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KProperty2",
            ))
    val KTStdLib_KMutableProperty2: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KMutableProperty2",
            ))
    val KTStdLib_KCallable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KCallable",
            ))
    val KTStdLib_KClass: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KClass",
            ))
    val KTStdLib_JsClass: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsClass",
            ))
    val KTStdLib_EnumEntriesSerializationProxy: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "enums",
                "EnumEntriesSerializationProxy",
            ))
    val KTStdLib_DefaultTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "DefaultTimeSource",
            ))
    val KTStdLib_MonotonicTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "MonotonicTimeSource",
            ))
    val KTStdLib_Process: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "Process",
            ))
    val KTStdLib_HrTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "HrTimeSource",
            ))
    val KTStdLib_PerformanceTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "PerformanceTimeSource",
            ))
    val KTStdLib_DateNowTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "DateNowTimeSource",
            ))
    val KTStdLib_GlobalPerformance: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "GlobalPerformance",
            ))
    val KTStdLib_Performance: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "Performance",
            ))
    val KTStdLib_DurationUnit: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "DurationUnit",
            ))
    val KTStdLib_Comparator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Comparator",
            ))
    val KTStdLib_BaseOutput: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "BaseOutput",
            ))
    val KTStdLib_NodeJsOutput: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "NodeJsOutput",
            ))
    val KTStdLib_OutputToConsoleLog: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "OutputToConsoleLog",
            ))
    val KTStdLib_BufferedOutput: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "BufferedOutput",
            ))
    val KTStdLib_BufferedOutputToConsoleLog: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "BufferedOutputToConsoleLog",
            ))
    val KTStdLib_Promise: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Promise",
            ))
    val KTStdLib_JsReadonlyArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "collections",
                "JsReadonlyArray",
            ))
    val KTStdLib_JsArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "collections",
                "JsArray",
            ))
    val KTStdLib_JsReadonlySet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "collections",
                "JsReadonlySet",
            ))
    val KTStdLib_JsSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "collections",
                "JsSet",
            ))
    val KTStdLib_JsReadonlyMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "collections",
                "JsReadonlyMap",
            ))
    val KTStdLib_JsMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "collections",
                "JsMap",
            ))
    val KTStdLib_CancellationException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "cancellation",
                "CancellationException",
            ))
    val KTStdLib_JsIterationStep: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "JsIterationStep",
            ))
    val KTStdLib_JsIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "JsIterator",
            ))
    val KTStdLib_GeneratorCoroutineImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "GeneratorCoroutineImpl",
            ))
    val KTStdLib_SafeContinuation: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "SafeContinuation",
            ))
    val KTStdLib_CoroutineImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "CoroutineImpl",
            ))
    val KTStdLib_CompletedContinuation: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "CompletedContinuation",
            ))
    val KTStdLib_InterceptedCoroutine: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "InterceptedCoroutine",
            ))
    val KTStdLib_RegexOption: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "RegexOption",
            ))
    val KTStdLib_MatchGroup: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "MatchGroup",
            ))
    val KTStdLib_Regex: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Regex",
            ))
    val KTStdLib_Appendable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Appendable",
            ))
    val KTStdLib_CharacterCodingException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "CharacterCodingException",
            ))
    val KTStdLib_StringBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "StringBuilder",
            ))
    val KTStdLib_CharCategory: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "CharCategory",
            ))
    val KTStdLib_RandomAccess: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "RandomAccess",
            ))
    val KTStdLib_HashSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashSet",
            ))
    val KTStdLib_AbstractMutableMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractMutableMap",
            ))
    val KTStdLib_HashMapKeysDefault: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMapKeysDefault",
            ))
    val KTStdLib_HashMapValuesDefault: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMapValuesDefault",
            ))
    val KTStdLib_LinkedHashMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "LinkedHashMap",
            ))
    val KTStdLib_AbstractMutableSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractMutableSet",
            ))
    val KTStdLib_HashMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMap",
            ))
    val KTStdLib_LinkedHashSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "LinkedHashSet",
            ))
    val KTStdLib_JsRawArray: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "JsRawArray",
            ))
    val KTStdLib_InternalStringMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "InternalStringMap",
            ))
    val KTStdLib_InternalHashMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "InternalHashMap",
            ))
    val KTStdLib_AbstractMutableList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractMutableList",
            ))
    val KTStdLib_ArrayList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ArrayList",
            ))
    val KTStdLib_AbstractMutableCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractMutableCollection",
            ))
    val KTStdLib_InternalStringLinkedMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "InternalStringLinkedMap",
            ))
    val KTStdLib_InternalMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "InternalMap",
            ))
    val KTStdLib_HashMapKeys: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMapKeys",
            ))
    val KTStdLib_HashMapValues: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMapValues",
            ))
    val KTStdLib_HashMapEntrySetBase: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMapEntrySetBase",
            ))
    val KTStdLib_HashMapEntrySet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "HashMapEntrySet",
            ))
    val KTStdLib_AutoCloseable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "AutoCloseable",
            ))
    val KTStdLib_ConstrainedOnceSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "ConstrainedOnceSequence",
            ))
    val KTStdLib_Serializable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "Serializable",
            ))
    val KTStdLib_JsName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsName",
            ))
    val KTStdLib_JsFileName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsFileName",
            ))
    val KTStdLib_JsModule: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsModule",
            ))
    val KTStdLib_JsNonModule: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsNonModule",
            ))
    val KTStdLib_JsQualifier: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsQualifier",
            ))
    val KTStdLib_JsExport: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsExport",
            ))
    val KTStdLib_EagerInitialization: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "EagerInitialization",
            ))
    val KTStdLib_JsExternalInheritorsOnly: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsExternalInheritorsOnly",
            ))
    val KTStdLib_JsExternalArgument: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsExternalArgument",
            ))
    val KTStdLib_JsStatic: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsStatic",
            ))
    val KTStdLib_AtomicReference: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "concurrent",
                "AtomicReference",
            ))
    val KTStdLib_Dynamic: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "Dynamic",
            ))
    val KTStdLib_JsAny: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsAny",
            ))
    val KTStdLib_JsString: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsString",
            ))
    val KTStdLib_JsReference: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsReference",
            ))
    val KTStdLib_JsBigInt: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsBigInt",
            ))
    val KTStdLib_JsException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsException",
            ))
    val KTStdLib_JsBoolean: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsBoolean",
            ))
    val KTStdLib_JsNumber: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "JsNumber",
            ))
    val KTStdLib_Nothing: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Nothing",
            ))
    val KTStdLib_Array: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Array",
            ))
    val KTStdLib_Any: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Any",
            ))
    val KTStdLib_WasiErrorCode: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "WasiErrorCode",
            ))
    val KTStdLib_WasiError: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "WasiError",
            ))
    val KTStdLib_OutOfMemoryError: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "OutOfMemoryError",
            ))
    val KTStdLib_WasmImport: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "WasmImport",
            ))
    val KTStdLib_WasmExport: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "WasmExport",
            ))
    val KTStdLib_MemoryAllocator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "unsafe",
                "MemoryAllocator",
            ))
    val KTStdLib_ScopedMemoryAllocator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "unsafe",
                "ScopedMemoryAllocator",
            ))
    val KTStdLib_UnsafeWasmMemoryApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "unsafe",
                "UnsafeWasmMemoryApi",
            ))
    val KTStdLib_Pointer: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "wasm",
                "unsafe",
                "Pointer",
            ))
    val KTStdLib_BitSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "BitSet",
            ))
    val KTStdLib_ObsoleteNativeApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "ObsoleteNativeApi",
            ))
    val KTStdLib_TypeCastException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "TypeCastException",
            ))
    val KTStdLib_JvmOverloads: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmOverloads",
            ))
    val KTStdLib_JvmStatic: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmStatic",
            ))
    val KTStdLib_JvmName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmName",
            ))
    val KTStdLib_JvmMultifileClass: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmMultifileClass",
            ))
    val KTStdLib_JvmPackageName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmPackageName",
            ))
    val KTStdLib_JvmSynthetic: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmSynthetic",
            ))
    val KTStdLib_Throws: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "Throws",
            ))
    val KTStdLib_ImplicitlyActualizedByJvmDeclaration: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "ImplicitlyActualizedByJvmDeclaration",
            ))
    val KTStdLib_JvmField: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmField",
            ))
    val KTStdLib_JvmSuppressWildcards: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmSuppressWildcards",
            ))
    val KTStdLib_JvmWildcard: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmWildcard",
            ))
    val KTStdLib_JvmInline: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmInline",
            ))
    val KTStdLib_JvmRecord: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmRecord",
            ))
    val KTStdLib_Transient: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "Transient",
            ))
    val KTStdLib_Strictfp: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "Strictfp",
            ))
    val KTStdLib_JvmSerializableLambda: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmSerializableLambda",
            ))
    val KTStdLib_KotlinReflectionNotSupportedError: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "KotlinReflectionNotSupportedError",
            ))
    val KTStdLib_FunctionN: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "FunctionN",
            ))
    val KTStdLib_Function0: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function0",
            ))
    val KTStdLib_Function1: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function1",
            ))
    val KTStdLib_Function2: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function2",
            ))
    val KTStdLib_Function3: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function3",
            ))
    val KTStdLib_Function4: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function4",
            ))
    val KTStdLib_Function5: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function5",
            ))
    val KTStdLib_Function6: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function6",
            ))
    val KTStdLib_Function7: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function7",
            ))
    val KTStdLib_Function8: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function8",
            ))
    val KTStdLib_Function9: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function9",
            ))
    val KTStdLib_Function10: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function10",
            ))
    val KTStdLib_Function11: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function11",
            ))
    val KTStdLib_Function12: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function12",
            ))
    val KTStdLib_Function13: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function13",
            ))
    val KTStdLib_Function14: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function14",
            ))
    val KTStdLib_Function15: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function15",
            ))
    val KTStdLib_Function16: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function16",
            ))
    val KTStdLib_Function17: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function17",
            ))
    val KTStdLib_Function18: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function18",
            ))
    val KTStdLib_Function19: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function19",
            ))
    val KTStdLib_Function20: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function20",
            ))
    val KTStdLib_Function21: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function21",
            ))
    val KTStdLib_Function22: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "functions",
                "Function22",
            ))
    val KTStdLib_PurelyImplements: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "PurelyImplements",
            ))
    val KTStdLib_KotlinNullPointerException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "KotlinNullPointerException",
            ))
    val KTStdLib_Constants: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "math",
                "Constants",
            ))
    val KTStdLib_SynchronizedLazyImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "SynchronizedLazyImpl",
            ))
    val KTStdLib_SafePublicationLazyImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "SafePublicationLazyImpl",
            ))
    val KTStdLib_KParameter: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KParameter",
            ))
    val KTStdLib_KAnnotatedElement: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KAnnotatedElement",
            ))
    val KTStdLib_KVisibility: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KVisibility",
            ))
    val KTStdLib_KDeclarationContainer: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KDeclarationContainer",
            ))
    val KTStdLib_TypeImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "TypeImpl",
            ))
    val KTStdLib_TypeVariableImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "TypeVariableImpl",
            ))
    val KTStdLib_GenericArrayTypeImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "GenericArrayTypeImpl",
            ))
    val KTStdLib_WildcardTypeImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "WildcardTypeImpl",
            ))
    val KTStdLib_ParameterizedTypeImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "ParameterizedTypeImpl",
            ))
    val KTStdLib_FileSystemException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "FileSystemException",
            ))
    val KTStdLib_FileAlreadyExistsException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "FileAlreadyExistsException",
            ))
    val KTStdLib_AccessDeniedException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "AccessDeniedException",
            ))
    val KTStdLib_NoSuchFileException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "NoSuchFileException",
            ))
    val KTStdLib_LinesSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "LinesSequence",
            ))
    val KTStdLib_DecodeInputStream: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "encoding",
                "DecodeInputStream",
            ))
    val KTStdLib_EncodeOutputStream: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "encoding",
                "EncodeOutputStream",
            ))
    val KTStdLib_OnErrorAction: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "OnErrorAction",
            ))
    val KTStdLib_TerminateException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "TerminateException",
            ))
    val KTStdLib_FileWalkDirection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "FileWalkDirection",
            ))
    val KTStdLib_FileTreeWalk: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "FileTreeWalk",
            ))
    val KTStdLib_FilePathComponents: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "FilePathComponents",
            ))
    val KTStdLib_LineReader: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "LineReader",
            ))
    val KTStdLib_ExposingBufferByteArrayOutputStream: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "ExposingBufferByteArrayOutputStream",
            ))
    val KTStdLib_JvmDefault: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmDefault",
            ))
    val KTStdLib_JvmDefaultWithoutCompatibility: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmDefaultWithoutCompatibility",
            ))
    val KTStdLib_JvmDefaultWithCompatibility: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "jvm",
                "JvmDefaultWithCompatibility",
            ))
    val KTStdLib_CharDirectionality: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "CharDirectionality",
            ))
    val KTStdLib_FlagEnum: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "FlagEnum",
            ))
    val KTStdLib_MatcherMatchResult: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "MatcherMatchResult",
            ))
    val KTStdLib_SystemProperties: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "SystemProperties",
            ))
    val KTStdLib_Charsets: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Charsets",
            ))
    val KTStdLib_ScreenFloatValueRegEx: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "ScreenFloatValueRegEx",
            ))
    val KTStdLib_AbstractPlatformRandom: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "AbstractPlatformRandom",
            ))
    val KTStdLib_FallbackThreadLocalRandom: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "FallbackThreadLocalRandom",
            ))
    val KTStdLib_PlatformRandom: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "PlatformRandom",
            ))
    val KTStdLib_KotlinRandom: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "KotlinRandom",
            ))
    val KTStdLib_ListBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "ListBuilder",
            ))
    val KTStdLib_SerializedCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "SerializedCollection",
            ))
    val KTStdLib_MapBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "MapBuilder",
            ))
    val KTStdLib_MapBuilderKeys: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "MapBuilderKeys",
            ))
    val KTStdLib_MapBuilderValues: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "MapBuilderValues",
            ))
    val KTStdLib_AbstractMapBuilderEntrySet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "AbstractMapBuilderEntrySet",
            ))
    val KTStdLib_MapBuilderEntries: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "MapBuilderEntries",
            ))
    val KTStdLib_SerializedMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "SerializedMap",
            ))
    val KTStdLib_SetBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "builders",
                "SetBuilder",
            ))
    val KTStdLib_ExperimentalJsFileName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "ExperimentalJsFileName",
            ))
    val KTStdLib_ExperimentalJsExport: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "ExperimentalJsExport",
            ))
    val KTStdLib_ExperimentalJsStatic: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "ExperimentalJsStatic",
            ))
    val KTStdLib_ExperimentalJsReflectionCreateInstance: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "ExperimentalJsReflectionCreateInstance",
            ))
    val KTStdLib_ExperimentalJsCollectionsApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "js",
                "ExperimentalJsCollectionsApi",
            ))
    val KTStdLib_ReadAfterEOFException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "ReadAfterEOFException",
            ))
    val KTStdLib_KotlinNothingValueException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "KotlinNothingValueException",
            ))
    val KTStdLib_ObsoleteWorkersApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "concurrent",
                "ObsoleteWorkersApi",
            ))
    val KTStdLib_FreezingIsDeprecated: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "FreezingIsDeprecated",
            ))
    val KTStdLib_SpecialToken: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SpecialToken",
            ))
    val KTStdLib_Lexer: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "Lexer",
            ))
    val KTStdLib_Quantifier: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "Quantifier",
            ))
    val KTStdLib_NamedGroup: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "NamedGroup",
            ))
    val KTStdLib_UnicodeCategory: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "UnicodeCategory",
            ))
    val KTStdLib_UnicodeCategoryScope: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "UnicodeCategoryScope",
            ))
    val KTStdLib_AbstractCharClass: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "AbstractCharClass",
            ))
    val KTStdLib_JointSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "JointSet",
            ))
    val KTStdLib_CharSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "CharSet",
            ))
    val KTStdLib_SimpleSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SimpleSet",
            ))
    val KTStdLib_AbstractSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "AbstractSet",
            ))
    val KTStdLib_FixedLengthQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "FixedLengthQuantifierSet",
            ))
    val KTStdLib_ReluctantFixedLengthQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "ReluctantFixedLengthQuantifierSet",
            ))
    val KTStdLib_EmptySet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "EmptySet",
            ))
    val KTStdLib_LowSurrogateCharSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "LowSurrogateCharSet",
            ))
    val KTStdLib_HighSurrogateCharSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "HighSurrogateCharSet",
            ))
    val KTStdLib_ReluctantLeafQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "ReluctantLeafQuantifierSet",
            ))
    val KTStdLib_PossessiveFixedLengthQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "PossessiveFixedLengthQuantifierSet",
            ))
    val KTStdLib_RangeSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "RangeSet",
            ))
    val KTStdLib_PossessiveGroupQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "PossessiveGroupQuantifierSet",
            ))
    val KTStdLib_SequenceSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SequenceSet",
            ))
    val KTStdLib_FSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "FSet",
            ))
    val KTStdLib_FinalSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "FinalSet",
            ))
    val KTStdLib_NonCapFSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "NonCapFSet",
            ))
    val KTStdLib_AheadFSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "AheadFSet",
            ))
    val KTStdLib_BehindFSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "BehindFSet",
            ))
    val KTStdLib_AtomicFSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "AtomicFSet",
            ))
    val KTStdLib_SingleSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SingleSet",
            ))
    val KTStdLib_WordBoundarySet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "WordBoundarySet",
            ))
    val KTStdLib_DecomposedCharSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "DecomposedCharSet",
            ))
    val KTStdLib_LookAroundSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "LookAroundSet",
            ))
    val KTStdLib_HangulDecomposedCharSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "HangulDecomposedCharSet",
            ))
    val KTStdLib_QuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "QuantifierSet",
            ))
    val KTStdLib_LeafSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "LeafSet",
            ))
    val KTStdLib_DotQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "DotQuantifierSet",
            ))
    val KTStdLib_PositiveLookAheadSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "PositiveLookAheadSet",
            ))
    val KTStdLib_NegativeLookAheadSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "NegativeLookAheadSet",
            ))
    val KTStdLib_NonCapturingJointSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "NonCapturingJointSet",
            ))
    val KTStdLib_PositiveLookBehindSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "PositiveLookBehindSet",
            ))
    val KTStdLib_NegativeLookBehindSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "NegativeLookBehindSet",
            ))
    val KTStdLib_LeafQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "LeafQuantifierSet",
            ))
    val KTStdLib_EOLSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "EOLSet",
            ))
    val KTStdLib_UnifiedQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "UnifiedQuantifierSet",
            ))
    val KTStdLib_PreviousMatchSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "PreviousMatchSet",
            ))
    val KTStdLib_DotSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "DotSet",
            ))
    val KTStdLib_AtomicJointSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "AtomicJointSet",
            ))
    val KTStdLib_EOISet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "EOISet",
            ))
    val KTStdLib_PossessiveLeafQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "PossessiveLeafQuantifierSet",
            ))
    val KTStdLib_SupplementaryRangeSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SupplementaryRangeSet",
            ))
    val KTStdLib_CompositeRangeSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "CompositeRangeSet",
            ))
    val KTStdLib_SOLSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SOLSet",
            ))
    val KTStdLib_GroupQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "GroupQuantifierSet",
            ))
    val KTStdLib_SurrogateRangeSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "SurrogateRangeSet",
            ))
    val KTStdLib_BackReferenceSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "BackReferenceSet",
            ))
    val KTStdLib_ReluctantGroupQuantifierSet: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "ReluctantGroupQuantifierSet",
            ))
    val KTStdLib_MatchResultImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "MatchResultImpl",
            ))
    val KTStdLib_CharClass: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "CharClass",
            ))
    val KTStdLib_Pattern: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "Pattern",
            ))
    val KTStdLib_AbstractLineTerminator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "regex",
                "AbstractLineTerminator",
            ))
    val KTStdLib_PatternSyntaxException: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "PatternSyntaxException",
            ))
    val KTStdLib_Iterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "Iterator",
            ))
    val KTStdLib_MutableIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableIterator",
            ))
    val KTStdLib_ListIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ListIterator",
            ))
    val KTStdLib_MutableListIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableListIterator",
            ))
    val KTStdLib_CharProgression: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "CharProgression",
            ))
    val KTStdLib_IntProgression: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "IntProgression",
            ))
    val KTStdLib_LongProgression: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "LongProgression",
            ))
    val KTStdLib_CharRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "CharRange",
            ))
    val KTStdLib_IntRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "IntRange",
            ))
    val KTStdLib_LongRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "LongRange",
            ))
    val KTStdLib_ComparableRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ComparableRange",
            ))
    val KTStdLib_ComparableOpenEndRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ComparableOpenEndRange",
            ))
    val KTStdLib_ClosedFloatingPointRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ClosedFloatingPointRange",
            ))
    val KTStdLib_ClosedDoubleRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ClosedDoubleRange",
            ))
    val KTStdLib_OpenEndDoubleRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "OpenEndDoubleRange",
            ))
    val KTStdLib_ClosedFloatRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ClosedFloatRange",
            ))
    val KTStdLib_OpenEndFloatRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "OpenEndFloatRange",
            ))
    val KTStdLib_CharProgressionIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "CharProgressionIterator",
            ))
    val KTStdLib_IntProgressionIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "IntProgressionIterator",
            ))
    val KTStdLib_LongProgressionIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "LongProgressionIterator",
            ))
    val KTStdLib_ClosedRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "ClosedRange",
            ))
    val KTStdLib_OpenEndRange: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ranges",
                "OpenEndRange",
            ))
    val KTStdLib_ExperimentalTypeInference: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "experimental",
                "ExperimentalTypeInference",
            ))
    val KTStdLib_ExperimentalObjCRefinement: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "experimental",
                "ExperimentalObjCRefinement",
            ))
    val KTStdLib_ExperimentalObjCName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "experimental",
                "ExperimentalObjCName",
            ))
    val KTStdLib_ExperimentalNativeApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "experimental",
                "ExperimentalNativeApi",
            ))
    val KTStdLib_ReversedComparator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "comparisons",
                "ReversedComparator",
            ))
    val KTStdLib_NaturalOrderComparator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "comparisons",
                "NaturalOrderComparator",
            ))
    val KTStdLib_ReverseOrderComparator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "comparisons",
                "ReverseOrderComparator",
            ))
    val KTStdLib_DeepRecursiveFunction: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "DeepRecursiveFunction",
            ))
    val KTStdLib_DeepRecursiveScope: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "DeepRecursiveScope",
            ))
    val KTStdLib_DeepRecursiveScopeImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "DeepRecursiveScopeImpl",
            ))
    val KTStdLib_Result: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Result",
            ))
    val KTStdLib_Lazy: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Lazy",
            ))
    val KTStdLib_LazyThreadSafetyMode: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "LazyThreadSafetyMode",
            ))
    val KTStdLib_UnsafeLazyImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "UnsafeLazyImpl",
            ))
    val KTStdLib_InitializedLazyImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "InitializedLazyImpl",
            ))
    val KTStdLib_Pair: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Pair",
            ))
    val KTStdLib_Triple: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "Triple",
            ))
    val KTStdLib_NotImplementedError: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "NotImplementedError",
            ))
    val KTStdLib_KotlinVersion: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "KotlinVersion",
            ))
    val KTStdLib_KotlinVersionCurrentValue: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "KotlinVersionCurrentValue",
            ))
    val KTStdLib_Effect: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "Effect",
            ))
    val KTStdLib_ConditionalEffect: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "ConditionalEffect",
            ))
    val KTStdLib_SimpleEffect: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "SimpleEffect",
            ))
    val KTStdLib_Returns: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "Returns",
            ))
    val KTStdLib_ReturnsNotNull: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "ReturnsNotNull",
            ))
    val KTStdLib_CallsInPlace: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "CallsInPlace",
            ))
    val KTStdLib_ExperimentalContracts: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "ExperimentalContracts",
            ))
    val KTStdLib_ContractBuilder: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "ContractBuilder",
            ))
    val KTStdLib_InvocationKind: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "contracts",
                "InvocationKind",
            ))
    val KTStdLib_KTypeProjection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KTypeProjection",
            ))
    val KTStdLib_KClassifier: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KClassifier",
            ))
    val KTStdLib_KTypeParameter: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KTypeParameter",
            ))
    val KTStdLib_KVariance: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "reflect",
                "KVariance",
            ))
    val KTStdLib_Base64: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "encoding",
                "Base64",
            ))
    val KTStdLib_ExperimentalEncodingApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "io",
                "encoding",
                "ExperimentalEncodingApi",
            ))
    val KTStdLib_TimedValue: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "TimedValue",
            ))
    val KTStdLib_AbstractLongTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "AbstractLongTimeSource",
            ))
    val KTStdLib_AbstractDoubleTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "AbstractDoubleTimeSource",
            ))
    val KTStdLib_TestTimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "TestTimeSource",
            ))
    val KTStdLib_TimeSource: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "TimeSource",
            ))
    val KTStdLib_ValueTimeMarkReading: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "ValueTimeMarkReading",
            ))
    val KTStdLib_TimeMark: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "TimeMark",
            ))
    val KTStdLib_ComparableTimeMark: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "ComparableTimeMark",
            ))
    val KTStdLib_AdjustedTimeMark: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "AdjustedTimeMark",
            ))
    val KTStdLib_ExperimentalTime: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "ExperimentalTime",
            ))
    val KTStdLib_Duration: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "time",
                "Duration",
            ))
    val KTStdLib_WasExperimental: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "WasExperimental",
            ))
    val KTStdLib_BuilderInference: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "BuilderInference",
            ))
    val KTStdLib_OverloadResolutionByLambdaReturnType: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "OverloadResolutionByLambdaReturnType",
            ))
    val KTStdLib_ThreadLocal: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "concurrent",
                "ThreadLocal",
            ))
    val KTStdLib_SharedImmutable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "concurrent",
                "SharedImmutable",
            ))
    val KTStdLib_CName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "CName",
            ))
    val KTStdLib_ObjCName: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "ObjCName",
            ))
    val KTStdLib_HidesFromObjC: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "HidesFromObjC",
            ))
    val KTStdLib_HiddenFromObjC: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "HiddenFromObjC",
            ))
    val KTStdLib_RefinesInSwift: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "RefinesInSwift",
            ))
    val KTStdLib_ShouldRefineInSwift: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "native",
                "ShouldRefineInSwift",
            ))
    val KTStdLib_ExperimentalMultiplatform: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ExperimentalMultiplatform",
            ))
    val KTStdLib_OptionalExpectation: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "OptionalExpectation",
            ))
    val KTStdLib_RequiresOptIn: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "RequiresOptIn",
            ))
    val KTStdLib_OptIn: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "OptIn",
            ))
    val KTStdLib_ExperimentalSubclassOptIn: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ExperimentalSubclassOptIn",
            ))
    val KTStdLib_SubclassOptInRequired: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "SubclassOptInRequired",
            ))
    val KTStdLib_ConsistentCopyVisibility: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ConsistentCopyVisibility",
            ))
    val KTStdLib_ExposedCopyVisibility: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ExposedCopyVisibility",
            ))
    val KTStdLib_ExperimentalStdlibApi: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "ExperimentalStdlibApi",
            ))
    val KTStdLib_Delegates: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "properties",
                "Delegates",
            ))
    val KTStdLib_NotNullVar: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "properties",
                "NotNullVar",
            ))
    val KTStdLib_ObservableProperty: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "properties",
                "ObservableProperty",
            ))
    val KTStdLib_ReadOnlyProperty: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "properties",
                "ReadOnlyProperty",
            ))
    val KTStdLib_ReadWriteProperty: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "properties",
                "ReadWriteProperty",
            ))
    val KTStdLib_PropertyDelegateProvider: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "properties",
                "PropertyDelegateProvider",
            ))
    val KTStdLib_ContinuationInterceptor: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "ContinuationInterceptor",
            ))
    val KTStdLib_AbstractCoroutineContextElement: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "AbstractCoroutineContextElement",
            ))
    val KTStdLib_AbstractCoroutineContextKey: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "AbstractCoroutineContextKey",
            ))
    val KTStdLib_EmptyCoroutineContext: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "EmptyCoroutineContext",
            ))
    val KTStdLib_CombinedContext: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "CombinedContext",
            ))
    val KTStdLib_CoroutineSingletons: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "intrinsics",
                "CoroutineSingletons",
            ))
    val KTStdLib_CoroutineContext: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "CoroutineContext",
            ))
    val KTStdLib_Continuation: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "Continuation",
            ))
    val KTStdLib_RestrictsSuspension: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "coroutines",
                "RestrictsSuspension",
            ))
    val KTStdLib_DelimitedRangesSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "DelimitedRangesSequence",
            ))
    val KTStdLib_MatchGroupCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "MatchGroupCollection",
            ))
    val KTStdLib_MatchNamedGroupCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "MatchNamedGroupCollection",
            ))
    val KTStdLib_MatchResult: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "MatchResult",
            ))
    val KTStdLib_HexFormat: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "HexFormat",
            ))
    val KTStdLib_Typography: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "text",
                "Typography",
            ))
    val KTStdLib_XorWowRandom: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "XorWowRandom",
            ))
    val KTStdLib_Random: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "random",
                "Random",
            ))
    val KTStdLib_IndexingIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "IndexingIterator",
            ))
    val KTStdLib_AbstractList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractList",
            ))
    val KTStdLib_EmptyIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "EmptyIterator",
            ))
    val KTStdLib_EmptyList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "EmptyList",
            ))
    val KTStdLib_ArrayAsCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ArrayAsCollection",
            ))
    val KTStdLib_AbstractMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractMap",
            ))
    val KTStdLib_State: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "State",
            ))
    val KTStdLib_AbstractIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractIterator",
            ))
    val KTStdLib_AbstractCollection: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "AbstractCollection",
            ))
    val KTStdLib_IndexingIterable: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "IndexingIterable",
            ))
    val KTStdLib_ReversedListReadOnly: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ReversedListReadOnly",
            ))
    val KTStdLib_ReversedList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ReversedList",
            ))
    val KTStdLib_ByteIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ByteIterator",
            ))
    val KTStdLib_CharIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "CharIterator",
            ))
    val KTStdLib_ShortIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ShortIterator",
            ))
    val KTStdLib_IntIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "IntIterator",
            ))
    val KTStdLib_LongIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "LongIterator",
            ))
    val KTStdLib_FloatIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "FloatIterator",
            ))
    val KTStdLib_DoubleIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "DoubleIterator",
            ))
    val KTStdLib_BooleanIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "BooleanIterator",
            ))
    val KTStdLib_IndexedValue: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "IndexedValue",
            ))
    val KTStdLib_EmptySequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "EmptySequence",
            ))
    val KTStdLib_FilteringSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "FilteringSequence",
            ))
    val KTStdLib_TransformingSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "TransformingSequence",
            ))
    val KTStdLib_TransformingIndexedSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "TransformingIndexedSequence",
            ))
    val KTStdLib_IndexingSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "IndexingSequence",
            ))
    val KTStdLib_MergingSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "MergingSequence",
            ))
    val KTStdLib_FlatteningSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "FlatteningSequence",
            ))
    val KTStdLib_DropTakeSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "DropTakeSequence",
            ))
    val KTStdLib_SubSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "SubSequence",
            ))
    val KTStdLib_TakeSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "TakeSequence",
            ))
    val KTStdLib_TakeWhileSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "TakeWhileSequence",
            ))
    val KTStdLib_DropSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "DropSequence",
            ))
    val KTStdLib_DropWhileSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "DropWhileSequence",
            ))
    val KTStdLib_DistinctSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "DistinctSequence",
            ))
    val KTStdLib_DistinctIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "DistinctIterator",
            ))
    val KTStdLib_GeneratorSequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "GeneratorSequence",
            ))
    val KTStdLib_SequenceScope: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "SequenceScope",
            ))
    val KTStdLib_SequenceBuilderIterator: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "SequenceBuilderIterator",
            ))
    val KTStdLib_EmptyMap: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "EmptyMap",
            ))
    val KTStdLib_MovingSubList: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MovingSubList",
            ))
    val KTStdLib_RingBuffer: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "RingBuffer",
            ))
    val KTStdLib_MapWithDefault: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MapWithDefault",
            ))
    val KTStdLib_MutableMapWithDefault: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableMapWithDefault",
            ))
    val KTStdLib_MapWithDefaultImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MapWithDefaultImpl",
            ))
    val KTStdLib_MutableMapWithDefaultImpl: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "MutableMapWithDefaultImpl",
            ))
    val KTStdLib_ArrayDeque: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "ArrayDeque",
            ))
    val KTStdLib_Grouping: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "collections",
                "Grouping",
            ))
    val KTStdLib_Sequence: FullTypeQualifier =
        FullTypeQualifier(
            listOf(
                "kotlin",
                "sequences",
                "Sequence",
            ))
  }
}
