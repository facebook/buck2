# This file is @generated, regenerate by re-running test with `-- --env BUCK2_UPDATE_GOLDEN=1` appended to the test command

Record information about the previous failed buck2 command

Usage: buck2 rage [OPTIONS]

Options:
      --timeout <TIMEOUT>
          Stop collecting information after `<timeout>` seconds

          [default: 120]

      --invocation-offset <INVOCATION_OFFSET>
          Use value 0 to select last invocation, 1 to select second to last and so on

      --invocation-id <INVOCATION_ID>
          Select invocation directly using the invocation's UUID

      --no-invocation
          Collect rage report about buck2 in general, not about specific invocation

      --no-paste
          We may want to omit paste if this is not a user or is called in a machine with no pastry
          command

  -h, --help
          Print help (see a summary with '-h')

Universal Options:
  -v, --verbose <VERBOSITY>
          How verbose buck should be while logging.

          Values: 0 = Quiet, errors only; 1 = Show status. Default; 2 = more info about errors; 3 =
          more info about everything; 4 = more info about everything + stderr;

          It can be combined with specific log items (stderr, full_failed_command, commands,
          actions, status, stats, success) to fine-tune the verbosity of the log. Example usage
          "-v=1,stderr"

          [default: 1]

      --oncall <ONCALL>
          The oncall executing this command

      --client-metadata <CLIENT_METADATA>
          Metadata key-value pairs to inject into Buck2's logging. Client metadata must be of the
          form `key=value`, where `key` is a snake_case identifier, and will be sent to backend
          datasets
