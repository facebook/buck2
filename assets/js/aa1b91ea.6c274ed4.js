"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28928],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(96540);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},82259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/build/AnonTarget","title":"AnonTarget","description":"Accessors to the promise of the anon rule and the promised artifacts associated with the rule.","source":"@site/../docs/api/build/AnonTarget.md","sourceDirName":"api/build","slug":"/api/build/AnonTarget","permalink":"/docs/api/build/AnonTarget","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"AnalysisContext","permalink":"/docs/api/build/AnalysisContext"},"next":{"title":"AnonTargets","permalink":"/docs/api/build/AnonTargets"}}');var a=n(74848),s=n(28453),i=n(56289);const o={},c="AnonTarget",d={},l=[{value:"AnonTarget.artifact",id:"anontargetartifact",level:2},{value:"AnonTarget.artifacts",id:"anontargetartifacts",level:2},{value:"AnonTarget.promise",id:"anontargetpromise",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"anontarget",children:"AnonTarget"})}),"\n",(0,a.jsx)(t.p,{children:"Accessors to the promise of the anon rule and the promised artifacts associated with the rule."}),"\n",(0,a.jsx)(t.h2,{id:"anontargetartifact",children:"AnonTarget.artifact"}),"\n",(0,a.jsx)("pre",{class:"language-python",children:(0,a.jsxs)("code",{children:["def AnonTarget.artifact(name: ",(0,a.jsx)(i.default,{to:"/docs/api/starlark/str",children:"str"}),")"]})}),"\n",(0,a.jsxs)(t.p,{children:["Gets a specific ",(0,a.jsx)(t.code,{children:"StarlarkPromiseArtifact"})," by name. Returns an error if the name was not found in the registered promise artifacts for the anon target."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"anontargetartifacts",children:"AnonTarget.artifacts"}),"\n",(0,a.jsx)("pre",{class:"language-python",children:(0,a.jsx)("code",{children:"def AnonTarget.artifacts()"})}),"\n",(0,a.jsxs)(t.p,{children:["Returns a dict where the key is the promise artifact's name, and the value is the ",(0,a.jsx)(t.code,{children:"StarlarkPromiseArtifact"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["To get a promise artifact where the short path is accessible, call ",(0,a.jsx)(t.code,{children:"ctx.actions.assert_short_path(...)"})," and\npass in the artifact retrieved from this dict."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"anontargetpromise",children:"AnonTarget.promise"}),"\n",(0,a.jsx)("pre",{class:"language-python",children:(0,a.jsxs)("code",{children:["AnonTarget.promise: ",(0,a.jsx)(i.default,{to:"/docs/api/build/Promise",children:"Promise"})]})}),"\n",(0,a.jsx)(t.p,{children:"Returns the promise that maps to the result of the anon rule."})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);