"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[63375],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const l={},d=s.createContext(l);function r(e){const t=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(d.Provider,{value:t},e.children)}},37663:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/build/attrs","title":"attrs","description":"any","source":"@site/../docs/api/build/attrs.md","sourceDirName":"api/build","slug":"/api/build/attrs","permalink":"/docs/api/build/attrs","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"WriteJsonCliArgs","permalink":"/docs/api/build/WriteJsonCliArgs"},"next":{"title":"cmd_args","permalink":"/docs/api/build/cmd_args"}}');var l=n(74848),d=n(28453),r=n(56289);const a={},i="attrs",o={},c=[{value:"any",id:"any",level:2},{value:"arg",id:"arg",level:2},{value:"bool",id:"bool",level:2},{value:"configuration_label",id:"configuration_label",level:2},{value:"configured_dep",id:"configured_dep",level:2},{value:"default_only",id:"default_only",level:2},{value:"dep",id:"dep",level:2},{value:"dict",id:"dict",level:2},{value:"enum",id:"enum",level:2},{value:"exec_dep",id:"exec_dep",level:2},{value:"int",id:"int",level:2},{value:"label",id:"label",level:2},{value:"list",id:"list",level:2},{value:"named_set",id:"named_set",level:2},{value:"one_of",id:"one_of",level:2},{value:"option",id:"option",level:2},{value:"plugin_dep",id:"plugin_dep",level:2},{value:"query",id:"query",level:2},{value:"regex",id:"regex",level:2},{value:"set",id:"set",level:2},{value:"source",id:"source",level:2},{value:"split_transition_dep",id:"split_transition_dep",level:2},{value:"string",id:"string",level:2},{value:"toolchain_dep",id:"toolchain_dep",level:2},{value:"transition_dep",id:"transition_dep",level:2},{value:"tuple",id:"tuple",level:2},{value:"versioned",id:"versioned",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"attrs",children:"attrs"})}),"\n",(0,l.jsx)(t.h2,{id:"any",children:"any"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def any(\n*,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\ndefault = ...,\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes most builtin literals and passes them to the rule as a string. Discouraged, as it provides little type safety and destroys the structure."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"arg",children:"arg"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def arg(\n*,\njson: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\nanon_target_compatible: ',(0,l.jsx)(r.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\n) -> ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Takes a command line argument from the user and supplies a ",(0,l.jsx)(t.code,{children:"cmd_args"})," compatible value to the rule. The argument may contain special macros such as ",(0,l.jsx)(t.code,{children:"$(location :my_target)"})," or ",(0,l.jsx)(t.code,{children:"$(exe :my_target)"})," which will be replaced with references to those values in the rule. Takes in an optional ",(0,l.jsx)(t.code,{children:"anon_target_compatible"})," flag, which indicates whether the args can be passed into anon targets. Note that there is a slight memory hit when using this flag."]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"bool",children:"bool"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def bool(\n*,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a boolean and passes it to the rule as a boolean."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"configuration_label",children:"configuration_label"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def configuration_label(\n*,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"configured_dep",children:"configured_dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def configured_dep(\n*,\nproviders: list | tuple = [],\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"default_only",children:"default_only"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def default_only(\ninner: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n/,\n*,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Rejects all values and uses the default for the inner argument. Often used to resolve dependencies, which otherwise can't be resolved inside a rule."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'attrs.default_only(attrs.dep(default = "foo//my_package:my_target"))\n'})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"dep",children:"dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def dep(\n*,\nproviders: list | tuple = [],\npulls_plugins: list[",(0,l.jsx)(r.default,{to:"/docs/api/build/plugins/PluginKind",children:"PluginKind"}),"] | tuple[",(0,l.jsx)(r.default,{to:"/docs/api/build/plugins/PluginKind",children:"PluginKind"}),", ...] = [],\npulls_and_pushes_plugins: AllPlugins | list[",(0,l.jsx)(r.default,{to:"/docs/api/build/plugins/PluginKind",children:"PluginKind"}),"] | tuple[",(0,l.jsx)(r.default,{to:"/docs/api/build/plugins/PluginKind",children:"PluginKind"}),", ...] = ...,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Takes a target from the user, as a string, and supplies a dependency to the rule. A target can be specified as an absolute dependency ",(0,l.jsx)(t.code,{children:"foo//bar:baz"}),", omitting the cell (",(0,l.jsx)(t.code,{children:"//bar:baz"}),") or omitting the package name (",(0,l.jsx)(t.code,{children:":baz"}),")."]}),"\n",(0,l.jsxs)(t.p,{children:["If supplied the ",(0,l.jsx)(t.code,{children:"providers"})," argument ensures that specific providers will be present\non the dependency."]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"dict",children:"dict"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def dict(\nkey: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\nvalue: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n*,\nsorted: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a dict from the user, supplies a dict to the rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"enum",children:"enum"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def enum(\nvariants: list[",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),"] | tuple[",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),", ...],\n/,\n*,\ndefault: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Select",children:"Select"})," | ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"})," = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a string from one of the variants given, and gives that string to the rule. Strings are matched case-insensitively, and always passed to the rule lowercase."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"exec_dep",children:"exec_dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def exec_dep(\n*,\nproviders: list | tuple = [],\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Takes a target from the user, as a string, and supplies a dependency to the rule. The dependency will transition to the execution platform. Use ",(0,l.jsx)(t.code,{children:"exec_dep"})," if you plan to execute things from this dependency as part of the compilation."]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"int",children:"int"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def int(\n*,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes an int from the user, supplies an int to the rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"label",children:"label"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def label(\n*,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Takes a target (as per ",(0,l.jsx)(t.code,{children:"deps"}),") and passes a ",(0,l.jsx)(t.code,{children:"label"})," to the rule. Validates that the target exists, but does not introduce a dependency on it."]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"list",children:"list"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def list(\ninner: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n/,\n*,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a list from the user, supplies a list to the rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"named_set",children:"named_set"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def named_set(\nvalue_type: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n/,\n*,\nsorted: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"one_of",children:"one_of"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def one_of(\n*args: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Given a list of alternative attributes, selects the first that matches and gives that to the rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"option",children:"option"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def option(\ninner: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n/,\n*,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Takes a value that may be ",(0,l.jsx)(t.code,{children:"None"})," or some inner type, and passes either ",(0,l.jsx)(t.code,{children:"None"})," or the value corresponding to the inner to the rule. Often used to make a rule optional:"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:"attrs.option(attr.string(), default = None)\n"})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"plugin_dep",children:"plugin_dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def plugin_dep(\n*,\nkind: ",(0,l.jsx)(r.default,{to:"/docs/api/build/plugins/PluginKind",children:"PluginKind"}),",\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"query",children:"query"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def query(\n*,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"regex",children:"regex"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def regex(\n*,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Currently an alias for ",(0,l.jsx)(t.code,{children:"attrs.string"}),"."]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"set",children:"set"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def set(\nvalue_type: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n/,\n*,\nsorted: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"source",children:"source"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def source(\n*,\nallow_directory: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsxs)(t.p,{children:["Takes a source file from the user, supplies an artifact to the rule. The source file may be specified as a literal string (representing the path within this package), or a target (which must have a ",(0,l.jsx)(t.code,{children:"DefaultInfo"})," with a ",(0,l.jsx)(t.code,{children:"default_outputs"})," value)."]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"split_transition_dep",children:"split_transition_dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def split_transition_dep(\n*,\nproviders: list | tuple = [],\ncfg,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"string",children:"string"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def string(\n*,\ndefault = ...,\nvalidate = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a string from the user, supplies a string to the rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"toolchain_dep",children:"toolchain_dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def toolchain_dep(\n*,\nproviders: list | tuple = [],\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a target from the user, as a string, and supplies a dependency to the rule. The dependency will be a toolchain dependency, meaning that its execution platform dependencies will be used to select the execution platform for this rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"transition_dep",children:"transition_dep"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def transition_dep(\n*,\nproviders: list | tuple = [],\ncfg = ...,\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"tuple",children:"tuple"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def tuple(\n*args: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\ndefault = ...,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})}),"\n",(0,l.jsx)(t.p,{children:"Takes a tuple of values and gives a tuple to the rule."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h2,{id:"versioned",children:"versioned"}),"\n",(0,l.jsx)("pre",{class:"language-python",children:(0,l.jsxs)("code",{children:["def versioned(\nvalue_type: ",(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"}),",\n*,\ndoc: ",(0,l.jsx)(r.default,{to:"/docs/api/starlark/str",children:"str"}),' = "",\n) -> ',(0,l.jsx)(r.default,{to:"/docs/api/build/Attr",children:"Attr"})]})})]})}function u(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);