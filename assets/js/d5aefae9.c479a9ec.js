"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6001],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var s=i(96540);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}},50633:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"prelude/rules/erlang/erlang_app","title":"erlang_app","description":"This rule is the main rule for Erlang applications. It gets generated by using the erlangapplication macro, that takes as attributes the same attributes as this rule. You should always use the erlangapplication macro instead of using this rule directly.","source":"@site/../docs/prelude/rules/erlang/erlang_app.md","sourceDirName":"prelude/rules/erlang","slug":"/prelude/rules/erlang/erlang_app","permalink":"/docs/prelude/rules/erlang/erlang_app","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"erlang","permalink":"/docs/prelude/rules/erlang/"},"next":{"title":"erlang_app_includes","permalink":"/docs/prelude/rules/erlang/erlang_app_includes"}}');var l=i(74848),t=i(28453);i(56289);const r={},d="erlang_app",a={},c=[{value:"Details",id:"details",level:3},{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3},{value:"Minimal Erlang Application",id:"minimal-erlang-application",level:4},{value:"With <code>priv/</code> directory",id:"with-priv-directory",level:4},{value:"Using OTP applications and <code>mod</code> field",id:"using-otp-applications-and-mod-field",level:4},{value:"Using Yecc and Leex",id:"using-yecc-and-leex",level:4}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"erlang_app",children:"erlang_app"})}),"\n",(0,l.jsxs)(n.p,{children:["This rule is the main rule for Erlang applications. It gets generated by using the ",(0,l.jsx)(n.code,{children:"erlang_application"})," macro, that takes as attributes the same attributes as this rule. You should always use the ",(0,l.jsx)(n.code,{children:"erlang_application"})," macro instead of using this rule directly."]}),"\n",(0,l.jsx)(n.h3,{id:"details",children:"Details"}),"\n",(0,l.jsxs)(n.p,{children:["Erlang Applications are the basic building block of our buck2 integration and used by many other Erlang\ntargets, e.g. ",(0,l.jsx)(n.code,{children:"erlang_escript"}),", ",(0,l.jsx)(n.code,{children:"erlang_test"}),", or ",(0,l.jsx)(n.code,{children:"erlang_release"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"erlang_application"})," targets build OTP applications and as such many attributes that are used have\nequivalent meaning to the fields in the currently (by rebar3) used ",(0,l.jsx)(n.code,{children:"*.app.src"})," files and OTP ",(0,l.jsx)(n.code,{children:"*.app"}),"\nfiles. Please familiarize yourself with the semantics of these fields by consulting the\n",(0,l.jsx)(n.a,{href:"https://erlang.org/doc/man/app.html",children:"OTP documentation"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"The target enforces uniqueness during builds, and fails to build if duplicated artifacts in the\nglobal namespaces are detected:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"duplicated application names in the dependencies"}),"\n",(0,l.jsx)(n.li,{children:"duplicated module names across any of the applications or dependencies modules"}),"\n",(0,l.jsx)(n.li,{children:"ambiguity when resolving header files"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"The default output of this rule is the application folder of the target application and all transitive dependencies."}),"\n",(0,l.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'def erlang_app(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _includes_target: None | str = None,\n    _toolchain: str = "gh_facebook_buck2_shims_meta//:erlang-default",\n    app_name: None | str = None,\n    app_src: None | str = None,\n    applications: list[str] = [],\n    contacts: list[str] = [],\n    env: None | dict[str, str] = None,\n    erl_opts: None | list[str] = None,\n    extra_includes: list[str] = [],\n    extra_properties: None | dict[str, str | list[str]] = None,\n    include_src: bool = True,\n    included_applications: list[str] = [],\n    includes: list[str] = [],\n    labels: list[str] = [],\n    mod: None | (str, str) = None,\n    os_env: None | dict[str, str] = None,\n    peek_private_includes: bool = False,\n    resources: list[str] = [],\n    shell_configs: list[str] = [],\n    shell_libs: list[str] = ["prelude//erlang/shell:buck2_shell_utils"],\n    srcs: list[str] = [],\n    use_global_parse_transforms: bool = True,\n    version: str = "1.0.0",\n    xrl_includefile: None | str = None,\n    yrl_includefile: None | str = None,\n) -> None\n'})}),"\n",(0,l.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,l.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,l.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"_includes_target"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Internal, used by the ",(0,l.jsx)(n.code,{children:"erlang_application"})," macro to link the proper application target and include_only targets."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"app_name"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"This attribute allows the user to overwrite the Erlang application name, which otherwise defaults to the target name."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"app_src"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"app_src"})," field allows to optionally reference a ",(0,l.jsx)(n.code,{children:"*.app.src"})," template file. This template file will then be used by buck2 to generate the ",(0,l.jsx)(n.code,{children:"*.app"})," output file in the applications ",(0,l.jsx)(n.code,{children:"ebin/"})," directory. This is useful during the migration from rebar3 to buck2 to avoid duplicated entries, of e.g. the ",(0,l.jsx)(n.code,{children:"version"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Buck2 will use or check all fields present in the template, and fill out the fields with the information provided in the\ntarget, e.g. if the ",(0,l.jsx)(n.code,{children:"version"})," is specified in both, buck2 will check that they are identical. Otherwise, it uses the\ninformation from the template if the target doesn't specify it, and vice versa."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE"}),": ",(0,l.jsxs)(n.em,{children:["If you use the ",(0,l.jsx)(n.code,{children:"app_src"})," field and the references application resource file template specifies ",(0,l.jsx)(n.code,{children:"applications"}),"\nor ",(0,l.jsx)(n.code,{children:"included_applications"})," buck2 checks that the target definitions and information in the template are equivalent to\nprevent these definitions from drifting apart during migration."]})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"applications"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Equivalent to the corresponding ",(0,l.jsx)(n.code,{children:"applications"})," and ",(0,l.jsx)(n.code,{children:"included_applications"})," fields you will find in ",(0,l.jsx)(n.code,{children:"*.app.src"})," or ",(0,l.jsx)(n.code,{children:"*.app"})," files and specify the application dependencies. Contrary to the fields in the ",(0,l.jsx)(n.code,{children:"*.app.src"})," or ",(0,l.jsx)(n.code,{children:"*.app"})," files, ",(0,l.jsx)(n.strong,{children:"it is necessary to use target paths to the application"})," where a dependency is desired. These fields will be used to construct equally named fields in the generated ",(0,l.jsx)(n.code,{children:"*.app"})," file for the application."]}),"\n",(0,l.jsxs)(n.p,{children:["OTP applications are specified with the target path ",(0,l.jsx)(n.code,{children:"prelude//erlang/applications:<application>"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE"}),": ",(0,l.jsxs)(n.em,{children:["If you use the ",(0,l.jsx)(n.code,{children:"app_src"})," field and the references application resource file template specifies\n",(0,l.jsx)(n.code,{children:"applications"})," or ",(0,l.jsx)(n.code,{children:"included_applications"})," buck2 checks that the target definitions and information in the template are\nequivalent to prevent these definitions from drifting apart during migration."]})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"contacts"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"env"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"env"})," field allows to set the application env variables. The key value pairs will materialise in the application's ",(0,l.jsx)(n.code,{children:".app"})," file and can then be accessed by ",(0,l.jsx)(n.a,{href:"https://www.erlang.org/doc/man/application.html#get_env-2",children:(0,l.jsx)(n.code,{children:"application:get_env/2"})}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"erl_opts"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Typically compile options are managed by global config files, however, sometimes it is desirable to overwrite the pre-defined compile options. The ",(0,l.jsx)(n.code,{children:"erl_opts"})," field allows developers to do so for individual applications."]}),"\n",(0,l.jsxs)(n.p,{children:["The main use-case are the applications listed in ",(0,l.jsx)(n.code,{children:"third-party/"}),". This option should not be used by other applications\nwithout consultation. Please ask in the ",(0,l.jsx)(n.a,{href:"https://fb.workplace.com/groups/728545201114362",children:"WhatsApp Dev Infra Q&A"}),"\nworkplace group for support."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"extra_includes"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["In some cases we might have the situation, where an application ",(0,l.jsx)(n.code,{children:"app_a"})," depends through the ",(0,l.jsx)(n.code,{children:"applications"})," and ",(0,l.jsx)(n.code,{children:"included_applications"})," fields on application ",(0,l.jsx)(n.code,{children:"app_b"})," and a source file in ",(0,l.jsx)(n.code,{children:"app_b"})," includes a header file from ",(0,l.jsx)(n.code,{children:"app_a"})," (e.g. ",(0,l.jsx)(n.code,{children:'-include_lib("app_a/include/header.hrl'}),"). This technically creates circular dependency from ",(0,l.jsx)(n.code,{children:"app_a"})," to ",(0,l.jsx)(n.code,{children:"app_b"})," (e.g. via ",(0,l.jsx)(n.code,{children:"applications"})," field) and back from ",(0,l.jsx)(n.code,{children:"app_b"})," to ",(0,l.jsx)(n.code,{children:"app_a"})," (via ",(0,l.jsx)(n.code,{children:"-include_lib"}),"). To break the dependency developers can specify targets in the ",(0,l.jsx)(n.code,{children:"extra_includes"})," field, whose public include files are accessible to the application target during build time."]}),"\n",(0,l.jsx)(n.p,{children:"Only the includes of the specified application are available and eventual transitive dependencies need to be managed\nmanually."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE"}),": ",(0,l.jsx)(n.em,{children:"It is not possible (or even desired) to add OTP applications with this field."})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE"}),": ",(0,l.jsx)(n.em,{children:"This mechanism is added to circumvent unclean dependency relationships and the goal for\ndevelopers should be to reduce usages of this field."})," ",(0,l.jsx)(n.strong,{children:"DO NOT ADD ANY MORE USAGES!!"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"extra_properties"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The extra_properties field can be used to specify extra key-value pairs which is are not defined in ",(0,l.jsx)(n.a,{href:"https://www.erlang.org/doc/man/application.html#load-2",children:"application_opt()"}),". The key-value pair will be stored in the applications ",(0,l.jsx)(n.code,{children:".app"})," file and can be accessed by ",(0,l.jsx)(n.code,{children:"file:consult/1"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"include_src"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"True"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"This field controls if the generated application directory contains a src/ directory with the Erlang code or not."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"included_applications"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Check the documentation for ",(0,l.jsx)(n.code,{children:"applications"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"includes"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The public header files accessible via ",(0,l.jsx)(n.code,{children:'-include_lib("appname/include/header.hrl")'})," from other erlang files."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"labels"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,l.jsx)(n.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,l.jsx)(n.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"mod"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"mod"})," field specifies the equivalent field in the generated ",(0,l.jsx)(n.code,{children:"*.app"})," files. The format is similar, with the difference, that the module name, and the individual start arguments need to be given as the string representation of the corresponding Erlang terms."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"os_env"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"This attribute allows to set additional values for the operating system environment for invocations to the Erlang toolchain."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"peek_private_includes"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"This attribute allows you to use the private includes of the application's dependencies. This can be useful for test applications, to create shared abstractions for tests. It's not advisable to use this attribute for prodution code. All private includes transitively must be non-ambiguous."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"resources"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"resources"})," field specifies targets whose default output are placed in the applications ",(0,l.jsx)(n.code,{children:"priv/"})," directory. For regular files this field is typically combined with ",(0,l.jsx)(n.code,{children:"export_file"}),", ",(0,l.jsx)(n.code,{children:"filegroup"}),", or similar targets. However, it is general, and any target can be used, e.g. if you want to place a built escript in the ",(0,l.jsx)(n.code,{children:"priv/"})," directory, you can use an ",(0,l.jsx)(n.code,{children:"erlang_escript"})," target."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"shell_configs"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["This attribute allows to set config files for the shell. The dependencies that are typically used here are ",(0,l.jsx)(n.code,{children:"export_file"})," targets."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"shell_libs"}),": (defaults to: ",(0,l.jsx)(n.code,{children:'["prelude//erlang/shell:buck2_shell_utils"]'}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["This attribute allows to define additional dependencies for the shell. By default this is set to ",(0,l.jsx)(n.code,{children:'["prelude//erlang/shell:buck2_shell_utils"]'})," which includes a ",(0,l.jsx)(n.code,{children:"user_default"})," module that loads and compiles modules with buck2 mechanisms."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"srcs"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["A list of ",(0,l.jsx)(n.code,{children:"*.erl"}),", ",(0,l.jsx)(n.code,{children:"*.hrl"}),", ",(0,l.jsx)(n.code,{children:"*.xrl"}),", or ",(0,l.jsx)(n.code,{children:"*.yrl"})," source inputs that are typically located in an application's ",(0,l.jsx)(n.code,{children:"src/"})," folder. Header files (i.e. ",(0,l.jsx)(n.code,{children:"*.hrl"})," files) specified in this field are considered application private headers, and can only be accessed by the ",(0,l.jsx)(n.code,{children:"*.erl"})," files of the application itself. ",(0,l.jsx)(n.code,{children:"*.xrl"})," and ",(0,l.jsx)(n.code,{children:"*.yrl"})," files are processed into ",(0,l.jsx)(n.code,{children:"*.erl"})," files before all ",(0,l.jsx)(n.code,{children:"*.erl"})," files are compiled into ",(0,l.jsx)(n.code,{children:"*.beam"})," files."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"use_global_parse_transforms"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"True"}),")"]}),"\n",(0,l.jsx)(n.p,{children:"This field indicates if global parse_tranforms should be applied to this application as well. It often makes sense for third-party dependencies to not be subjected to global parse_transforms, similar to OTP applications."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"version"}),": (defaults to: ",(0,l.jsx)(n.code,{children:'"1.0.0"'}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"version"})," field specifies the applications version that is materialized as ",(0,l.jsx)(n.code,{children:"vsn"})," field in the generated ",(0,l.jsx)(n.code,{children:"*.app"})," file. If you use the the ",(0,l.jsx)(n.code,{children:"app_src"})," field and specify a version in the referenced template in addition to the version field, the versions need to be identical."]}),"\n",(0,l.jsxs)(n.p,{children:["If no version is specified in either the ",(0,l.jsx)(n.code,{children:"app_src"})," template or the ",(0,l.jsx)(n.code,{children:"version"})," field, a fallback version string of\n",(0,l.jsx)(n.code,{children:'"1.0.0"'})," is used."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"xrl_includefile"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Customised prologue file to replace the default. See ",(0,l.jsxs)(n.a,{href:"https://www.erlang.org/doc/apps/parsetools/leex.html#file/2",children:[(0,l.jsx)(n.code,{children:"includefile"})," option"]})," for details."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"yrl_includefile"}),": (defaults to: ",(0,l.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Customised prologue file to replace the default. See ",(0,l.jsxs)(n.a,{href:"https://www.erlang.org/doc/apps/parsetools/yecc.html#file/2",children:[(0,l.jsx)(n.code,{children:"includefile"})," option"]})," for details."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h4,{id:"minimal-erlang-application",children:"Minimal Erlang Application"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'\nerlang_application(\n    name = "minimal",\n)\n\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"with-priv-directory",children:["With ",(0,l.jsx)(n.code,{children:"priv/"})," directory"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'\nerlang_application(\n    name = "app_a",\n    srcs = [\n        "src/app_a.erl",\n    ],\n    includes = [],\n    applications = [\n        ":app_b",\n    ],\n    app_src = "src/app_a.app.src",\n    resources = [\n        ":readme",\n    ],\n)\n\nexport_file(\n    name = "readme",\n    src = "README.md",\n)\n\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"using-otp-applications-and-mod-field",children:["Using OTP applications and ",(0,l.jsx)(n.code,{children:"mod"})," field"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'\nerlang_application(\n    name = "app_b",\n    srcs = [\n        "src/app_b.erl",\n        "src/app_b.hrl",\n    ],\n    includes = [],\n    applications = [\n        "kernel",\n        "stdlib",\n        ":app_c",\n    ],\n    mod = ("app_b", [\n        "some_atom",\n        ""some string"",\n        "{tagged_tuple, 42}",\n    ]),\n)\n\n'})}),"\n",(0,l.jsx)(n.h4,{id:"using-yecc-and-leex",children:"Using Yecc and Leex"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'\nerlang_application(\n    name = "yecc_leex",\n    srcs = [\n        "src/leex_stub.xrl",\n        "src/yecc_stub.yrl",\n    ],\n)\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);