"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17147],{25341:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"users/commands/log","title":"log","description":"This document provides an overview of the commands and options available under buck2 log.","source":"@site/../docs/users/commands/log.generated.md","sourceDirName":"users/commands","slug":"/users/commands/log","permalink":"/docs/users/commands/log","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"log","title":"log"},"sidebar":"main","previous":{"title":"killall","permalink":"/docs/users/commands/killall"},"next":{"title":"lsp","permalink":"/docs/users/commands/lsp"}}');var s=l(74848),o=l(28453);const d={id:"log",title:"log"},c="log",r={},t=[{value:"<code>buck2 log</code>",id:"buck2-log",level:2},{value:"Subcommands:",id:"subcommands",level:3},{value:"<code>buck2 log what-ran</code>",id:"buck2-log-what-ran",level:2},{value:"Arguments:",id:"arguments",level:3},{value:"Options:",id:"options",level:3},{value:"<code>buck2 log what-failed</code>",id:"buck2-log-what-failed",level:2},{value:"Arguments:",id:"arguments-1",level:3},{value:"Options:",id:"options-1",level:3},{value:"<code>buck2 log path</code>",id:"buck2-log-path",level:2},{value:"Arguments:",id:"arguments-2",level:3},{value:"Options:",id:"options-2",level:3},{value:"<code>buck2 log show</code>",id:"buck2-log-show",level:2},{value:"Arguments:",id:"arguments-3",level:3},{value:"Options:",id:"options-3",level:3},{value:"<code>buck2 log cmd</code>",id:"buck2-log-cmd",level:2},{value:"Arguments:",id:"arguments-4",level:3},{value:"Options:",id:"options-4",level:3},{value:"<code>buck2 log what-up</code>",id:"buck2-log-what-up",level:2},{value:"Arguments:",id:"arguments-5",level:3},{value:"Options:",id:"options-5",level:3},{value:"<code>buck2 log what-materialized</code>",id:"buck2-log-what-materialized",level:2},{value:"Arguments:",id:"arguments-6",level:3},{value:"Options:",id:"options-6",level:3},{value:"<code>buck2 log what-uploaded</code>",id:"buck2-log-what-uploaded",level:2},{value:"Arguments:",id:"arguments-7",level:3},{value:"Options:",id:"options-7",level:3},{value:"<code>buck2 log critical-path</code>",id:"buck2-log-critical-path",level:2},{value:"Arguments:",id:"arguments-8",level:3},{value:"Options:",id:"options-8",level:3},{value:"<code>buck2 log replay</code>",id:"buck2-log-replay",level:2},{value:"Arguments:",id:"arguments-9",level:3},{value:"Options:",id:"options-9",level:3},{value:"<code>buck2 log show-user</code>",id:"buck2-log-show-user",level:2},{value:"Arguments:",id:"arguments-10",level:3},{value:"Options:",id:"options-10",level:3},{value:"<code>buck2 log summary</code>",id:"buck2-log-summary",level:2},{value:"Arguments:",id:"arguments-11",level:3},{value:"Options:",id:"options-11",level:3},{value:"<code>buck2 log diff</code>",id:"buck2-log-diff",level:2},{value:"Subcommands:",id:"subcommands-1",level:3},{value:"<code>buck2 log diff action-divergence</code>",id:"buck2-log-diff-action-divergence",level:2},{value:"Options:",id:"options-12",level:3},{value:"<code>buck2 log diff external-configs</code>",id:"buck2-log-diff-external-configs",level:2},{value:"Options:",id:"options-13",level:3},{value:"<code>buck2 log external-configs</code>",id:"buck2-log-external-configs",level:2},{value:"Arguments:",id:"arguments-12",level:3},{value:"Options:",id:"options-14",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"log",children:"log"})}),"\n",(0,s.jsxs)(n.p,{children:["This document provides an overview of the commands and options available under ",(0,s.jsx)(n.code,{children:"buck2 log"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log",children:(0,s.jsx)(n.code,{children:"buck2 log"})}),"\n",(0,s.jsx)(n.p,{children:"Commands for interacting with buck2 logs"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log <COMMAND>"})]}),"\n",(0,s.jsx)(n.h3,{id:"subcommands",children:"Subcommands:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"what-ran"}),": Output everything Buck2 ran from selected invocation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"what-failed"}),": Outputs every command that failed in the selected invocation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"}),": Output the path to the selected log"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"show"}),": Outputs the log in JSON format from selected invocation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cmd"}),": Show buck command line arguments from selected invocation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"what-up"}),": Show the spans that were open when the log ended"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"what-materialized"}),": Outputs materializations from selected invocation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"what-uploaded"}),": Outputs stats about uploads to RE from the selected invocation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"critical-path"}),": Show the critical path for a selected build"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"replay"}),": Replay an event log"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"show-user"}),": Converts the event log from a selected invocation into a user event log, in JSONL format"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"summary"}),": Outputs high level statistics about the build"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"diff"}),": Subcommands for diff'ing two buck2 commands"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"external-configs"}),": Display the values and origins of external configs for a selected command"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-what-ran",children:(0,s.jsx)(n.code,{children:"buck2 log what-ran"})}),"\n",(0,s.jsx)(n.p,{children:"Output everything Buck2 ran from selected invocation."}),"\n",(0,s.jsx)(n.p,{children:"The output is presented as a series of tab-delimited records with the following structure:"}),"\n",(0,s.jsx)(n.p,{children:"The reason for executing a given command. That's either to build or to test."}),"\n",(0,s.jsx)(n.p,{children:"The identity of this command. This will include the target that ran required it."}),"\n",(0,s.jsx)(n.p,{children:"The executor for this command. This will either be RE or local."}),"\n",(0,s.jsx)(n.p,{children:"Details to reproduce it. For RE, that's the action digest. For local, the command."}),"\n",(0,s.jsxs)(n.p,{children:["To reproduce an action that ran on RE, use the following command then follow the instructions. The DIGEST is of the form ",(0,s.jsx)(n.code,{children:"hash:size"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"frecli cas download-action DIGEST"}),"\n",(0,s.jsxs)(n.p,{children:["To reproduce an action that ran locally, make sure your working directory is the project root (if unsure, use ",(0,s.jsx)(n.code,{children:"buck2 root --kind project"})," to find it), then run the command. The command is already shell-quoted."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log what-ran [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--format <OUTPUT>"}),"\nWhich output format to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"tabulated"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tabulated"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csv"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--emit-cache-queries"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--skip-cache-hits"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--skip-remote-executions"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--skip-local-executions"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--filter-category <FILTER_CATEGORY>"}),"\nRegular expression to filter commands by given action category (i.e. type of of actions that are similar but operate on different inputs, such as invocations of a C++ compiler (whose category would be ",(0,s.jsx)(n.code,{children:"cxx_compile"}),")). Matches by full string"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--failed"}),"\nShow only commands that failed"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--incomplete"}),"\nShow only commands that were not completed. That is command were running if buck2 process was killed, or command currently running if buck2 is running build now"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--show-std-err"}),'\nShow also std_err from commands that are run. If the command fails before completing, we display "<command did not finish executing>". If it finishes but there is no error, we display "<stderr is empty>". Otherwise, std_err is shown. For JSON, we show raw values and null for non-completion']}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--omit-empty-std-err"}),"\nOmit commands if their std_err is empty"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-what-failed",children:(0,s.jsx)(n.code,{children:"buck2 log what-failed"})}),"\n",(0,s.jsx)(n.p,{children:"Outputs every command that failed in the selected invocation."}),"\n",(0,s.jsx)(n.p,{children:"Look at the help for what-ran to understand the output format."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log what-failed [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-1",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-1",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--format <OUTPUT>"}),"\nWhich output format to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"tabulated"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tabulated"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csv"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--emit-cache-queries"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--skip-cache-hits"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--skip-remote-executions"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--skip-local-executions"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--filter-category <FILTER_CATEGORY>"}),"\nRegular expression to filter commands by given action category (i.e. type of of actions that are similar but operate on different inputs, such as invocations of a C++ compiler (whose category would be ",(0,s.jsx)(n.code,{children:"cxx_compile"}),")). Matches by full string"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-path",children:(0,s.jsx)(n.code,{children:"buck2 log path"})}),"\n",(0,s.jsx)(n.p,{children:"Output the path to the selected log"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log path [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-2",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-2",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--all"}),"\nList all the logs"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-show",children:(0,s.jsx)(n.code,{children:"buck2 log show"})}),"\n",(0,s.jsx)(n.p,{children:"Outputs the log in JSON format from selected invocation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log show [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-3",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-3",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-cmd",children:(0,s.jsx)(n.code,{children:"buck2 log cmd"})}),"\n",(0,s.jsx)(n.p,{children:"Show buck command line arguments from selected invocation."}),"\n",(0,s.jsxs)(n.p,{children:["This command output is not machine readable. Robots, please use ",(0,s.jsx)(n.code,{children:"buck2 log show"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log cmd [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-4",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-4",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--expand"}),"\nShow @-expanded command line arguments instead of the original command line"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-what-up",children:(0,s.jsx)(n.code,{children:"buck2 log what-up"})}),"\n",(0,s.jsx)(n.p,{children:"Show the spans that were open when the log ended"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log what-up [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-5",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-5",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--after <NUMBER>"}),"\nPrint the actions that where open after certain amount of milliseconds"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-what-materialized",children:(0,s.jsx)(n.code,{children:"buck2 log what-materialized"})}),"\n",(0,s.jsx)(n.p,{children:"Outputs materializations from selected invocation."}),"\n",(0,s.jsx)(n.p,{children:"The output is a tab-separated list containing the path, the materialization method, the file count, and the total size (after decompression)."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log what-materialized [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-6",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-6",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-s, --sort-by-size"}),"\nSort the output by total bytes in ascending order"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--aggregate-by-ext"}),"\nAggregates the output by file extension"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--format <OUTPUT>"}),"\nWhich output format to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"tabulated"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tabulated"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csv"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-what-uploaded",children:(0,s.jsx)(n.code,{children:"buck2 log what-uploaded"})}),"\n",(0,s.jsx)(n.p,{children:"Outputs stats about uploads to RE from the selected invocation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log what-uploaded [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-7",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-7",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--format <OUTPUT>"}),"\nWhich output format to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"tabulated"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tabulated"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csv"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--aggregate-by-ext"}),"\nAggregates the output by file extension"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-critical-path",children:(0,s.jsx)(n.code,{children:"buck2 log critical-path"})}),"\n",(0,s.jsx)(n.p,{children:"Show the critical path for a selected build."}),"\n",(0,s.jsx)(n.p,{children:"This produces tab-delimited output listing every node on the critical path."}),"\n",(0,s.jsx)(n.p,{children:"It includes the kind of node, its name, category and identifier, as well as total duration (runtime of this node), user duration (duration the user can improve) and potential improvement before this node stops being on the critical path."}),"\n",(0,s.jsx)(n.p,{children:"All durations are in microseconds."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log critical-path [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-8",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-8",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--format <FORMAT>"}),"\nWhich output format to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"tabulated"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tabulated"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csv"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-replay",children:(0,s.jsx)(n.code,{children:"buck2 log replay"})}),"\n",(0,s.jsx)(n.p,{children:"Replay an event log."}),"\n",(0,s.jsx)(n.p,{children:"This command allows visualizing an existing event log in a Superconsole."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log replay [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-9",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-9",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--speed <NUMBER>"}),"\nControl the playback speed using a float (i.e. 0.5, 2, etc)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"1.0"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--seek <SEEK>"}),"\nSkip to the given number of seconds after the start of the command before starting the replay"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"0.0"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--preload"}),"\nPreload the event log. This is typically only useful for benchmarking"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--console <super|simple|...>"}),"\nWhich console to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"auto"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"auto"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"none"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"simple"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"simplenotty"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"simpletty"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"super"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--ui <UI>"}),"\nConfigure additional superconsole ui components."]}),"\n",(0,s.jsx)(n.p,{children:"Accepts a comma-separated list of superconsole components to add. Possible values are:"}),"\n",(0,s.jsx)(n.p,{children:"dice - shows information about evaluated dice nodes debugevents - shows information about the flow of events from buckd"}),"\n",(0,s.jsx)(n.p,{children:"These components can be turned on/off interactively. Press 'h' for help when superconsole is active."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"dice"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"debugevents"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"io"}),": I/O panel"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"re"}),": RE panel"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-interactive-console"}),"\nDisable console interactions"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-show-user",children:(0,s.jsx)(n.code,{children:"buck2 log show-user"})}),"\n",(0,s.jsx)(n.p,{children:"Converts the event log from a selected invocation into a user event log, in JSONL format"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log show-user [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-10",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-10",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-summary",children:(0,s.jsx)(n.code,{children:"buck2 log summary"})}),"\n",(0,s.jsx)(n.p,{children:"Outputs high level statistics about the build"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log summary [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-11",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-11",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-diff",children:(0,s.jsx)(n.code,{children:"buck2 log diff"})}),"\n",(0,s.jsx)(n.p,{children:"Subcommands for diff'ing two buck2 commands"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log diff <COMMAND>"})]}),"\n",(0,s.jsx)(n.h3,{id:"subcommands-1",children:"Subcommands:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"action-divergence"}),": Identifies the first divergent action between two builds. Divergence is identified by the same action having differing outputs. Useful for identifying non-determinism"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"external-configs"}),": Identifies the diff between external buckconfigs between two commands"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-diff-action-divergence",children:(0,s.jsx)(n.code,{children:"buck2 log diff action-divergence"})}),"\n",(0,s.jsx)(n.p,{children:"Identifies the first divergent action between two builds. Divergence is identified by the same action having differing outputs. Useful for identifying non-determinism"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log diff action-divergence <--path1 <PATH1>|--trace-id1 <TRACE_ID1>|--recent1 <NUMBER>> <--path2 <PATH2>|--trace-id2 <TRACE_ID2>|--recent2 <NUMBER>>"})]}),"\n",(0,s.jsx)(n.h3,{id:"options-12",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--path1 <PATH1>"}),"\nA path to an event-log file of the first command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id1 <TRACE_ID1>"}),"\nTrace id of the first command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent1 <NUMBER>"}),"\nOpen the event-log file from a recent command for the first command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--path2 <PATH2>"}),"\nA path to an event-log file of the second command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id2 <TRACE_ID2>"}),"\nTrace id of the second command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent2 <NUMBER>"}),"\nOpen the event-log file from a recent command for the second command"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-diff-external-configs",children:(0,s.jsx)(n.code,{children:"buck2 log diff external-configs"})}),"\n",(0,s.jsx)(n.p,{children:"Identifies the diff between external buckconfigs between two commands"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log diff external-configs <--path1 <PATH1>|--trace-id1 <TRACE_ID1>|--recent1 <NUMBER>> <--path2 <PATH2>|--trace-id2 <TRACE_ID2>|--recent2 <NUMBER>>"})]}),"\n",(0,s.jsx)(n.h3,{id:"options-13",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--path1 <PATH1>"}),"\nA path to an event-log file of the first command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id1 <TRACE_ID1>"}),"\nTrace id of the first command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent1 <NUMBER>"}),"\nOpen the event-log file from a recent command for the first command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--path2 <PATH2>"}),"\nA path to an event-log file of the second command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id2 <TRACE_ID2>"}),"\nTrace id of the second command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent2 <NUMBER>"}),"\nOpen the event-log file from a recent command for the second command"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"buck2-log-external-configs",children:(0,s.jsx)(n.code,{children:"buck2 log external-configs"})}),"\n",(0,s.jsx)(n.p,{children:"Display the values and origins of external configs for a selected command."}),"\n",(0,s.jsx)(n.p,{children:"Buckconfigs are computed by joining together values from various inputs (repo, well-known directories, CLI flags). Each of these is logged in the given order, with later components overriding earlier ones. For config files originating from the repo (i.e. project-relative paths), except .buckconfig.local, we log the path, not the actual values."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage"}),": ",(0,s.jsx)(n.code,{children:"buck2 log external-configs [OPTIONS] [PATH]"})]}),"\n",(0,s.jsx)(n.h3,{id:"arguments-12",children:"Arguments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<PATH>"}),"\nA path to an event-log file to read from"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options-14",children:"Options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recent <NUMBER>"}),"\nOpen the event-log file from a recent command"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--trace-id <ID>"}),"\nShow log by trace id"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--allow-remote"}),"\nThis option does nothing"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-remote"}),"\nDo not allow downloading the log from manifold if it's not found locally"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--format <FORMAT>"}),"\nWhich output format to use for this command"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default value: ",(0,s.jsx)(n.code,{children:"tabulated"})]}),"\n",(0,s.jsxs)(n.li,{children:["Possible values:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tabulated"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csv"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>d,x:()=>c});var i=l(96540);const s={},o=i.createContext(s);function d(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);