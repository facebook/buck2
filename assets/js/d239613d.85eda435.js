"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28479],{481:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"concepts/build_target","title":"Build Target","description":"A build target is a string that identifies a build target in your project.","source":"@site/../docs/concepts/build_target.md","sourceDirName":"concepts","slug":"/concepts/build_target","permalink":"/docs/concepts/build_target","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"build_target","title":"Build Target"},"sidebar":"main","previous":{"title":"Build File","permalink":"/docs/concepts/build_file"},"next":{"title":"Target Pattern","permalink":"/docs/concepts/target_pattern"}}');var a=n(74848),r=n(28453);const l={id:"build_target",title:"Build Target"},s="Build Target",c={},o=[{value:"Fully-qualified build targets",id:"fully-qualified-build-targets",level:4},{value:"Cell relative build targets",id:"cell-relative-build-targets",level:4},{value:"Package relative build targets",id:"package-relative-build-targets",level:4},{value:"Command-line Pro Tips",id:"command-line-pro-tips",level:2},{value:"See also",id:"see-also",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"build-target",children:"Build Target"})}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.em,{children:"build target"})," is a string that identifies a build target in your project.\nBuild targets are used as arguments to Buck2 commands, such as\n",(0,a.jsx)(t.a,{href:"../../users/commands/build",children:(0,a.jsx)(t.code,{children:"buck2 build"})})," and\n",(0,a.jsx)(t.a,{href:"../../users/commands/run",children:(0,a.jsx)(t.code,{children:"buck2 run"})}),". Build targets are also used as\narguments to ",(0,a.jsx)(t.a,{href:"/docs/concepts/build_rule",children:"build rules"})," to enable one target to reference\nanother. For example, a build rule might use a build target to reference another\ntarget in order to specify that target as a ",(0,a.jsx)(t.em,{children:"dependency"}),"."]}),"\n",(0,a.jsx)(t.h4,{id:"fully-qualified-build-targets",children:"Fully-qualified build targets"}),"\n",(0,a.jsxs)(t.p,{children:["Here is an example of a ",(0,a.jsx)(t.em,{children:"fully-qualified"})," build target:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"cell//java/com/facebook/share:ui\n"})}),"\n",(0,a.jsx)(t.p,{children:"A fully-qualified build target has three components:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["The ",(0,a.jsx)(t.code,{children:"cell//"})," prefix indicates that the subsequent path is from the ",(0,a.jsx)(t.em,{children:"root"})," of\n",(0,a.jsx)(t.code,{children:"cell"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:["The ",(0,a.jsx)(t.code,{children:"java/com/facebook/share"})," between the ",(0,a.jsx)(t.code,{children:"//"})," prefix and the colon (",(0,a.jsx)(t.code,{children:":"}),")\nindicates that the ",(0,a.jsx)(t.a,{href:"/docs/concepts/build_file",children:"build file"})," (usually named ",(0,a.jsx)(t.code,{children:"BUCK"}),") is\nlocated in the directory ",(0,a.jsx)(t.code,{children:"java/com/facebook/share"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:["The ",(0,a.jsx)(t.code,{children:"ui"})," after the colon (",(0,a.jsx)(t.code,{children:":"}),") indicates the name of the build target within\nthe build file. Build target names must be unique within a build file. By\n",(0,a.jsx)(t.em,{children:"name"})," we mean, more formally, the value of the ",(0,a.jsx)(t.code,{children:"name"})," argument to the build\nrule."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Note that the name of the build file itself\u2014usually BUCK\u2014does ",(0,a.jsx)(t.em,{children:"not"})," occur in the\nbuild target. All build files within a given Buck2 project must have the same\nname\u2014defined in the ",(0,a.jsx)(t.code,{children:"[buildfile].name"})," entry of ",(0,a.jsx)(t.code,{children:".buckconfig"}),". Therefore, it is\nunnecessary to include the name in the target. The full regular expression for a\nfully-qualified build target is as follows:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"[A-Za-z0-9._-]*//[A-Za-z0-9/._-]*:[A-Za-z0-9_/.=,@~+-]+\n|- cell name -|  | package path | |--- target name ----|\n"})}),"\n",(0,a.jsxs)(t.p,{children:["In Buck2, a ",(0,a.jsx)(t.em,{children:"cell"})," defines a directory tree of one or more Buck2 packages. For\nmore information about Buck2 cells and their relationship to packages and\nprojects, see the ",(0,a.jsx)(t.a,{href:"/docs/concepts/key_concepts",children:"Key Concepts"})," topic. ",(0,a.jsx)(t.strong,{children:"NOTE:"})," All target\npaths are assumed to start from the root of the Buck2 project. Buck2 does not\nsupport specifying a target path that starts from a directory below the root.\nAlthough the double forward slash (",(0,a.jsx)(t.code,{children:"//"}),") that prefixes target paths can be\nomitted when specifying a target from the command line (see ",(0,a.jsx)(t.strong,{children:"Pro Tips"})," below),\nBuck2 still assumes that the path is from the root. Buck2 does support\n",(0,a.jsx)(t.em,{children:"relative"})," build paths, but in Buck2, that concept refers to specifying build\ntargets ",(0,a.jsx)(t.em,{children:"from within"})," a build file. See ",(0,a.jsx)(t.strong,{children:"Relative build targets"})," below for\nmore details."]}),"\n",(0,a.jsx)(t.h4,{id:"cell-relative-build-targets",children:"Cell relative build targets"}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.em,{children:"cell relative"})," build target omits the cell, and is inferred to be relative to\nthe current cell."]}),"\n",(0,a.jsx)(t.h4,{id:"package-relative-build-targets",children:"Package relative build targets"}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.em,{children:"package relative"})," build target can be used to reference a build target\n_within the same _",(0,a.jsx)(t.a,{href:"/docs/concepts/build_file",children:(0,a.jsx)(t.em,{children:"build file"})})," (aka ",(0,a.jsx)(t.em,{children:"package"}),"). A relative\nbuild target starts with a colon (",(0,a.jsx)(t.code,{children:":"}),") and is followed by only the third\ncomponent (or ",(0,a.jsx)(t.em,{children:"short name"}),") of the fully-qualified build target. The following\nsnippet from a build file shows an example of using a relative path."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"## Assume this target is in //java/com/facebook/share/BUCK#\njava_binary(\n  name = 'ui_jar',\n  deps = [\n    ## The following target path\n    ##   //java/com/facebook/share:ui\n    ## is the same as using the following relative path.#\n    ':ui',\n  ],\n)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"command-line-pro-tips",children:"Command-line Pro Tips"}),"\n",(0,a.jsxs)(t.p,{children:["Here are some ways that you can reduce your typing when you specify build\ntargets as command-line arguments to the ",(0,a.jsx)(t.code,{children:"buck2 build"})," or ",(0,a.jsx)(t.code,{children:"buck2 run"})," commands.\nConsider the following example of a fully-qualified build target used with the\n",(0,a.jsx)(t.code,{children:"buck2 build"})," command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"buck2 build cell//java/com/facebook/share:share\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Although Buck2 is always strict when parsing build targets in build files, Buck2\nis flexible when parsing build targets on the command-line. Specifically, the\nleading ",(0,a.jsx)(t.code,{children:"//"})," is optional on the command line, so the above could be:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"buck2 build java/com/facebook/share:share\n"})}),"\n",(0,a.jsx)(t.p,{children:"Also, if there is a forward slash before the colon, it is ignored, so this could\nalso be written as:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"buck2 build java/com/facebook/share/:share\n"})}),"\n",(0,a.jsx)(t.p,{children:"which enables you to produce the red text shown below using tab-completion,\nwhich dramatically reduces how much you need to type:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"buck2 build java/com/facebook/share/:share\n"})}),"\n",(0,a.jsx)(t.p,{children:"Finally, if the final path element matches the value specified after the colon,\nit can be omitted:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:"# This is treated as //java/com/facebook/share:share.\nbuck2 build java/com/facebook/share/\n"})}),"\n",(0,a.jsx)(t.p,{children:"which makes the build target even easier to tab-complete. For this reason, the\nname of the build target for the primary deliverable in a build file is often\nnamed the same as the parent directory. That way, it can be built from the\ncommand-line with less typing."}),"\n",(0,a.jsx)(t.h2,{id:"see-also",children:"See also"}),"\n",(0,a.jsxs)(t.p,{children:["Buck2 supports the ability to define ",(0,a.jsxs)(t.strong,{children:[(0,a.jsx)(t.em,{children:"aliases"})," for build targets"]}),"; using\naliases can improve brevity when specifying targets on the Buck2 command line.\nFor more information, see the ",(0,a.jsx)(t.a,{href:"/docs/concepts/buckconfig#alias",children:(0,a.jsx)(t.code,{children:"[alias]"})})," section in the\ndocumentation for ",(0,a.jsx)(t.a,{href:"/docs/concepts/buckconfig",children:(0,a.jsx)(t.code,{children:".buckconfig"})}),". A\n",(0,a.jsx)(t.a,{href:"/docs/concepts/target_pattern",children:(0,a.jsx)(t.strong,{children:"build target pattern"})})," is a string that describes a set\nof one or more build targets. For example, the pattern ",(0,a.jsx)(t.code,{children:"//..."})," is used to build\nan entire project. For more information, see the ",(0,a.jsx)(t.strong,{children:"Build Target Pattern"})," topic."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var i=n(96540);const a={},r=i.createContext(a);function l(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);