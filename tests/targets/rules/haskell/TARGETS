load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")
load("@fbcode_macros//build_defs:cpp_unittest.bzl", "cpp_unittest")
load("@fbcode_macros//build_defs:haskell_binary.bzl", "haskell_binary")
load("@fbcode_macros//build_defs:haskell_library.bzl", "haskell_library")
load("@fbcode_macros//build_defs:haskell_unittest.bzl", "haskell_unittest")
load("@fbsource//tools/build_defs/buck2:is_buck2.bzl", "is_buck2")

haskell_binary(
    name = "hello_world",
    srcs = [
        "HelloWorld.hs",
    ],
    main = "HelloWorld",
)

haskell_binary(
    name = "test_lib",
    srcs = [
        "TestLib.hs",
    ],
    main = "TestLib",
    deps = [
        ":x",
    ],
)

haskell_binary(
    name = "test_th",
    srcs = [
        "TestTemplateHaskell.hs",
    ],
    main = "TestTemplateHaskell",
    deps = [
        ":th",
        ":x",
    ],
)

haskell_library(
    name = "x",
    srcs = [
        "Lib/X.hs",
    ],
    deps = [
        ":y",
    ],
)

haskell_library(
    name = "y",
    srcs = [
        "Lib/Y.hs",
    ],
)

haskell_library(
    name = "th",
    srcs = [
        "Lib/TH.hs",
    ],
    packages = [
        "template-haskell",
    ],
    warnings_flags = [
        "-fno-warn-name-shadowing",
    ],
    deps = [
    ],
)

haskell_unittest(
    name = "test_hsc",
    srcs = [
        "TestHsc.hs",
    ],
    main = "TestHsc",
    deps = [
        ":z",
    ],
)

haskell_library(
    name = "z",
    srcs = [
        "Lib/Z.hsc",
    ],
    deps = [
        ":c",
    ],
)

cpp_library(
    name = "c",
    srcs = [
        "c.cpp",
    ],
    headers = [
        "c.h",
    ],
)

cpp_unittest(
    # @autodeps-skip
    name = "test_cpp_to_hs",
    srcs = [
        "d.cpp",
    ],
    preprocessor_flags = [
        "-DBUCK2=1",
    ] if is_buck2() else [],
    deps = [
        ":z",
    ],
    external_deps = [
        ("ghc", None, "rts"),
    ],
)
