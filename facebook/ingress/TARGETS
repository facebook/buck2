# This code was initially generated by ServiceFoundry
load("@fbcode_macros//build_defs:cpp_binary.bzl", "cpp_binary")
load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")
load("//antlir/fbpkg:fbpkg.bzl", "fbpkg")

cpp_binary(
    name = "IngressService",
    srcs = [
        "IngressHandler.cpp",
        "IngressMain.cpp",
    ],
    deps = [
        ":IngressLine",
        ":IngressProcessor",
        "//buck2/facebook/ingress/scuba:scuba",
        "//buck2/facebook/ingress/utils:utils",
        "//common/init:init",
        "//common/services/cpp:cpp",
        "//datainfra/privacy/lineage/annotation:table",
        "//folly/logging:logging",
        "//stylus/engine/engines:stateless_engine",
        "//stylus/lib:stateless_handler",
        "//stylus/lineage:data_lineage",
        "//stylus/penguin2/lib/storage/checkpoint_store:stylus_checkpoint_store",
        "//stylus/penguin2/util:shutdown_handler",
        "//stylus/penguin2/util/engineX:ptail_util",
    ],
)

cpp_library(
    name = "IngressProcessor",
    srcs = [
        "ActionCounterProcessor.cpp",
        "ActionErrorProcessor.cpp",
        "ActionReporterProcessor.cpp",
        "AnalysisReporterProcessor.cpp",
        "BuildGraphExecutionProcessor.cpp",
        "CommandCounterProcessor.cpp",
        "CommandReporterProcessor.cpp",
        "CounterProcessor.cpp",
        "EntInvocationProcessor.cpp",
        "IngressProcessor.cpp",
        "LoadReporterProcessor.cpp",
        "PanicProcessor.cpp",
        "ReproReporterProcessor.cpp",
        "ScubaEventProcessor.cpp",
    ],
    headers = [
        "ActionCounterProcessor.h",
        "ActionErrorProcessor.cpp",
        "ActionReporterProcessor.h",
        "AnalysisReporterProcessor.h",
        "BuildGraphExecutionProcessor.h",
        "CommandCounterProcessor.h",
        "CommandReporterProcessor.h",
        "CounterProcessor.h",
        "EntInvocationProcessor.h",
        "IEventProcessor.h",
        "LoadReporterProcessor.h",
        "PanicProcessor.h",
        "ReproReporterProcessor.h",
        "ScubaEventProcessor.h",
    ],
    deps = [
        "//common/time:time",
        "//fb303:export_type",
        "//fb303:thread_cached_service_data",
        "//folly/experimental/coro:blocking_wait",
        "//folly/experimental/coro:collect",
        "//folly/logging:logging",
        "//justknobs:justknobs",
        "//nodeapi/cpp:exception",
        "//scribe/api:message",
        "//scribe/api:producer",
    ],
    exported_deps = [
        "fbsource//third-party/fmt:fmt",
        ":IngressLine",
        "//buck2/facebook/ingress/scuba:scuba",
        "//buck2/facebook/ingress/storage:storage",
        "//buck2/facebook/ingress/utils:utils",
        "//buck2/facebook/proto:proto-cpp",
        "//folly:dynamic",
        "//nodeapi/projects/buck2_cpp:buck2",
        "//rfe/scubadata:scubadata",
        "//stylus/penguin2/api:api",
    ],
    external_deps = [
        "protobuf",
    ],
    exported_external_deps = [
        ("googletest", None, "gtest_headers"),
    ],
)

cpp_library(
    name = "IngressLine",
    srcs = [
        "IngressLine.cpp",
    ],
    deps = [
        "//common/encode:encode",
        "//folly/logging:logging",
    ],
    exported_deps = [
        "//buck2/facebook/proto:proto-cpp",
    ],
    external_deps = [
        "protobuf",
    ],
)

fbpkg.builder(
    name = "buck2.ingress",
    path_actions = {
        "IngressService": ":IngressService",
    },
    fail_on_redundant_configerator_fbpkg = False,
    buck_opts = fbpkg.buck_opts(version = "v2"),
)
