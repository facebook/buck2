"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[36365],{28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},59154:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"api/bxl/TargetUniverse","title":"TargetUniverse","description":"Target universe in BXL. Used for looking up valid configured targets to use in cquery. This is not needed for uquery.","source":"@site/../docs/api/bxl/TargetUniverse.md","sourceDirName":"api/bxl","slug":"/api/bxl/TargetUniverse","permalink":"/docs/api/bxl/TargetUniverse","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"SelectDict","permalink":"/docs/api/bxl/SelectDict"},"next":{"title":"UnconfiguredTargetNode","permalink":"/docs/api/bxl/UnconfiguredTargetNode"}}');var s=r(74848),i=r(28453),a=r(56289);const o={},d="TargetUniverse",l={},c=[{value:"TargetUniverse.lookup",id:"targetuniverselookup",level:2},{value:"TargetUniverse.target_set",id:"targetuniversetarget_set",level:2},{value:"TargetUniverse.universe_target_set",id:"targetuniverseuniverse_target_set",level:2}];function u(e){const t={h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"targetuniverse",children:"TargetUniverse"})}),"\n",(0,s.jsx)(t.p,{children:"Target universe in BXL. Used for looking up valid configured targets to use in cquery. This is not needed for uquery."}),"\n",(0,s.jsx)(t.h2,{id:"targetuniverselookup",children:"TargetUniverse.lookup"}),"\n",(0,s.jsx)("pre",{class:"language-python",children:(0,s.jsxs)("code",{children:["def TargetUniverse.lookup(\ntargets: ",(0,s.jsx)(a.default,{to:"/docs/api/build/TargetLabel",children:"TargetLabel"})," | ",(0,s.jsx)(a.default,{to:"/docs/api/bxl/UnconfiguredTargetNode",children:"bxl.UnconfiguredTargetNode"})," | ",(0,s.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"})," | ",(0,s.jsx)(a.default,{to:"/docs/api/bxl/UnconfiguredTargetSet",children:"target_set"})," | list[",(0,s.jsx)(a.default,{to:"/docs/api/build/TargetLabel",children:"TargetLabel"})," | ",(0,s.jsx)(a.default,{to:"/docs/api/bxl/UnconfiguredTargetNode",children:"bxl.UnconfiguredTargetNode"})," | ",(0,s.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"}),"],\n) -> ",(0,s.jsx)(a.default,{to:"/docs/api/bxl/ConfiguredTargetSet",children:"target_set"})]})}),"\n",(0,s.jsx)(t.p,{children:"Looks up valid configured target nodes within the universe. The targets passed in are either string literals, unconfigured target nodes, or unconfigured target labels."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"targetuniversetarget_set",children:"TargetUniverse.target_set"}),"\n",(0,s.jsx)("pre",{class:"language-python",children:(0,s.jsxs)("code",{children:["def TargetUniverse.target_set(\n) -> ",(0,s.jsx)(a.default,{to:"/docs/api/bxl/ConfiguredTargetSet",children:"target_set"})]})}),"\n",(0,s.jsx)(t.p,{children:"The target set of the nodes used to construct the target universe."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"targetuniverseuniverse_target_set",children:"TargetUniverse.universe_target_set"}),"\n",(0,s.jsx)("pre",{class:"language-python",children:(0,s.jsxs)("code",{children:["def TargetUniverse.universe_target_set(\n) -> ",(0,s.jsx)(a.default,{to:"/docs/api/bxl/ConfiguredTargetSet",children:"target_set"})]})}),"\n",(0,s.jsx)(t.p,{children:"The target set of the entire target universe."})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);