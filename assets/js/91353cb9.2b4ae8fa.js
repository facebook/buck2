"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44088],{11430:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"bxl/how_tos/how_to_cache_and_share_operations","title":"How to Cache and Share Operations","description":"This guide shows you how to use anonymous targets in BXL to cache and share","source":"@site/../docs/bxl/how_tos/how_to_cache_and_share_operations.md","sourceDirName":"bxl/how_tos","slug":"/bxl/how_tos/how_to_cache_and_share_operations","permalink":"/docs/bxl/how_tos/how_to_cache_and_share_operations","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"how_to_cache_and_share_operations","title":"How to Cache and Share Operations"},"sidebar":"main","previous":{"title":"Basic How-Tos","permalink":"/docs/bxl/how_tos/basic_how_tos"},"next":{"title":"How to Handle Errors","permalink":"/docs/bxl/how_tos/how_to_handle_errors"}}');var o=t(74848),s=t(28453);const r={id:"how_to_cache_and_share_operations",title:"How to Cache and Share Operations"},i=void 0,c={},l=[{value:"When to use caching",id:"when-to-use-caching",level:2},{value:"Basic caching with anonymous targets",id:"basic-caching-with-anonymous-targets",level:2},{value:"1. Define bxl anon target rule",id:"1-define-bxl-anon-target-rule",level:3},{value:"2. Define the anon target impl",id:"2-define-the-anon-target-impl",level:3},{value:"3. Create and resolve the anonymous target in your BXL script",id:"3-create-and-resolve-the-anonymous-target-in-your-bxl-script",level:3},{value:"Examples",id:"examples",level:2},{value:"Further Reading",id:"further-reading",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"This guide shows you how to use anonymous targets in BXL to cache and share\noperations across different commands, improving bxl performance and reducing\npeak memory usage."}),"\n",(0,o.jsx)(n.h2,{id:"when-to-use-caching",children:"When to use caching"}),"\n",(0,o.jsx)(n.p,{children:"Use anonymous target caching if you need to:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Cache results of expensive Starlark computations"}),"\n",(0,o.jsx)(n.li,{children:"Share cached work across different parts of your bxl"}),"\n",(0,o.jsx)(n.li,{children:"Share cached work across different bxl commands"}),"\n",(0,o.jsx)(n.li,{children:"Reduce peak memory usage"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"basic-caching-with-anonymous-targets",children:"Basic caching with anonymous targets"}),"\n",(0,o.jsx)(n.h3,{id:"1-define-bxl-anon-target-rule",children:"1. Define bxl anon target rule"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'my_anon = bxl.anon_rule(\n    impl = _my_anon_impl,\n    attrs = {\n        "foo": attrs.int(),\n        "bar": attrs.str(),\n        ...\n    },\n)\n'})}),"\n",(0,o.jsxs)(n.p,{children:['You can find the supported attributes at the "Attributes" sections\n',(0,o.jsx)(n.a,{href:"../../../rule_authors/anon_targets/",children:"here"})]}),"\n",(0,o.jsx)(n.h3,{id:"2-define-the-anon-target-impl",children:"2. Define the anon target impl"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def _my_anon_impl(bxl_ctx: bxl.Context, attrs: struct) -> list[Provider]\n    # Your implementation here\n    return [DefaultInfo(...), ...]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-create-and-resolve-the-anonymous-target-in-your-bxl-script",children:"3. Create and resolve the anonymous target in your BXL script"}),"\n",(0,o.jsxs)(n.p,{children:["You can use\n",(0,o.jsx)(n.a,{href:"../../../api/build/AnalysisActions/#analysisactionsanon_target",children:(0,o.jsx)(n.code,{children:"actions.anon_target"})}),"\nto create one anon target or\n",(0,o.jsx)(n.a,{href:"../../../api/build/AnalysisActions/#analysisactionsanon_targets",children:(0,o.jsx)(n.code,{children:"actions.anon_targets"})}),"\nto create several anon targets."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def _bxl_main_impl(bxl_ctx: bxl.Context):\n    ...\n    actions = ctx.bxl_actions().actions\n\n    # Create anonymous target\n     promise = actions.anon_target(\n        my_anon,\n        attrs = {\n            "foo": 42,\n            "bar": "hello world",\n        }\n    ).promise\n\n    # Resolve the anon target result\n    result = ctx.resolve(actions, promise)\n\n    # Use the anon target result\n    ...\n'})}),"\n",(0,o.jsx)(n.p,{children:"Now you have a anon target and the the output of this anon target will be cached\nusing a cache key composed of its attributes, target platform, and any bxl\nscript modifiers."}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.p,{children:"Examples can be found at 'tests/core/bxl/test_anon_bxl_data/anon_bxl.bxl' of\nbuck2 repro folder."}),"\n",(0,o.jsxs)(n.p,{children:["Run such command at ",(0,o.jsx)(n.code,{children:"tests/core/bxl/test_anon_bxl_data"})," to run the example bxl\nscript"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"buck2 bxl anon_bxl.bxl:eval_anon_bxl\n"})}),"\n",(0,o.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,o.jsxs)(n.p,{children:["You can refer ",(0,o.jsx)(n.a,{href:"../../../rule_authors/anon_targets/",children:"Anonymous Targets"})," to learn\nmore about it."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var a=t(96540);const o={},s=a.createContext(o);function r(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);