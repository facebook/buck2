# @generated
# To regenerate, run:
# ```
# STARLARK_RUST_REGENERATE_GOLDEN_TESTS=1 cargo test -p starlark --lib
# ```

Opcode,Count,Count / Total
"TOTAL",745,"1.000"
"CallFrozenNativePos",244,"0.328"
"Continue",220,"0.295"
"Const",40,"0.054"
"Mov",40,"0.054"
"LoadModule",24,"0.032"
"ListOfConsts",24,"0.032"
"Iter",24,"0.032"
"CallPos",24,"0.032"
"ReturnConst",23,"0.031"
"AddAssign",20,"0.027"
"Multiply",20,"0.027"
"IfNotBr",20,"0.027"
"Return",7,"0.009"
"PossibleGc",6,"0.008"
"ListNew",4,"0.005"
"StoreModuleAndExport",3,"0.004"
"Def",2,"0.003"
"LoadLocal",0,"0.000"
"LoadLocalCaptured",0,"0.000"
"StoreLocalCaptured",0,"0.000"
"StoreModule",0,"0.000"
"Unpack",0,"0.000"
"ArrayIndex",0,"0.000"
"SetArrayIndex",0,"0.000"
"ArrayIndexSet",0,"0.000"
"Slice",0,"0.000"
"ObjectField",0,"0.000"
"SetObjectField",0,"0.000"
"Eq",0,"0.000"
"EqConst",0,"0.000"
"EqPtr",0,"0.000"
"EqStr",0,"0.000"
"EqInt",0,"0.000"
"Not",0,"0.000"
"Minus",0,"0.000"
"Plus",0,"0.000"
"BitNot",0,"0.000"
"Less",0,"0.000"
"Greater",0,"0.000"
"LessOrEqual",0,"0.000"
"GreaterOrEqual",0,"0.000"
"In",0,"0.000"
"Add",0,"0.000"
"Sub",0,"0.000"
"Percent",0,"0.000"
"PercentSOne",0,"0.000"
"FormatOne",0,"0.000"
"Divide",0,"0.000"
"FloorDivide",0,"0.000"
"BitAnd",0,"0.000"
"BitOr",0,"0.000"
"BitOrAssign",0,"0.000"
"BitXor",0,"0.000"
"LeftShift",0,"0.000"
"RightShift",0,"0.000"
"Len",0,"0.000"
"Type",0,"0.000"
"TypeIs",0,"0.000"
"IsInstance",0,"0.000"
"TupleNPop",0,"0.000"
"ListNPop",0,"0.000"
"DictNew",0,"0.000"
"DictNPop",0,"0.000"
"DictOfConsts",0,"0.000"
"DictConstKeys",0,"0.000"
"ComprListAppend",0,"0.000"
"ComprDictInsert",0,"0.000"
"CheckType",0,"0.000"
"Br",0,"0.000"
"IfBr",0,"0.000"
"Break",0,"0.000"
"IterStop",0,"0.000"
"ReturnCheckType",0,"0.000"
"Call",0,"0.000"
"CallFrozenDef",0,"0.000"
"CallFrozenDefPos",0,"0.000"
"CallFrozenNative",0,"0.000"
"CallFrozen",0,"0.000"
"CallFrozenPos",0,"0.000"
"CallMethod",0,"0.000"
"CallMethodPos",0,"0.000"
"CallMaybeKnownMethod",0,"0.000"
"CallMaybeKnownMethodPos",0,"0.000"
"ArrayIndex2",0,"0.000"
"End",0,"0.000"
