"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[91358],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},61810:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"prelude/rules/java/java_library","title":"java_library","description":"A javalibrary() rule defines a set of Java files that can be compiled together. The main output of a javalibrary() rule is a single JAR file containing all of the compiled class files, as well as the static files specified in the resources argument.","source":"@site/../docs/prelude/rules/java/java_library.md","sourceDirName":"prelude/rules/java","slug":"/prelude/rules/java/java_library","permalink":"/docs/prelude/rules/java/java_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"java_binary","permalink":"/docs/prelude/rules/java/java_binary"},"next":{"title":"java_plugin","permalink":"/docs/prelude/rules/java/java_plugin"}}');var r=s(74848),t=s(28453);s(56289);const o={},a="java_library",d={},l=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"java_library",children:"java_library"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"java_library()"})," rule defines a set of Java files that can be compiled together. The main output of a ",(0,r.jsx)(n.code,{children:"java_library()"})," rule is a single JAR file containing all of the compiled class files, as well as the static files specified in the ",(0,r.jsx)(n.code,{children:"resources"})," argument."]}),"\n",(0,r.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def java_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _build_only_native_code: bool = select({"prelude//android/constraints:build_only_native_code": True, "DEFAULT": False}),\n    _dex_min_sdk_version: None | int = select({"prelude//android/constraints:min_sdk_version_19": 19, "prelude//android/constraints:min_sdk_version_20": 20, "prelude//android/constraints:min_sdk_version_21": 21, "prelude//android/constraints:min_sdk_version_22": 22, "prelude//android/constraints:min_sdk_version_23": 23, "prelude//android/constraints:min_sdk_version_24": 24, "prelude//android/constraints:min_sdk_version_25": 25, "prelude//android/constraints:min_sdk_version_26": 26, "prelude//android/constraints:min_sdk_version_27": 27, "prelude//android/constraints:min_sdk_version_28": 28, "prelude//android/constraints:min_sdk_version_29": 29, "prelude//android/constraints:min_sdk_version_30": 30, "prelude//android/constraints:min_sdk_version_31": 31, "prelude//android/constraints:min_sdk_version_32": 32, "prelude//android/constraints:min_sdk_version_33": 33, "prelude//android/constraints:min_sdk_version_34": 34, "prelude//android/constraints:min_sdk_version_35": 35, "DEFAULT": None}),\n    _dex_toolchain: str = "gh_facebook_buck2_shims_meta//:dex",\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _is_building_android_binary: bool = select({"prelude//os:building_android_binary": True, "DEFAULT": False}),\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java",\n    abi_generation_mode: None | str = None,\n    annotation_processor_deps: list[str] = [],\n    annotation_processor_params: list[str] = [],\n    annotation_processors: list[str] = [],\n    attrs_validators: None | list[str] = None,\n    concat_resources: bool = False,\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    exported_deps: list[str] = [],\n    exported_provided_deps: list[str] = [],\n    extra_arguments: list[str] = [],\n    jar_postprocessor: None | str = None,\n    java_version: None | str = None,\n    javac: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    manifest_file: None | str = None,\n    maven_coords: None | str = None,\n    min_release_version: None | str = None,\n    multi_release_srcs: dict[str, list[str]] = {},\n    never_mark_as_unused_dependency: None | bool = None,\n    non_exec_dep_plugins_deprecated: list[str | (str, list[str])] = [],\n    on_unused_dependencies: None | str = None,\n    plugins: list[str | (str, list[str])] = [],\n    proguard_config: None | str = None,\n    provided_deps: list[str] = [],\n    remove_classes: list[str] = [],\n    required_for_source_only_abi: bool = False,\n    resources: list[str] = [],\n    resources_root: None | str = None,\n    runtime_deps: list[str] = [],\n    source: None | str = None,\n    source_abi_verification_mode: None | str = None,\n    source_only_abi_deps: list[str] = [],\n    srcs: list[str] = [],\n    target: None | str = None,\n    uses_content_based_path_for_jar_snapshot: bool = select({"DEFAULT": False}),\n    uses_content_based_paths_for_classic_java: bool = select({"DEFAULT": False}),\n    validation_deps: list[str] = [],\n) -> None\n'})}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"concat_resources"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Use parallel compression and concatenation of intermediary jars to speed up jar time generation."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"contacts"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"deps"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Rules (usually other ",(0,r.jsx)(n.code,{children:"java_library"})," rules) that are used to generate the classpath required to compile this ",(0,r.jsx)(n.code,{children:"java_library"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"exported_deps"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Other  rules that depend on this rule will also include its ",(0,r.jsx)(n.code,{children:"exported_deps"})," in their classpaths. This is useful when the public API of a rule has return types or checked exceptions that are defined in another rule, which would otherwise require callers to add an extra dependency. It's also useful for exposing e.g. a collection of ",(0,r.jsx)(n.code,{children:"prebuilt_jar"})," rules as a single target for callers to depend on. Targets in ",(0,r.jsx)(n.code,{children:"exported_deps"})," are implicitly included in the ",(0,r.jsx)(n.code,{children:"deps"})," of this rule, so they don't need to be repeated there."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"exported_provided_deps"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["This is a combination of ",(0,r.jsx)(n.code,{children:"provided_deps"})," and ",(0,r.jsx)(n.code,{children:"exported_deps"}),". Rules listed in this parameter will be added to classpath of rules that depend on this rule, but they will not be included in a binary if binary depends on a such target."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"extra_arguments"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["List of additional arguments to pass into the Java compiler. These arguments follow the ones specified in ",(0,r.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"java_version"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Equivalent to setting both ",(0,r.jsx)(n.code,{children:"source"})," and ",(0,r.jsx)(n.code,{children:"target"}),"  to the given value. Setting this and ",(0,r.jsx)(n.code,{children:"source"})," or ",(0,r.jsx)(n.code,{children:"target"})," (or both!) is an error."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"javac"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Specifies the Java compiler program to use for this rule. The value is a source path or an execution dep (e.g., //foo/bar",":bar",'). Overrides the value in "javac" in the "tools" section of ',(0,r.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"labels"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,r.jsx)(n.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,r.jsx)(n.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"licenses"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,r.jsx)(n.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"min_release_version"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Minimal java version that the library should be compatible with. This ensures that both the language features and the bytecode generated are compatible with the specified Java version, and only APIs available in that version are accessible."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"multi_release_srcs"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["The set of ",(0,r.jsx)(n.code,{children:".java"})," files to compile for the mapped java version. Each version will be packed under META-INF/versions/java_version."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"non_exec_dep_plugins_deprecated"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Plugins that do not use the execution platform. This exists for historical reasons, and should not be used. Use ",(0,r.jsx)(n.code,{children:"plugins"})," instead - plugins should be configured for the execution platform since that is where they are used."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"on_unused_dependencies"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Action performed when Buck detects that some dependencies are not used during Java compilation."}),"\n",(0,r.jsx)(n.p,{children:"Note that this feature is experimental and does not handle runtime dependencies."}),"\n",(0,r.jsx)(n.p,{children:"The valid values are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ignore"})," (default): ignore unused dependencies,"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"warn"}),": emit a warning to the console,"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fail"}),": fail the compilation."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This option overrides the default value from\n."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"plugins"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"List of plugins that should be run during compilation of the target. A list of strings may additionally be provided in order to pass additional arguments to the plugin."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"provided_deps"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["These represent dependencies that are known to be provided at run time, but are required in order for the code to compile. Examples of ",(0,r.jsx)(n.code,{children:"provided_deps"})," include the JEE servlet APIs. When this rule is included in a , the ",(0,r.jsx)(n.code,{children:"provided_deps"})," will not be packaged into the output."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"remove_classes"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Specifies a list of ",(0,r.jsx)(n.code,{children:"Patterns"})," that are used to exclude ",(0,r.jsx)(n.code,{children:"classes"})," from the ",(0,r.jsx)(n.code,{children:"JAR"}),". The pattern matching is based on the name of the class. This can be used to exclude a member class or delete a local view of a class that will be replaced during a later stage of the build."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"required_for_source_only_abi"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Indicates that this rule must be present on the classpath during ",(0,r.jsx)(n.code,{children:"source-only ABI generation"})," of any rule that depends on it. Typically this is done when a rule contains annotations, enums, constants, or interfaces."]}),"\n",(0,r.jsx)(n.p,{children:"Having rules present on the classpath during source-only ABI generation prevents Buck from\ncompletely flattening the build graph, thus reducing the performance win from source-only\nABI generation. These rules should be kept small (ideally just containing annotations,\nconstants, enums, and interfaces) and with minimal dependencies of their own."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"resources"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Static files to include with the compiled ",(0,r.jsx)(n.code,{children:".class"})," files. These files can be loaded via ",(0,r.jsx)(n.a,{href:"http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#getResource(java.lang.String)",children:"Class.getResource()"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If ",(0,r.jsx)(n.code,{children:"resources_root"})," isn't set,\nBuck uses the ",(0,r.jsx)(n.code,{children:".buckconfig"}),"\nproperty in ",(0,r.jsx)(n.code,{children:".buckconfig"})," to\ndetermine where resources should be placed within the generated JAR\nfile."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"source"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:['Specifies the version of Java (as a string) to interpret source files as. Overrides the value in "source_level" in the "java" section of ',(0,r.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"source_only_abi_deps"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["These are dependencies that must be present during ",(0,r.jsx)(n.code,{children:"source-only ABI generation"}),". Typically such dependencies are added when some property of the code in this rule prevents source-only ABI generation from being correct without these dependencies being present."]}),"\n",(0,r.jsxs)(n.p,{children:["Having ",(0,r.jsx)(n.code,{children:"source_only_abi_deps"})," prevents Buck from\ncompletely flattening the build graph, thus reducing the performance win from source-only\nABI generation. They should be avoided when possible. Often only a small code change is needed to avoid them.\nFor more information on such code changes, read about\n",(0,r.jsx)(n.code,{children:"source-only ABI generation"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"srcs"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["The set of ",(0,r.jsx)(n.code,{children:".java"})," files to compile for this rule. If any of the files in this list end in ",(0,r.jsx)(n.code,{children:".src.zip"}),", then the entries in the ZIP file that end in ",(0,r.jsx)(n.code,{children:".java"})," will be included as ordinary inputs to compilation. This is common when using a ",(0,r.jsx)(n.code,{children:"genrule()"})," to auto-generate some Java source code that needs to be compiled with some hand-written Java code."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"target"}),": (defaults to: ",(0,r.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:['Specifies the version of Java (as a string) for which to generate code. Overrides the value in "target_level" in the "java" section of ',(0,r.jsx)(n.code,{children:".buckconfig"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"\n# A rule that compiles a single .java file.\njava_library(\n  name = 'JsonUtil',\n  srcs = ['JsonUtil.java'],\n  deps = [\n    '//third_party/guava:guava',\n    '//third_party/jackson:jackson',\n  ],\n)\n\n# A rule that compiles all of the .java files under the directory in\n# which the rule is defined using glob(). It also excludes an\n# individual file that may have additional dependencies, so it is\n# compiled by a separate rule.\njava_library(\n  name = 'messenger',\n  srcs = glob(['**/*.java'], excludes = ['MessengerModule.java']),\n  deps = [\n    '//src/com/facebook/base:base',\n    '//third_party/guava:guava',\n  ],\n)\n\njava_library(\n  name = 'MessengerModule',\n  srcs = ['MessengerModule.java'],\n  deps = [\n    '//src/com/facebook/base:base',\n    '//src/com/google/inject:inject',\n    '//third_party/guava:guava',\n    '//third_party/jsr-330:jsr-330',\n  ],\n)\n\n# A rule that builds a library with both relative and\n# fully-qualified deps.\njava_library(\n  name = 'testutil',\n  srcs = glob(['tests/**/*.java'], excludes = 'tests/**/*Test.java'),\n  deps = [\n    ':lib-fb4a',\n    '//java/com/facebook/base:base',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);