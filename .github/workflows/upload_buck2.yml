name: Build, upload, and tag `buck2`

on:
  push:
    branches:
      - main

jobs:
  get_prelude_hash:
    name: Get the latest prelude hash
    runs-on: ubuntu-latest
    outputs:
      prelude_hash: ${{ steps.get_latest_prelude_hash.outputs.prelude_hash }}
    steps:
      - name: Shallow clone buck2-prelude
        run: git clone --depth=1 https://github.com/facebook/buck2-prelude
      - name: Get latest commit hash into prelude_hash
        id: get_latest_prelude_hash
        run: |
          mkdir artifacts/
          cd buck2-prelude/
          git rev-parse HEAD > ../artifacts/prelude_hash
          echo "prelude_hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
      - name: Upload prelude_hash
        uses: actions/upload-artifact@v3
        with:
          path: artifacts/prelude_hash
          name: prelude_hash

  build:
    needs:
      - get_prelude_hash
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: 'ubuntu-22.04'
            triple: 'aarch64-unknown-linux-gnu'
            cross: true
          - os: 'ubuntu-22.04'
            triple: 'aarch64-unknown-linux-musl'
            cross: true
          - os: 'ubuntu-22.04'
            triple: 'x86_64-unknown-linux-gnu'
          # - os: 'ubuntu-22.04'
          #   triple: 'x86_64-unknown-linux-musl' # Doesn't build
          - os: 'macos-12'
            triple: 'aarch64-apple-darwin'
            cross: true
          - os: 'macos-12'
            triple: 'x86_64-apple-darwin'
          - os: 'windows-2022'
            triple: 'x86_64-pc-windows-msvc'
            is_windows: true
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: SebRollen/toml-action@v1.0.2
        id: read_rust_toolchain
        with:
          file: 'rust-toolchain'
          field: 'toolchain.channel'
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ steps.read_rust_toolchain.outputs.value }}
          targets: ${{ matrix.target.triple }}
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: buck2-upload
          key: ${{ matrix.target.triple }}
      - uses: actions-rs/install@v0.1
        if: matrix.target.cross
        with:
          crate: cross
          version: latest
      - name: Set variables
        id: set_variables
        shell: bash
        run: |
          if [ -n "${{ matrix.target.is_windows }}" ]; then
            echo "cargo_out=target/${{ matrix.target.triple }}/release/buck2.exe" >> "$GITHUB_OUTPUT"
            echo "buck2_zst=artifacts/buck2-${{ matrix.target.triple }}.exe.zst" >> "$GITHUB_OUTPUT"
          else
            echo "cargo_out=target/${{ matrix.target.triple }}/release/buck2" >> "$GITHUB_OUTPUT"
            echo "buck2_zst=artifacts/buck2-${{ matrix.target.triple }}.zst" >> "$GITHUB_OUTPUT"
          fi
      - name: Build
        shell: bash
        env:
          RUSTFLAGS: "-C strip=debuginfo"
        run: |
          if [ -n "${{ matrix.target.cross }}" ]; then
            CARGO=cross
          else
            CARGO=cargo
          fi
          $CARGO build --release --bin buck2 --target ${{ matrix.target.triple }}
      - name: Sanity check with examples/with_prelude
        if: ${{ !matrix.target.cross }}
        shell: bash
        run: |
          BUCK2="$(pwd)/${{ steps.set_variables.outputs.cargo_out }}"
          cd examples/with_prelude
          "$BUCK2" init --git
          cd prelude
          git checkout ${{ needs.get_prelude_hash.outputs.prelude_hash }}
          cd ../
          "$BUCK2" build //rust/... //cpp/... //python/... -v=2
      - name: Move binary to artifacts/
        shell: bash
        run: |
          mkdir artifacts
          zstd -z ${{ steps.set_variables.outputs.cargo_out }} -o ${{ steps.set_variables.outputs.buck2_zst }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.set_variables.outputs.buck2_zst }}

  release_latest:
    name: Release `latest` tag
    needs:
      - build
      - get_prelude_hash
    runs-on: ubuntu-latest
    steps:
      - run: mkdir ${{github.workspace}}/artifacts
      - uses: actions/download-artifact@v3
        with:
          path: ${{github.workspace}}/artifacts
      - name: Display structure of downloaded files
        run: |
          ls -R
        working-directory: ${{github.workspace}}/artifacts
      - uses: pyTooling/Actions/releaser@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'latest'
          files: ${{github.workspace}}/artifacts/**
          rm: true
      - name: Summary
        run: |
          cat <<EOF >> $GITHUB_STEP_SUMMARY
          # "latest" Build Complete! :rocket:
          For the public download links of these build artifacts, please see:
           <https://github.com/facebook/buck2/releases/tag/latest>
          EOF
