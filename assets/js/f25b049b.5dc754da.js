"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[92255],{21570:(e,n,i)=>{i.r(n),i.d(n,{TARGET_NAME:()=>o,assets:()=>a,contentTitle:()=>c,default:()=>b,frontMatter:()=>d,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"getting_started/tutorial_adding_dependencies","title":"Tutorial: Adding Dependencies","description":"Welcome back! In our previous tutorial, we created a","source":"@site/../docs/getting_started/tutorial_adding_dependencies.md","sourceDirName":"getting_started","slug":"/getting_started/tutorial_adding_dependencies","permalink":"/docs/getting_started/tutorial_adding_dependencies","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"tutorial_adding_dependencies","title":"Tutorial: Adding Dependencies"},"sidebar":"main","previous":{"title":"Tutorial: Your First Buck2 Application","permalink":"/docs/getting_started/tutorial_first_build"},"next":{"title":"Tutorial: Adding tests","permalink":"/docs/getting_started/tutorial_adding_tests"}}');var l=i(74848),s=i(28453),t=i(78191);const d={id:"tutorial_adding_dependencies",title:"Tutorial: Adding Dependencies"},c=void 0,a={},o=(0,t.isInternal)()?(0,l.jsx)("code",{children:"fbcode//scripts/<unixname>/buck2_lab/greeter_lib:library"}):(0,l.jsx)("code",{children:"root//buck2_lab/greeter_lib:library"}),h=[{value:"What We&#39;ll Do:",id:"what-well-do",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Adding a Library Directory to Your Project",id:"step-1-adding-a-library-directory-to-your-project",level:2},{value:"Step 2: Creating a library",id:"step-2-creating-a-library",level:2},{value:"Step 3: Building the Library (Optional)",id:"step-3-building-the-library-optional",level:2},{value:"Step 4: Adding a Dependency to the Binary",id:"step-4-adding-a-dependency-to-the-binary",level:2},{value:"Step 5: Run the Binary",id:"step-5-run-the-binary",level:2},{value:"Step 6: Adding a logging dependency to our application",id:"step-6-adding-a-logging-dependency-to-our-application",level:2},{value:"Step 7: The Expected Failure - Understanding Direct vs. Transitive Dependencies",id:"step-7-the-expected-failure---understanding-direct-vs-transitive-dependencies",level:2},{value:"Why did this fail?",id:"why-did-this-fail",level:3},{value:"Step 9: Fixing the Build - Declaring the Direct Dependency",id:"step-9-fixing-the-build---declaring-the-direct-dependency",level:2},{value:"Conclusion:",id:"conclusion",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Welcome back! In our ",(0,l.jsx)(n.a,{href:"../tutorial_first_build",children:"previous tutorial"}),', we created a\nsimple "Hello, World!" application. Now, we\'ll take it a step further by\nlearning how to create and adding dependencies in our project. This is a common\nscenario where you separate concerns into different modules or libraries.']}),"\n",(0,l.jsx)(n.p,{children:"Our goal is to understand how Buck2 manages dependencies."}),"\n",(0,l.jsx)(n.h2,{id:"what-well-do",children:"What We'll Do:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Create a new library directory"}),"\n",(0,l.jsx)(n.li,{children:"Create a library with a simple function"}),"\n",(0,l.jsxs)(n.li,{children:["Define a ",(0,l.jsx)(n.code,{children:"rust_binary"})," target for our library"]}),"\n",(0,l.jsx)(n.li,{children:"Build the library independently"}),"\n",(0,l.jsx)(n.li,{children:"Update our binary to depend on and use this new library"}),"\n",(0,l.jsx)(n.li,{children:"Add a logging dependency to our application"}),"\n",(0,l.jsx)(n.li,{children:"Build and run the binary"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You should follow the ",(0,l.jsx)(n.a,{href:"../tutorial_first_build",children:"previous tutorial"})]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"step-1-adding-a-library-directory-to-your-project",children:"Step 1: Adding a Library Directory to Your Project"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Navigate to your project's root directory"}),"\n"]}),"\n",(0,l.jsxs)(t.FbInternalOnly,{children:[(0,l.jsxs)(n.p,{children:["Navigate to the directory that contains your ",(0,l.jsx)(n.code,{children:"greeter_bin"})," folder, i.e.\n",(0,l.jsx)(n.code,{children:"<FBSOURCE>/fbcode/scripts/<unixname>/buck2_lab"}),"."]}),(0,l.jsx)(n.p,{children:"In your fbsource root,"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd fbcode/scripts/<unixname>/buck2_lab\n"})}),(0,l.jsxs)(n.p,{children:["Replace ",(0,l.jsx)(n.code,{children:"<unixname>"})," with your unixname."]})]}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsxs)(n.p,{children:["Navigate to the ",(0,l.jsx)(n.code,{children:"buck2_lab"})," folder we created in the\n",(0,l.jsx)(n.a,{href:"../tutorial_first_build",children:"previous tutorial"}),"."]})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Create the folders needed for your library"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"mkdir greeter_lib\nmkdir greeter_lib/src\n"})}),"\n",(0,l.jsx)(n.p,{children:"Your project should be like this"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"buck2_lab\n\u251c\u2500\u2500 greeter_bin\n\u2502   \u251c\u2500\u2500 BUCK\n\u2502   \u2514\u2500\u2500 src\n\u2502       \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 greeter_lib\n    \u2514\u2500\u2500 src\n"})}),"\n",(0,l.jsx)(n.h2,{id:"step-2-creating-a-library",children:"Step 2: Creating a library"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Write the library code:"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Inside ",(0,l.jsx)(n.code,{children:"greeter_lib/src/"}),", create a file named ",(0,l.jsx)(n.code,{children:"lib.rs"}),". Add the following Rust\ncode:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:'pub fn greet(name: &str) -> String {\n    let greeting = format!("Hello, {}!", name);\n    greeting\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"This is a simple public function greet that takes a name and returns a greeting\nmessage."}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["Define the library's BUCK file: In the ",(0,l.jsx)(n.code,{children:"greeter_lib"})," directory (i.e.,\n",(0,l.jsx)(n.code,{children:"greeter_lib/"}),"), create a ",(0,l.jsx)(n.code,{children:"BUCK"})," file. Add the following content:"]}),"\n"]}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'load("@fbsource//tools/build_defs:rust_library.bzl", "rust_library")\n\nrust_library(\n    name = "library",\n    srcs = ["src/lib.rs"],\n    visibility = ["PUBLIC"],\n)\n'})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'rust_library(\n    name = "library",\n    srcs = ["src/lib.rs"],\n    visibility = ["PUBLIC"],\n)\n'})})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rust_library"}),": This Buck2 rule is used for compiling Rust libraries."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'name = "library"'}),': We\'re naming our library target "library". This name will\nalso be used by default as the crate name for Rust.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'srcs = ["src/lib.rs"]'}),": Specifies the source file for this library."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'visibility = ["PUBLIC"]'}),": This makes the library visible to all other\ntargets."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"step-3-building-the-library-optional",children:"Step 3: Building the Library (Optional)"}),"\n",(0,l.jsxs)(n.p,{children:["You can build the library by running the following command, in the ",(0,l.jsx)(n.code,{children:"greeter_lib"}),"\nfolder"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd greeter_lib\nbuck2 build :library --show-full-output\n"})}),"\n",(0,l.jsx)(n.p,{children:"You will see an output like this:"}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"...\nBUILD SUCCEEDED\nfbcode//scripts/<unixname>/buck2_lab/greeter_lib:library /.../greeter_lib/__library__/out/LPPMD/liblibrary-1527a50c.rmeta\n"})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"...\nBUILD SUCCEEDED\nroot//buck2_lab/greeter_lib:library /.../greeter_lib/__library__/out/LPPMD/liblibrary-1527a50c.rmeta\n"})})}),"\n",(0,l.jsx)(n.p,{children:"Now, navigate back to the project root:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd ..\n"})}),"\n",(0,l.jsx)(n.h2,{id:"step-4-adding-a-dependency-to-the-binary",children:"Step 4: Adding a Dependency to the Binary"}),"\n",(0,l.jsxs)(n.p,{children:["Next, we'll modify our binary application to use the ",(0,l.jsx)(n.code,{children:"greeter_lib"}),"."]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Write the binary code:"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["For ",(0,l.jsx)(n.code,{children:"greeter_bin/src/main.rs"}),", update the code to use ",(0,l.jsx)(n.code,{children:"greet"})," function in\n",(0,l.jsx)(n.code,{children:"greeter_lib"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let s = library::greet("buck2");\n    println!("{}", s);\n}\n\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Update the binary's BUCK file:"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["In the ",(0,l.jsx)(n.code,{children:"greeter_bin"})," directory (i.e., ",(0,l.jsx)(n.code,{children:"buck2_lab/greeter_bin/BUCK"}),"), update the\nBUCK file."]}),"\n",(0,l.jsxs)(t.FbInternalOnly,{children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'load("@fbsource//tools/build_defs:rust_binary.bzl", "rust_binary")\n\nrust_binary(\n    name = "main",\n    srcs = ["src/main.rs"],\n    # Add the dep to our library\n    deps = ["fbcode//scripts/<unixname>/buck2_lab/greeter_lib:library"],\n)\n'})}),(0,l.jsxs)(n.p,{children:["Replace ",(0,l.jsx)(n.code,{children:"<unixname>"})," with your unixname."]})]}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'rust_binary(\n    name = "main",\n    srcs = ["src/main.rs"],\n    # Add the dep to our library\n    deps = ["root//buck2_lab/greeter_lib:library"],\n)\n'})})}),"\n","\n",(0,l.jsxs)(n.p,{children:["You can also use ",(0,l.jsx)(n.code,{children:"buck2 targets :"})," command in ",(0,l.jsx)(n.code,{children:"greeter_lib"})," folder to get the\nfull target name of the library."]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,t.isInternal)()?(0,l.jsx)("code",{children:'deps = ["fbcode//scripts/<unixname>/buck2_lab/greeter_lib:library"]'}):(0,l.jsx)("code",{children:'deps = ["root//buck2_lab/greeter_lib:library"]'}),": This is the\ncrucial new part!","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"deps"})," declares dependencies for this target. It accepts a list of targets."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"step-5-run-the-binary",children:"Step 5: Run the Binary"}),"\n",(0,l.jsxs)(n.p,{children:["Now, let's build and run our binary application, which dependencies ",(0,t.isInternal)()?(0,l.jsx)("code",{children:"fbcode//scripts/<unixname>/buck2_lab/greeter_lib:library"}):(0,l.jsx)("code",{children:"root//buck2_lab/greeter_lib:library"}),"."]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Run the binary:"}),"\n"]}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"buck2 run fbcode//scripts/<unixname>/buck2_lab/greeter_bin:main\n"})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"buck2 run root//buck2_lab/greeter_bin:main\n"})})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Expected output:"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"You should see the following output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"...\nBUILD SUCCEEDED - starting your binary\nHello, buck2!\n"})}),"\n",(0,l.jsx)(n.h2,{id:"step-6-adding-a-logging-dependency-to-our-application",children:"Step 6: Adding a logging dependency to our application"}),"\n",(0,l.jsxs)(n.p,{children:["Imagine that as our application grows, we realize we want to log information\nabout what's happening inside our functions. This is a common need for debugging\nor just understanding the flow. To help with this, let's say we've prepared a\nsimple, shared logging library for you. ",(0,l.jsxs)(t.FbInternalOnly,{children:[" The library is\n",(0,l.jsx)(n.code,{children:"fbcode//buck2/docs/buck2_lab/logging_lib:logging_lib"}),". "]}),"\n",(0,l.jsxs)(t.OssOnly,{children:[" You can find it at\n",(0,l.jsx)(n.a,{href:"https://github.com/facebook/buck2/tree/main/docs/buck2_lab/logging_lib",children:"https://github.com/facebook/buck2/tree/main/docs/buck2_lab/logging_lib"})," and copy\nthe folder into ",(0,l.jsx)(n.code,{children:"buck2_lab"})," folder. "]})]}),"\n",(0,l.jsx)(n.p,{children:"Our first step is to make our existing greeter_lib use this new logging_lib."}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Update ",(0,l.jsx)(n.code,{children:"greeter_lib/BUCK"}),":"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Now, modify ",(0,l.jsx)(n.code,{children:"buck2_lab/greeter_lib/BUCK"})," to declare a dependency on\n",(0,l.jsx)(n.code,{children:"logging_lib"}),"."]}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'load("@fbsource//tools/build_defs:rust_library.bzl", "rust_library")\n\nrust_library(\n    name = "library",\n    srcs = ["src/lib.rs"],\n    visibility = ["PUBLIC"],\n    deps = [\n        # Add the dep to our logging_lib\n        "fbcode//buck2/docs/buck2_lab/logging_lib:logging_lib",\n    ],\n)\n'})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'rust_library(\n    name = "library",\n    srcs = ["src/lib.rs"],\n    visibility = ["PUBLIC"],\n    deps = [\n        # Add the dep to our logging_lib\n        "root//buck2_lab/logging_lib:logging_lib",\n    ],\n)\n'})})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["Update ",(0,l.jsx)(n.code,{children:"greeter_lib/src/lib.rs"}),":"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:'pub fn greet(name: &str) -> String {\n    // Let\'s use our new logging library!\n    logging_lib::info("Entered greet function in library");\n\n    let greeting = format!("Hello, {}!", name);\n\n    logging_lib::info("Exiting greet function in library");\n    greeting\n}\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsxs)(n.li,{children:["Update ",(0,l.jsx)(n.code,{children:"greeter_bin/src/main.rs"}),":"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    logging_lib::info("Starting...");\n\n    let message = library::greet("Buck2");\n    println!("{}", message);\n\n    logging_lib::info("Exit.");\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"step-7-the-expected-failure---understanding-direct-vs-transitive-dependencies",children:"Step 7: The Expected Failure - Understanding Direct vs. Transitive Dependencies"}),"\n",(0,l.jsx)(n.p,{children:"Our dependencies relationship is now like this:"}),"\n",(0,l.jsx)(n.mermaid,{value:"graph TD\n    A[main] --\x3e B(library)\n    B --\x3e C(logging_lib)\n    style A fill:#lightgrey,stroke:#333,stroke-width:2px"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"main"})," depends on ",(0,l.jsx)(n.code,{children:"library"}),", and ",(0,l.jsx)(n.code,{children:"library"})," depends on ",(0,l.jsx)(n.code,{children:"logging_lib"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Let's try to run ",(0,l.jsx)(n.code,{children:"main"}),":"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Attempt to run the binary:"}),"\n"]}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"buck2 run fbcode//scripts/<unixname>/buck2_lab/greeter_bin:main\n"})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"buck2 run root//buck2_lab/greeter_bin:main\n"})})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Expected Outcome: Build Failure!"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"You will encounter a compile-time error like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'error[E0433]: failed to resolve: use of unresolved module or unlinked crate `logging_lib`\n --\x3e fbcode/scripts/<unixname>/buck2_lab/greeter_bin/src/main.rs:4:5\n  |\n4 |     logging_lib::info("Starting...");\n  |     ^^^^^^^^^^^ use of unresolved module or unlinked crate `logging_lib`\n  |\n  = help: you might be missing a crate named `logging_lib`\n\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `logging_lib`\n --\x3e fbcode/scripts/<unixname>/buck2_lab/greeter_bin/src/main.rs:9:5\n  |\n9 |     logging_lib::info("Exit.");\n  |     ^^^^^^^^^^^ use of unresolved module or unlinked crate `logging_lib`\n  |\n  = help: you might be missing a crate named `logging_lib`\n\n\nerror: aborting due to 2 previous errors\n'})}),"\n",(0,l.jsxs)(n.p,{children:["This means that ",(0,l.jsx)(n.code,{children:"logging_lib"})," cannot be found in our ",(0,l.jsx)(n.code,{children:"main"})," binary."]}),"\n",(0,l.jsx)(n.h3,{id:"why-did-this-fail",children:"Why did this fail?"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"greeter_bin/src/main.rs"})," directly calls ",(0,l.jsx)(n.code,{children:"logging_lib::info()"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["However, ",(0,l.jsx)(n.code,{children:"greeter_bin/BUCK"})," only lists ",(0,l.jsx)(n.code,{children:"greeter_lib:library"})," as a direct\ndependency."]}),"\n",(0,l.jsxs)(n.li,{children:["Even though ",(0,l.jsx)(n.code,{children:"greeter_lib:library"})," depends on ",(0,l.jsx)(n.code,{children:"logging_lib"}),', this dependency is\nnot automatically "passed through" (transitive) or made directly available to\ngreeter_bin\'s source code for compilation by Rust.']}),"\n",(0,l.jsxs)(n.li,{children:["For ",(0,l.jsx)(n.code,{children:"greeter_bin/src/main.rs"})," to directly use symbols from ",(0,l.jsx)(n.code,{children:"logging_lib"}),", the\n",(0,l.jsx)(n.code,{children:"logging_lib"})," crate needs to be explicitly available to ",(0,l.jsx)(n.code,{children:"greeter_bin:main"}),"\nduring its compilation."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"step-9-fixing-the-build---declaring-the-direct-dependency",children:"Step 9: Fixing the Build - Declaring the Direct Dependency"}),"\n",(0,l.jsxs)(n.p,{children:["To fix this, we need to tell Buck2 that ",(0,l.jsx)(n.code,{children:"greeter_bin"})," also has a direct\ndependency on ",(0,l.jsx)(n.code,{children:"logging_lib"}),"."]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Update ",(0,l.jsx)(n.code,{children:"greeter_bin/BUCK"}),":"]}),"\n"]}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'load("@fbsource//tools/build_defs:rust_binary.bzl", "rust_binary")\n\nrust_binary(\n    name = "main",\n    srcs = ["src/main.rs"],\n    deps = [\n        "fbcode//scripts/<unixname>/buck2_lab/greeter_lib:library",\n        "fbcode//buck2/docs/buck2_lab/logging_lib:logging_lib",  # Add this line\n    ],\n)\n'})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'rust_binary(\n    name = "main",\n    srcs = ["src/main.rs"],\n    deps = [\n        "root//buck2_lab/greeter_lib:library",\n        "root//buck2_lab/logging_lib:logging_lib",  # Add this line\n    ],\n)\n'})})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Run the binary:"}),"\n"]}),"\n",(0,l.jsx)(t.FbInternalOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"buck2 run fbcode//scripts/<unixname>/buck2_lab/greeter_bin:main\n"})})}),"\n",(0,l.jsx)(t.OssOnly,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"buck2 run root//buck2_lab/greeter_bin:main\n"})})}),"\n",(0,l.jsx)(n.p,{children:"You should see the output like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"...\nBUILD SUCCEEDED - starting your binary\n[INFO] Starting...\n[INFO] Entered greet function in library\n[INFO] Exiting greet function in library\nHello, Buck2!\n[INFO] Exit.\n"})}),"\n",(0,l.jsx)(n.p,{children:"The final dependency graph should be like this:"}),"\n",(0,l.jsx)(n.mermaid,{value:"graph TD\n    A[main] --\x3e B(library)\n    B --\x3e C(logging_lib)\n    A --\x3e C\n    style A fill:#lightgrey,stroke:#333,stroke-width:2px"}),"\n",(0,l.jsx)(n.h2,{id:"conclusion",children:"Conclusion:"}),"\n",(0,l.jsx)(n.p,{children:"Congratulations! \ud83e\udd73"}),"\n",(0,l.jsx)(n.p,{children:"You've successfully created a multi-target Rust project with Buck2, where a\nbinary depends multiple targets!"}),"\n",(0,l.jsx)(n.p,{children:"We've covered:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Structuring a project with separate library and binary components."}),"\n",(0,l.jsxs)(n.li,{children:["Defining ",(0,l.jsx)(n.code,{children:"rust_library"})," and ",(0,l.jsx)(n.code,{children:"rust_binary"})," targets."]}),"\n",(0,l.jsx)(n.li,{children:"Declaring dependencies between targets using the deps attribute."}),"\n",(0,l.jsx)(n.li,{children:"Building and running an application that uses libraries dependencies."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"This foundational skill of managing dependencies is key to building larger, more\ncomplex applications."})]})}function b(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var r=i(96540);const l={},s=r.createContext(l);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);