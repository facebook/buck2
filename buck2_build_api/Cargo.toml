[package]
name = "buck2_build_api"
version = "0.1.0"
edition = "2021"
description = "Build related interpreter defs, coercion logic, some build rule impelementations, and handing actions off to DICE for caching and execution. A large chunk of the 'build' part of BuckV2"

[dependencies]
dashmap = "4.0.2"
anyhow = "1.0.51"
async-recursion = "1.0"
async-trait = "0.1.24"
blake3 = "0.3.7"
buck2_bxl_core = { path = "../buck2_bxl_core" }
buck2_core = { path = "../buck2_core" }
buck2_common = { path = "../buck2_common" }
buck2_node = { path = "../buck2_node" }
buck2_query = { path = "../buck2_query" }
buck2_query_parser = { path = "../buck2_query_parser" }
buck2_build_api_derive = { path = "../buck2_build_api_derive" }
bumpalo = "3.8"
dice = { path = "../dice/dice" }
derive_more = "0.99.3"
derivative = "2.1.1"
faccess = "0.2.3"
events = { path = "../events" }
hashbrown = { version = "0.11.2", features = ["raw"] }
buck2_data = { path = "../buck2_data" }
once_cell = "1.3"
indoc = "1.0"
inventory = "0.1.10"
fancy-regex = "0.5.0"
futures = "0.3"
futures-util = "0.3.3"
host_sharing = { path = "../host_sharing" }
internment = "0.4.0"
itertools = "0.10.0"
gazebo_lint.version = "0.1"
gazebo_lint.optional = true
# @oss-disable: gazebo_lint.path = "../gazebo_lint/gazebo_lint"
owning_ref = "0.4.1"
# @oss-disable: remote_execution = { path = "../remote_execution/stub" }
remote_execution = { path = "../remote_execution/stub" } # @oss-enable
slog = "2.7.0"
prost = "0.7"
prost-types = "0.7"
regex = "1.3.1"
tracing = "0.1.22"
tracing-subscriber = "0.3"
twox-hash = "1.6.1"
gazebo.version = "0.7.1"
gazebo.features = ["str_pattern_extensions"]
# @oss-disable: gazebo.path = "../gazebo/gazebo"
ref-cast = "1.0.0"
shlex = "1.0.0"
starlark = { version = "0.9.0-pre", path = "../starlark-rust/starlark" }
starlark_map = { version = "0.9.0-pre", path = "../starlark-rust/starlark_map" }
static_assertions = "1.1.0"
buck2_interpreter = { path = "../buck2_interpreter" }
structopt = "0.3.0"
take_mut = "0.2.2"
tempfile = "3.1"
test_api = { path = "../test_api" }
thiserror = "1.0.9"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.48"
tokio = { version = "1.5", features = ["full"]}
tokio-stream = { version = "0.1.4", features = ["fs", "io-util", "net", "sync", "time"] }
glob = "0.3.0"
indexmap = { version = "1.6", features = ["serde-1"] }
either = "1.5"
fbinit.version = "0.1"
# @oss-disable: fbinit.path = "../../common/rust/shed/fbinit"
maplit = "1.0.2"
reqwest = { version = "0.11.4", features = ["stream"] }
sha-1 = "0.8"
sha2 = "0.8"
hex = "0.4.2"
pin-project = "0.4"
libc = "0.2"
num_cpus = "1.11"
smallvec = "1.7"
assert_matches = "1.5"
toml = "=0.5.8"
# @oss-disable: edenfs = { package = "thrift", path = "../../eden/fs/service", optional = true }
nix = "0.22"
crossbeam-channel = "0.5"
# 0.9.8 is only compatible with nightly 1.61
crossbeam-epoch = "=0.9.7"
more_futures = { path = "../shed/more_futures" }
http = "0.2"
parking_lot = { version = "0.11.2" }
zstd = "0.11.1"

[target.'cfg(unix)'.dependencies]
jemallocator = { version = "0.3.2", features = ["profiling"] }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["everything"] }

[[bin]]
name = "interpret"
path = "bin/interpret.rs"

[[bin]]
name = "macroparse"
path = "bin/utilities/macro_parse.rs"

[features]
# @oss-disable: default = ["gazebo_lint", "eden_materializer"]
# @oss-disable: eden_materializer = ["edenfs"]
eden_materializer = [] # @oss-enable
