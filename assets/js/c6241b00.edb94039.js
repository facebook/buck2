"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40963],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(96540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}},79440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"about/bootstrapping","title":"Bootstrapping Buck2","description":"Buck2 can be built with cargo or buck2. The source repository includes","source":"@site/../docs/about/bootstrapping.md","sourceDirName":"about","slug":"/about/bootstrapping","permalink":"/docs/about/bootstrapping","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"bootstrapping","title":"Bootstrapping Buck2"},"sidebar":"main","previous":{"title":"Benefits When Compared to Buck1","permalink":"/docs/about/benefits/compared_to_buck1"},"next":{"title":"Getting Started with Buck2","permalink":"/docs/getting_started/"}}');var s=n(74848),r=n(28453);const i={id:"bootstrapping",title:"Bootstrapping Buck2"},c="Bootstrapping Buck2",a={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"bootstrapping-buck2",children:"Bootstrapping Buck2"})}),"\n",(0,s.jsxs)(t.p,{children:["Buck2 can be built with ",(0,s.jsx)(t.code,{children:"cargo"})," or ",(0,s.jsx)(t.code,{children:"buck2"}),". The source repository includes\n",(0,s.jsx)(t.a,{href:"https://dotslash-cli.com",children:"DotSlash"})," files for ",(0,s.jsx)(t.code,{children:"buck2"})," itself, so that you can\nquickly self-bootstrap the build. This is particularly useful if you're writing\npatches and need to test both builds."]}),"\n",(0,s.jsxs)(t.p,{children:["For dependencies on Rust crates from ",(0,s.jsx)(t.a,{href:"https://crates.io",children:"crates.io"}),", we use\n",(0,s.jsx)(t.a,{href:"https://github.com/facebookincubator/reindeer",children:"reindeer"})," to automatically\ngenerate ",(0,s.jsx)(t.code,{children:"BUCK"})," files."]}),"\n",(0,s.jsxs)(t.p,{children:["Note that the resulting binary will be compiled without optimisations or\n",(0,s.jsx)(t.a,{href:"https://github.com/jemalloc/jemalloc",children:"jemalloc"}),", so we recommend using the\nCargo-produced binary in further development."]}),"\n",(0,s.jsxs)(t.p,{children:["First, install ",(0,s.jsx)(t.code,{children:"dotslash"})," with ",(0,s.jsx)(t.code,{children:"Cargo"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"cargo install --locked dotslash\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Next, use ",(0,s.jsx)(t.code,{children:"reindeer"})," to buckify dependencies:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"cd buck2/\n./bootstrap/reindeer --third-party-dir shim/third-party/rust buckify\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Build a copy of ",(0,s.jsx)(t.code,{children:"buck2"})," with ",(0,s.jsx)(t.code,{children:"buck2"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"./bootstrap/buck2 build //:buck2\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);