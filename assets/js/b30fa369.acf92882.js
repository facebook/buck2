"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64307],{24912:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"prelude/rules/java/java_binary","title":"java_binary","description":"A javabinary() rule is used to create a JAR file of the compiled .class files and resources of the javalibrary() rules on which it depends.","source":"@site/../docs/prelude/rules/java/java_binary.md","sourceDirName":"prelude/rules/java","slug":"/prelude/rules/java/java_binary","permalink":"/docs/prelude/rules/java/java_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"java_annotation_processor","permalink":"/docs/prelude/rules/java/java_annotation_processor"},"next":{"title":"java_library","permalink":"/docs/prelude/rules/java/java_library"}}');var t=s(74848),r=s(28453);s(56289);const a={},l="java_binary",d={},o=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"java_binary",children:"java_binary"})}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"java_binary()"})," rule is used to create a JAR file of the compiled .class files and resources of the ",(0,t.jsx)(n.code,{children:"java_library()"})," rules on which it depends."]}),"\n",(0,t.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def java_binary(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _build_only_native_code: bool = select({"prelude//android/constraints:build_only_native_code": True, "DEFAULT": False}),\n    _exec_os_type: str = "prelude//os_lookup/targets:os_lookup",\n    _is_building_android_binary: bool = select({"prelude//os:building_android_binary": True, "DEFAULT": False}),\n    _java_toolchain: str = "gh_facebook_buck2_shims_meta//:java",\n    base_dep: None | str = None,\n    blocklist: list[str] = [],\n    build_manifest: None | str = None,\n    concat_deps: bool = False,\n    constraint_overrides: list[None | str] = [],\n    contacts: list[str] = [],\n    default_cxx_platform: None | str = None,\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    do_not_create_inner_jar: bool = False,\n    generate_wrapper: bool = False,\n    incremental_target_prefix: None | str = None,\n    java_args_for_run_info: list[str] = [],\n    java_runtime: None | str = None,\n    java_version: None | str = None,\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    main_class: None | str = None,\n    manifest_file: None | str = None,\n    meta_inf_directory: None | str = None,\n    platform_override: None | str = None,\n    proguard_config: None | str = None,\n    proguard_jvm_args: list[str] = [],\n    proguard_library_jars: list[str] = [],\n) -> None\n'})}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,t.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,t.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"base_dep"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Rule (normally of type ",(0,t.jsx)(n.code,{children:"java_library"}),") that should be compiled and used as a base JAR to receive all dependencies through an append operation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"blocklist"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A list of patterns that identify files to exclude from the final generated JAR file. Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"java_binary(\n  name = 'example',\n  blocklist = [\n    # Excludes com.example.A and com.example.Alligator,\n    # as well as their inner classes and any non-class files that happen to match\n    # the pattern\n    'com.example.A',\n\n    # Excludes all files from org/slf4j/**/*.\n    'org.slf4j',\n  ],\n  deps = [\n    ':example1',\n    ':third-party-stuff',\n  ],\n)\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"build_manifest"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"MANIFEST containing stamped build attributes, that should be merged into the main jar manifest"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"concat_deps"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Use zip concatenation instead of repacking all dependency jars, which is faster"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"contacts"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"deps"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Rules (normally of type ",(0,t.jsx)(n.code,{children:"java_library"}),") that should be compiled and whose ",(0,t.jsx)(n.code,{children:".class"})," files and resources should be included in the generated JAR file."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"java_runtime"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Expected java version used at runtime"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"java_version"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Expected java version used at compile time"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"labels"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,t.jsx)(n.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,t.jsx)(n.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"licenses"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,t.jsx)(n.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"main_class"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["If provided, this will be the value specified as the ",(0,t.jsx)(n.code,{children:"Main-Class"})," attribute of the ",(0,t.jsx)(n.code,{children:"META-INF/MANIFEST.MF"})," file in the generated JAR file. Also, when this rule is used as an executable in a ",(0,t.jsx)(n.code,{children:"genrule()"}),", ",(0,t.jsx)(n.code,{children:"main_class"})," will indicate the class whose ",(0,t.jsx)(n.code,{children:"main()"})," method will be invoked to process the command-line arguments. This is consistent with the expected usage of ",(0,t.jsx)(n.code,{children:"java -jar *<name.jar>* *<args>*"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"manifest_file"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["If provided, this manifest will be used when generating the JAR file. If combined with ",(0,t.jsx)(n.code,{children:"main_class"}),", the specified manifest file will be used but the ",(0,t.jsx)(n.code,{children:"main_class"})," will override the main class in the manifest."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);