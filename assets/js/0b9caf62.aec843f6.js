"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17176],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var n=s(96540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},44804:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"prelude/rules/apple/resource_group_map","title":"resource_group_map","description":"Function Signature","source":"@site/../docs/prelude/rules/apple/resource_group_map.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/resource_group_map","permalink":"/docs/prelude/rules/apple/resource_group_map","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"prebuilt_apple_framework","permalink":"/docs/prelude/rules/apple/prebuilt_apple_framework"},"next":{"title":"scene_kit_assets","permalink":"/docs/prelude/rules/apple/scene_kit_assets"}}');var r=s(74848),i=s(28453);s(56289);const a={},l="resource_group_map",o={},c=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3}];function d(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"resource_group_map",children:"resource_group_map"})}),"\n",(0,r.jsx)(t.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'def resource_group_map(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    map: list[(str, list[(str | list[str], str, None | str)])],\n) -> None\n'})}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(t.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(t.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(t.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(t.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);