"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[13600],{28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>l});var n=t(96540);const i={},r=n.createContext(i);function s(e){const o=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:o},e.children)}},45040:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api/build/CommandExecutorConfig","title":"CommandExecutorConfig","description":"def CommandExecutorConfig(","source":"@site/../docs/api/build/CommandExecutorConfig.md","sourceDirName":"api/build","slug":"/api/build/CommandExecutorConfig","permalink":"/docs/api/build/CommandExecutorConfig","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"CellRoot","permalink":"/docs/api/build/CellRoot"},"next":{"title":"CommandLineInputs","permalink":"/docs/api/build/CommandLineInputs"}}');var i=t(74848),r=t(28453),s=t(56289);const l={},a="CommandExecutorConfig",c={},d=[];function u(e){const o={code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"commandexecutorconfig",children:"CommandExecutorConfig"})}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["def CommandExecutorConfig(\n*,\nlocal_enabled: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"}),",\nremote_enabled: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"}),",\nremote_cache_enabled: None | ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = None,\nremote_dep_file_cache_enabled: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nremote_execution_properties = None,\nremote_execution_action_key = None,\nremote_execution_max_input_files_mebibytes: None | ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/int",children:"int"})," = None,\nremote_execution_queue_time_threshold_s: None | ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/int",children:"int"})," = None,\nremote_execution_use_case = None,\nuse_limited_hybrid: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nallow_limited_hybrid_fallbacks: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nallow_hybrid_fallbacks_on_failure: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nuse_windows_path_separators: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nuse_persistent_workers: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nuse_bazel_protocol_remote_persistent_workers: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nallow_cache_uploads: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nmax_cache_upload_mebibytes: None | ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/int",children:"int"})," = None,\nexperimental_low_pass_filter: ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/bool",children:"bool"})," = False,\nremote_output_paths: None | ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/str",children:"str"})," = None,\nremote_execution_resource_units: None | ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/int",children:"int"})," = None,\nremote_execution_dependencies: list[dict[",(0,i.jsx)(s.default,{to:"/docs/api/starlark/str",children:"str"}),", ",(0,i.jsx)(s.default,{to:"/docs/api/starlark/str",children:"str"}),"]] = [],\nremote_execution_dynamic_image = None,\nmeta_internal_extra_params: None | dict = None,\n) -> ",(0,i.jsx)(s.default,{to:"/docs/api/build/CommandExecutorConfig",children:"CommandExecutorConfig"})]})}),"\n",(0,i.jsx)(o.p,{children:"Contains configurations for how actions should be executed"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"local_enabled"})," : Whether to use local execution for this execution platform.\nIf both remote_enabled and local_enabled are ",(0,i.jsx)(o.code,{children:"True"}),", we will use the hybrid executor"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_enabled"}),": Whether to use remote execution for this execution platform"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_cache_enabled"}),": Whether to query RE caches"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_properties"}),": Properties for remote execution for this platform"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_action_key"}),": A component to inject into the action key\nThis should typically used to inject variability into the action key so that\nit's different across e.g. build modes (RE uses the action key for things like expected memory utilization)"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_max_input_files_mebibytes"}),": The maximum input file size (in bytes) that remote execution can support"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_queue_time_threshold_s"}),": The maximum time in seconds we are willing to wait\nin the RE queue for remote execution to start running our action"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_use_case"}),": The use case to use when communicating with RE"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"use_limited_hybrid"}),": Whether to use the limited hybrid executor"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"allow_limited_hybrid_fallbacks"}),": Whether to allow fallbacks"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"allow_hybrid_fallbacks_on_failure"}),": Whether to allow fallbacks when the result is failure (i.e. the command failed on the primary, but the infra worked)"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"use_windows_path_separators"}),": Whether to use Windows path separators in command line arguments"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"use_persistent workers"}),": Whether to use persistent workers for local execution if they are available"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"use_bazel_protocol_remote_persistent_workers"}),": Whether to use persistent workers for remote execution via the Bazel remote persistent worker protocol if they are available"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"allow_cache_uploads"}),": Whether to upload local actions to the RE cache"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"max_cache_upload_mebibytes"}),": Maximum size to upload in cache uploads"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"experimental_low_pass_filter"}),": Whether to use the experimental low pass filter"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_output_paths"}),": How to express output paths to RE"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_resource_units"}),": The resources (eg. GPUs) to use for remote execution"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_dependencies"}),": Dependencies for remote execution for this platform"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"remote_execution_custom_image"}),": Custom Tupperware image for remote execution for this platform"]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"meta_internal_extra_params"}),": Json dict of extra params to pass to RE related to Meta internal infra."]}),"\n"]})]})}function h(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);