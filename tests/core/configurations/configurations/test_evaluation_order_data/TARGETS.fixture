load(":defs.bzl", "incoming_edge_transition_stub")

# These tests reproduce the exact behavior of which "dependencies" are evaluated
# in different situations when performing configuration.

constraint_setting(
    name = "dead_setting",
)

constraint_value(
    name = "dead",
    constraint_setting = ":dead_setting",
)

constraint_setting(
    name = "animal",
)

constraint_value(
    name = "cat",
    constraint_setting = ":animal",
)

constraint_value(
    name = "dog",
    constraint_setting = ":animal",
)

platform(
    name = "p-cat",
    constraint_values = [
        ":cat",
    ],
)

platform(
    name = "p-dog",
    constraint_values = [
        ":dog",
    ],
)

execution_platform(
    name = "p-exec-cat",
    platform = ":p-cat",
)

execution_platform(
    name = "p-exec-dog",
    platform = ":p-dog",
)

execution_platforms(
    name = "exec_platforms",
    platforms = [":p-exec-cat", ":p-exec-dog"],
)

stub(
    name = "target",
)

### Select keys

stub(
    name = "select_keys_error_in_dead_branch",
    deps = select({
        ":dead": select({
            ":doesnotexist": [],
        }),
        "DEFAULT": [],
    }),
    default_target_platform = ":p-cat",
)

stub(
    name = "select_keys_error_before_compatibility",
    deps = select({
        ":doesnotexit": [],
    }),
    default_target_platform = ":p-cat",
    target_compatible_with = [":dead"],
)

### Select resolution

stub(
    name = "select_resolution_error_after_compatibility",
    deps = select({
        ":dog": [],
    }),
    default_target_platform = ":p-cat",
    target_compatible_with = [":dead"],
)

stub(
    name = "fail_select_resolution",
    deps = select({
        ":dead": [],
    }),
)

stub(
    name = "select_resolution_error_in_dep_after_self_compatibility",
    deps = [":fail_select_resolution"],
    default_target_platform = ":p-cat",
    target_compatible_with = [":dead"],
)

stub(
    name = "incompat",
    target_compatible_with = [":dead"],
)

stub(
    name = "select_resolution_error_in_dep_after_dep_compatibility",
    deps = [":fail_select_resolution", ":incompat"],
    default_target_platform = ":p-cat",
)

stub(
    name = "incompat_cat",
    target_compatible_with = [":dog"],
)

stub(
    name = "fail_select_resolution_cat",
    deps = select({
        ":dog": [],
    }),
)

stub(
    name = "select_resolution_error_in_exec_dep_after_exec_dep_compatibility_1",
    exec_deps = [":incompat_cat", ":fail_select_resolution_cat"],
)

stub(
    name = "select_resolution_error_in_exec_dep_after_exec_dep_compatibility_2",
    exec_deps = [":fail_select_resolution_cat", ":incompat_cat"],
)

### Configured dep platform

stub(
    name = "configured_dep_platform_error_in_dead_branch",
    configured_deps = select({
        ":dead": [(":target", ":doesnotexist")],
        "DEFAULT": [],
    }),
    default_target_platform = ":p-cat",
)

stub(
    name = "configured_dep_platform_error_after_compatibility",
    configured_deps = [(":target", ":doesnotexist")],
    default_target_platform = ":p-cat",
    target_compatible_with = [":dead"],
)

incoming_edge_transition_stub(
    name = "incoming_edge_transition_with_broken_configured_dep",
    configured_deps = [(":target", ":doesnotexist")],
    target_compatible_with = [":dead"],
)

stub(
    name = "configured_dep_platform_error_before_compatibility_when_incoming_edge_transition",
    deps = [":incoming_edge_transition_with_broken_configured_dep"],
    default_target_platform = ":p-cat",
)

stub_toolchain(
    name = "incompat_toolchain_with_broken_configured_dep",
    configured_deps = [(":target", ":doesnotexist")],
    target_compatible_with = [":dead"],
)

stub(
    name = "configured_dep_platform_error_before_compatibility_when_toolchain",
    toolchain_deps = [":incompat_toolchain_with_broken_configured_dep"],
    default_target_platform = ":p-cat",
)

### Compatibility attributes

stub(
    name = "compatibility_attrs_error_in_dead_branch",
    target_compatible_with = select({
        ":dead": [":doesnotexist"],
        "DEFAULT": [],
    }),
    default_target_platform = ":p-cat",
)

stub(
    name = "compatibility_attrs_exec_compatible_errors_before_compatibility",
    exec_compatible_with = [":doesnotexist"],
    compatible_with = [":dead"],
    default_target_platform = ":p-cat",
)

### Default target platform

stub(
    name = "with_broken_dtp",
    default_target_platform = ":doesnotexist",
)

stub(
    name = "default_target_platform_no_error_in_dep",
    deps = [":with_broken_dtp"],
    default_target_platform = ":p-cat",
)

stub(
    name = "default_target_platform_no_error_if_global_override",
    # Built with `--target-platforms` set
    default_target_platform = ":doesnotexist",
)
