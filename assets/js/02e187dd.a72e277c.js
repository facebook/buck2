"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88248],{28453:(t,e,a)=>{a.d(e,{R:()=>n,x:()=>c});var r=a(96540);const i={},s=r.createContext(i);function n(t){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:n(t.components),r.createElement(s.Provider,{value:e},t.children)}},78718:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/build/OutputArtifact","title":"OutputArtifact","description":"OutputArtifact.as\\\\_input","source":"@site/../docs/api/build/OutputArtifact.md","sourceDirName":"api/build","slug":"/api/build/OutputArtifact","permalink":"/docs/api/build/OutputArtifact","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"LocalResourceInfo","permalink":"/docs/api/build/LocalResourceInfo"},"next":{"title":"PackagePath","permalink":"/docs/api/build/PackagePath"}}');var i=a(74848),s=a(28453),n=a(56289);const c={},o="OutputArtifact",u={},l=[{value:"OutputArtifact.as_input",id:"outputartifactas_input",level:2},{value:"OutputArtifact.basename",id:"outputartifactbasename",level:2},{value:"OutputArtifact.extension",id:"outputartifactextension",level:2},{value:"OutputArtifact.is_source",id:"outputartifactis_source",level:2},{value:"OutputArtifact.owner",id:"outputartifactowner",level:2},{value:"OutputArtifact.short_path",id:"outputartifactshort_path",level:2}];function d(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"outputartifact",children:"OutputArtifact"})}),"\n",(0,i.jsx)(e.h2,{id:"outputartifactas_input",children:"OutputArtifact.as_input"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["def OutputArtifact.as_input(\n) -> ",(0,i.jsx)(n.default,{to:"/docs/api/build/PromiseArtifact",children:"Artifact"})]})}),"\n",(0,i.jsx)(e.p,{children:"Returns the input artifact from which this output artifact was constructed"}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"outputartifactbasename",children:"OutputArtifact.basename"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["OutputArtifact.basename: ",(0,i.jsx)(n.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,i.jsxs)(e.p,{children:["The base name of this artifact. e.g. for an artifact at ",(0,i.jsx)(e.code,{children:"foo/bar"}),", this is ",(0,i.jsx)(e.code,{children:"bar"})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"outputartifactextension",children:"OutputArtifact.extension"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["OutputArtifact.extension: ",(0,i.jsx)(n.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,i.jsxs)(e.p,{children:["The file extension of this artifact. e.g. for an artifact at foo/bar.sh, this is ",(0,i.jsx)(e.code,{children:".sh"}),". If no extension is present, ",(0,i.jsx)(e.code,{children:'""'})," is returned."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"outputartifactis_source",children:"OutputArtifact.is_source"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["OutputArtifact.is_source: ",(0,i.jsx)(n.default,{to:"/docs/api/starlark/bool",children:"bool"})]})}),"\n",(0,i.jsx)(e.p,{children:"Whether the artifact represents a source file"}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"outputartifactowner",children:"OutputArtifact.owner"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["OutputArtifact.owner: ",(0,i.jsx)(n.default,{to:"/docs/api/build/Label",children:"Label"})," | None"]})}),"\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"Label"})," of the rule that originally created this artifact. May also be None in the case of source files, or if the artifact has not be used in an action, or if the action was not created by a rule."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"outputartifactshort_path",children:"OutputArtifact.short_path"}),"\n",(0,i.jsx)("pre",{class:"language-python",children:(0,i.jsxs)("code",{children:["OutputArtifact.short_path: ",(0,i.jsx)(n.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,i.jsxs)(e.p,{children:["The interesting part of the path, relative to somewhere in the output directory. For an artifact declared as ",(0,i.jsx)(e.code,{children:"foo/bar"}),", this is ",(0,i.jsx)(e.code,{children:"foo/bar"}),"."]})]})}function h(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}}}]);