"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[52624],{28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>a});var n=t(96540);const r={},i=n.createContext(r);function l(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(i.Provider,{value:s},e.children)}},44590:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"prelude/rules/halide/halide_library","title":"halide_library","description":"A halide\\\\_library() rule represents a set of Halide sources, along with the \\"compiler\\" code needed to compile them into object format (see the Halide site for information about Halide and about static compilation of Halide pipelines). The object code will be generated for the target architecture.","source":"@site/../docs/prelude/rules/halide/halide_library.md","sourceDirName":"prelude/rules/halide","slug":"/prelude/rules/halide/halide_library","permalink":"/docs/prelude/rules/halide/halide_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"halide","permalink":"/docs/prelude/rules/halide/"},"next":{"title":"haskell","permalink":"/docs/prelude/rules/haskell/"}}');var r=t(74848),i=t(28453);t(56289);const l={},a="halide_library",o={},d=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"halide_library",children:"halide_library"})}),"\n",(0,r.jsxs)(s.p,{children:['A halide_library() rule represents a set of Halide sources, along with the "compiler" code needed to compile them into object format (see ',(0,r.jsx)(s.a,{href:"http://halide-lang.org",children:"the Halide site"})," for information about Halide and about static compilation of Halide pipelines). The object code will be generated for the target architecture."]}),"\n",(0,r.jsx)(s.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'def halide_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    compiler_deps: list[str] = [],\n    compiler_flags: list[str] = [],\n    compiler_invocation_flags: list[str] = [],\n    configs: dict[str, dict[str, str]] = {},\n    contacts: list[str] = [],\n    cxx_runtime_type: None | str = None,\n    default_host_platform: None | str = None,\n    default_platform: None | str = None,\n    defaults: dict[str, str] = {},\n    deps: list[str] = [],\n    deps_query: None | str = None,\n    devirt_enabled: bool = False,\n    executable_name: None | str = None,\n    fat_lto: bool = False,\n    focused_list_target: None | str = None,\n    frameworks: list[str] = [],\n    function_name: None | str = None,\n    header_namespace: None | str = None,\n    headers: list[str] | dict[str, str] = [],\n    headers_as_raw_headers_mode: None | str = None,\n    include_directories: list[str] = [],\n    labels: list[str] = [],\n    lang_compiler_flags: dict[str, list[str]] = {},\n    lang_platform_compiler_flags: dict[str, list[(str, list[str])]] = {},\n    lang_platform_preprocessor_flags: dict[str, list[(str, list[str])]] = {},\n    lang_preprocessor_flags: dict[str, list[str]] = {},\n    libraries: list[str] = [],\n    licenses: list[str] = [],\n    link_deps_query_whole: bool = False,\n    link_group: None | str = None,\n    link_group_map: None | str | list[(str, list[(None | str | list[None | str], str, None | str | list[str], None | str)], None | dict[str, typing.Any])] = None,\n    link_style: None | str = None,\n    linker_extra_outputs: list[str] = [],\n    linker_flags: list[str] = [],\n    platform_compiler_flags: list[(str, list[str])] = [],\n    platform_deps: list[(str, list[str])] = [],\n    platform_headers: list[(str, list[str] | dict[str, str])] = [],\n    platform_linker_flags: list[(str, list[str])] = [],\n    platform_preprocessor_flags: list[(str, list[str])] = [],\n    platform_srcs: list[(str, list[str | (str, list[str])])] = [],\n    post_linker_flags: list[str] = [],\n    post_platform_linker_flags: list[(str, list[str])] = [],\n    precompiled_header: None | str = None,\n    prefer_stripped_objects: bool = False,\n    prefix_header: None | str = None,\n    preprocessor_flags: list[str] = [],\n    raw_headers: list[str] = [],\n    srcs: list[str | (str, list[str])] = [],\n    supported_platforms_regex: None | str = None,\n    thin_lto: bool = False,\n    version_universe: None | str = None,\n    weak_framework_names: list[str] = [],\n) -> None\n'})}),"\n",(0,r.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"name"}),": (required)"]}),"\n",(0,r.jsx)(s.p,{children:"name of the target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"default_target_platform"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"target_compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"visibility"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"within_view"}),": (defaults to: ",(0,r.jsx)(s.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"metadata"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tests"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"modifiers"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compiler_deps"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The dependencies of the halide compiler itself. Targets that depend on the halide_library rule will not include or link the outputs of these targets."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"compiler_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Flags to use when compiling any of the above sources (which require compilation)."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"contacts"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"deps"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The dependencies of the generated halide pipeline code. This is useful if, for example, your pipeline calls an external function using Halide::Func::define_extern."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"labels"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,r.jsx)(s.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,r.jsx)(s.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"licenses"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,r.jsx)(s.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"linker_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"Flags to add to the linker command line whenever the output from this rule is used in a link operation, such as linked into an executable or a shared library."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"platform_compiler_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Platform specific compiler flags. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of flags to use when compiling the target's sources. See ",(0,r.jsx)(s.code,{children:"compiler_flags"})," for more information."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"platform_linker_flags"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Platform-specific linker flags. This argument is specified as a list of pairs where the first element in each pair is an un-anchored regex against which the platform name is matched. The regex should use ",(0,r.jsx)(s.code,{children:"java.util.regex.Pattern"})," syntax. The second element in each pair is a list of linker flags. If the regex matches the platform, these flags are added to the linker command line when the output from this rule is used in a link operation."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"srcs"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"The set of halide sources to compile for this rule. The sources will be compiled and linked for the host architecture, and the resulting binary will be run to produce the object code for the Halide pipeline."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"supported_platforms_regex"}),": (defaults to: ",(0,r.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,r.jsx)(s.p,{children:"If present, an un-anchored regex (in java.util.regex.Pattern syntax) that matches all platforms that this library supports. It will not be built for other platforms."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"\nhalide_library(\n  # Your library name.\n  name = 'brighter',\n\n  # Your pipeline + compiler sources.\n  srcs = ['halide/main.cpp'],\n\n  # Any dependencies for your compiler. Note that targets that depend on\n  # this rule WILL NOT include or link the output(s) of these targets.\n  compiler_deps = [\n    # You'll need libHalide to use this rule; in our example, we assume it's\n    # located in the 'third-party/halide' directory.\n    '//third-party/halide:halide'\n  ],\n\n  # Any dependencies for your generated shader. Targets that depend on this\n  # rule will include and/or link the output(s) of these targets.\n  deps = [\n    # ...\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);