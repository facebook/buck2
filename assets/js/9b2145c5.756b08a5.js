"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[48172],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},89262:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"prelude/rules/apple/apple_resource","title":"apple_resource","description":"An appleresource() rule contains sets of resource directories, files and file variants that can be bundled in an application bundle. This rule does not have any output on its own and can be built only as a dependency (either direct or transitive) of an applebundle() rule.","source":"@site/../docs/prelude/rules/apple/apple_resource.md","sourceDirName":"prelude/rules/apple","slug":"/prelude/rules/apple/apple_resource","permalink":"/docs/prelude/rules/apple/apple_resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apple_package","permalink":"/docs/prelude/rules/apple/apple_package"},"next":{"title":"apple_resource_bundle","permalink":"/docs/prelude/rules/apple/apple_resource_bundle"}}');var t=s(74848),r=s(28453);s(56289);const l={},a="apple_resource",d={},o=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"apple_resource",children:"apple_resource"})}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.code,{children:"apple_resource()"})," rule contains sets of resource directories, files and file variants that can be bundled in an application bundle. This rule does not have any output on its own and can be built only as a dependency (either direct or transitive) of an ",(0,t.jsx)(n.code,{children:"apple_bundle()"})," rule."]}),"\n",(0,t.jsx)(n.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def apple_resource(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    codesign_entitlements: None | str = None,\n    codesign_flags_override: None | list[str] = None,\n    codesign_on_copy: bool = False,\n    contacts: list[str] = [],\n    content_dirs: list[str] = [],\n    default_host_platform: None | str = None,\n    destination: None | str = None,\n    dirs: list[str] = [],\n    files: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    named_variants: dict[str, list[str]] = {},\n    resources_from_deps: list[str] = [],\n    skip_universal_resource_dedupe: bool = False,\n    variants: list[str] = [],\n) -> None\n'})}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"}),": (required)"]}),"\n",(0,t.jsx)(n.p,{children:"name of the target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"default_target_platform"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"target_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"visibility"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"within_view"}),": (defaults to: ",(0,t.jsx)(n.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"metadata"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tests"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"modifiers"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"codesign_on_copy"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"False"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Indicates whether the files specified in the files arg in this resource should be code signed with the identity used to sign the overall bundle. This is useful for e.g. dylibs or other additional binaries copied into the bundle. The caller is responsible to ensure that the file format is valid for codesigning."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"content_dirs"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of paths of directories containing resource files that should be placed in an application bundle. Unlike ",(0,t.jsx)(n.code,{children:"dirs"}),", the directories themselves are not placed in the bundle."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"destination"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"None"}),")"]}),"\n",(0,t.jsx)(n.p,{children:'Specifies the destination in the final application bundle where resource will be copied. Possible values: "resources", "frameworks", "executables", "plugins", "xpcservices".'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"dirs"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Set of paths of resource directories that should be placed in an application bundle."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"files"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Set of paths of resource files that should be placed in an application bundle."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"named_variants"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"{}"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Mapping from a variant name to the list of resource file paths which should be placed in an application bundle. Those files will be placed in a directory with name equal to the corresponding key in this mapping. Keys should end with ",(0,t.jsx)(n.code,{children:".lproj"})," suffix. (e.g. ",(0,t.jsx)(n.code,{children:"Base.lproj"}),", ",(0,t.jsx)(n.code,{children:"en.lproj"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"resources_from_deps"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of build targets whose transitive ",(0,t.jsx)(n.code,{children:"apple_resource"}),"s should be considered as part of the current resource when collecting resources for bundles."]}),"\n",(0,t.jsxs)(n.p,{children:["Usually, an ",(0,t.jsx)(n.code,{children:"apple_bundle"})," collects all ",(0,t.jsx)(n.code,{children:"apple_resource"})," rules transitively\nreachable through apple_library rules. This field allows for resources which are not reachable\nusing the above traversal strategy to be considered for inclusion in the bundle."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"variants"}),": (defaults to: ",(0,t.jsx)(n.code,{children:"[]"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["Set of paths of resource file variants that should be placed in an application bundle. The files mentioned here should be placed in a directory named ",(0,t.jsx)(n.code,{children:"$VARIANT_NAME.lproj"}),", where ",(0,t.jsx)(n.code,{children:"$VARIANT_NAME"})," is the name of the variant (e.g. ",(0,t.jsx)(n.code,{children:"Base"}),", ",(0,t.jsx)(n.code,{children:"en"}),"). This argument makes it possible to use different resource files based on the active locale."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\n\napple_resource(\n  name = 'Images',\n  files = glob([\n    '*.png',\n  ]),\n  dirs = [\n    'PrettyImages',\n  ],\n)\n\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);