"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87530],{28453:(e,s,l)=>{l.d(s,{R:()=>r,x:()=>a});var t=l(96540);const n={},i=t.createContext(n);function r(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(i.Provider,{value:s},e.children)}},48338:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"prelude/rules/haskell/haskell_library","title":"haskell_library","description":"A haskell_library() rule is used to identity a group of Haskell sources.","source":"@site/../docs/prelude/rules/haskell/haskell_library.md","sourceDirName":"prelude/rules/haskell","slug":"/prelude/rules/haskell/haskell_library","permalink":"/docs/prelude/rules/haskell/haskell_library","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"haskell_ide","permalink":"/docs/prelude/rules/haskell/haskell_ide"},"next":{"title":"haskell_prebuilt_library","permalink":"/docs/prelude/rules/haskell/haskell_prebuilt_library"}}');var n=l(74848),i=l(28453);l(56289);const r={},a="haskell_library",c={},d=[{value:"Function Signature",id:"function-signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"haskell_library",children:"haskell_library"})}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(s.code,{children:"haskell_library()"})," rule is used to identity a group of Haskell sources."]}),"\n",(0,n.jsx)(s.h3,{id:"function-signature",children:"Function Signature"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'def haskell_library(\n    *,\n    name: str,\n    default_target_platform: None | str = None,\n    target_compatible_with: list[str] = [],\n    compatible_with: list[str] = [],\n    exec_compatible_with: list[str] = [],\n    visibility: list[str] = [],\n    within_view: list[str] = ["PUBLIC"],\n    metadata: OpaqueMetadata = {},\n    tests: list[str] = [],\n    modifiers: OpaqueMetadata = [],\n    _apple_platforms: dict[str, str] = {},\n    _cxx_toolchain: str = "gh_facebook_buck2_shims_meta//:cxx",\n    _haskell_toolchain: str = "gh_facebook_buck2_shims_meta//:haskell",\n    compiler_flags: list[str] = [],\n    contacts: list[str] = [],\n    default_host_platform: None | str = None,\n    deps: list[str] = [],\n    enable_profiling: bool = False,\n    ghci_platform_preload_deps: list[(str, list[str])] = [],\n    ghci_preload_deps: list[str] = [],\n    haddock_flags: list[str] = [],\n    labels: list[str] = [],\n    licenses: list[str] = [],\n    link_whole: bool = False,\n    linker_flags: list[str] = [],\n    platform: None | str = None,\n    platform_deps: list[(str, list[str])] = [],\n    platform_linker_flags: list[(str, list[str])] = [],\n    preferred_linkage: str = "any",\n    srcs: list[str] | dict[str, str] = [],\n    template_deps: list[str] = [],\n) -> None\n'})}),"\n",(0,n.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"name"}),": (required)"]}),"\n",(0,n.jsx)(s.p,{children:"name of the target"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"default_target_platform"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"None"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"specifies the default target platform, used when no platforms are specified on the command line"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"target_compatible_with"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"compatible_with"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with a configuration"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"exec_compatible_with"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"visibility"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a list of visibility patterns restricting what targets can depend on this one"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"within_view"}),": (defaults to: ",(0,n.jsx)(s.code,{children:'["PUBLIC"]'}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a list of visibility patterns restricting what this target can depend on"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"metadata"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"{}"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a key-value map of metadata associated with this target"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"tests"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"a list of targets that provide tests for this one"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"modifiers"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"an array of modifiers associated with this target"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"compiler_flags"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"Flags to pass to the Haskell compiler when compiling this rule's sources."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"contacts"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"A list of organizational contacts for this rule. These could be individuals who you would contact in the event of a failure or other issue with the rule."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"contacts = [ 'Joe Sixpack', 'Erika Mustermann' ]\n"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"deps"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["Either ",(0,n.jsx)(s.code,{children:"haskell_library()"})," or ",(0,n.jsx)(s.code,{children:"prebuilt_haskell_library()"})," rules from which this rules sources import modules or native linkable rules exporting symbols this rules sources call into."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"labels"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["Set of arbitrary strings which allow you to annotate a ",(0,n.jsx)(s.a,{href:"https://buck2.build/docs/concepts/build_rule/",children:"build rule"})," with tags that can be searched for over an entire dependency tree using ",(0,n.jsx)(s.code,{children:"buck query()"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"licenses"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["Set of license files for this library. To get the list of license files for a given build rule and all of its dependencies, you can use ",(0,n.jsx)(s.a,{href:"https://buck2.build/docs/users/commands/query/",children:"buck query"})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"platform_deps"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["Platform specific dependencies. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of dependencies (same format as ",(0,n.jsx)(s.code,{children:"deps"}),") that are exported if the platform matches the regex. See ",(0,n.jsx)(s.code,{children:"deps"})," for more information."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"srcs"}),": (defaults to: ",(0,n.jsx)(s.code,{children:"[]"}),")"]}),"\n",(0,n.jsx)(s.p,{children:"A list of Haskell sources to be built by this rule. The dictionary option is deprecated."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"\nhaskell_library(\n  name = 'fileutil',\n  srcs = [\n    'FileUtil.hs',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);